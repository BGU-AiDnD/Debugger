[Bugs]
GammaDistribution.getNumericalMean
[InitialTests]
org.apache.commons.math3.random.Well512aTest.testFloatDirect
org.apache.commons.math3.random.Well19937aTest.testNextIntExtremeValues
org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextGamma
[TestDetails]
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAbs;[0, 1, 2, 3, 4, 5, 6];[0, 1, 2, 3, 4, 5, 6];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAcos;[3, 5, 7, 8, 9, 10, 11, 12, 13, 14];[3, 5, 7, 8, 9, 10, 11, 12, 13, 14];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAcosh;[3, 5, 11, 12, 14, 15, 16, 17, 18];[3, 5, 11, 12, 14, 15, 16, 17, 18];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAdd;[0, 2, 3, 4, 5, 19, 20, 21, 22, 23];[0, 2, 3, 4, 5, 19, 20, 21, 22, 23];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAddDouble;[3, 5, 11, 22];[3, 5, 11, 22];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAddField;[3, 5, 11, 20, 21, 22];[3, 5, 11, 20, 21, 22];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAsin;[3, 5, 9, 11, 12, 14, 24, 25, 26];[3, 5, 9, 11, 12, 14, 24, 25, 26];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAsinh;[3, 5, 11, 12, 14, 18, 29, 33, 2908];[3, 5, 11, 12, 14, 18, 29, 33, 2908];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan;[3, 5, 9, 11, 14, 34, 35];[3, 5, 9, 11, 14, 34, 35];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2;[0, 2, 3, 4, 5, 8, 9, 12, 14, 20, 21, 22, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46];[0, 2, 3, 4, 5, 8, 9, 12, 14, 20, 21, 22, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtan2SpecialCases;[3, 5, 9, 12, 14, 19, 20, 21, 35, 36, 37, 38, 40, 41, 42, 45, 46];[3, 5, 9, 12, 14, 19, 20, 21, 35, 36, 37, 38, 40, 41, 42, 45, 46];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testAtanh;[3, 5, 11, 14, 18, 47, 48, 49];[3, 5, 11, 14, 18, 47, 48, 49];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testCbrt;[3, 5, 11, 14, 36, 50, 51];[3, 5, 11, 14, 36, 50, 51];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testCbrtDefinition;[0, 2, 3, 4, 5, 14, 18, 20, 36, 38, 39, 43, 46, 50, 51, 52, 53];[0, 2, 3, 4, 5, 14, 18, 20, 36, 38, 39, 43, 46, 50, 51, 52, 53];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testCbrtPow3;[0, 2, 3, 4, 5, 14, 20, 36, 39, 42, 43, 50, 51, 54];[0, 2, 3, 4, 5, 14, 20, 36, 39, 42, 43, 50, 51, 54];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testCeil;[3, 4, 5, 11, 55, 56];[3, 4, 5, 11, 55, 56];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testCeilFloorRintLong;[0, 2, 3, 4, 5, 20, 27, 28, 30, 31, 32, 39, 43, 55, 56, 57, 58, 59, 60];[0, 2, 3, 4, 5, 20, 27, 28, 30, 31, 32, 39, 43, 55, 56, 57, 58, 59, 60];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testCompose;[0, 2, 3, 4, 5, 14, 20, 22, 39, 42, 43, 54, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69];[0, 2, 3, 4, 5, 14, 20, 22, 39, 42, 43, 54, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testComposeMismatchedDimensions;[3, 5, 56, 62, 69, 70, 71];[3, 5, 56, 62, 69, 70, 71];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testCompositionOneVariableX;[0, 2, 3, 4, 5, 12, 14, 19, 20, 36, 37, 38, 42, 44, 46, 51, 56, 69, 72];[0, 2, 3, 4, 5, 12, 14, 19, 20, 36, 37, 38, 42, 44, 46, 51, 56, 69, 72];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testCompositionOneVariableY;[0, 2, 3, 4, 5, 12, 14, 19, 20, 36, 37, 38, 42, 44, 46, 51, 56, 69, 72];[0, 2, 3, 4, 5, 12, 14, 19, 20, 36, 37, 38, 42, 44, 46, 51, 56, 69, 72];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testConstant;[0, 2, 3, 4, 5, 19, 23];[0, 2, 3, 4, 5, 19, 23];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testCopySign;[0, 2, 3, 4, 5, 6, 73];[0, 2, 3, 4, 5, 6, 73];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testCopySignDouble;[3, 5, 6, 11, 73];[3, 5, 6, 11, 73];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testCopySignField;[3, 5, 6, 11, 73];[3, 5, 6, 11, 73];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testCos;[3, 5, 11, 14, 74, 75, 76, 77, 78, 79, 80, 81];[3, 5, 11, 14, 74, 75, 76, 77, 78, 79, 80, 81];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testCosAcos;[0, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 20, 39, 43, 74, 75, 76, 77, 78, 79, 80, 81];[0, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 20, 39, 43, 74, 75, 76, 77, 78, 79, 80, 81];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testCosh;[3, 5, 11, 14, 53, 82, 83, 84, 85, 86];[3, 5, 11, 14, 53, 82, 83, 84, 85, 86];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testCoshAcosh;[0, 2, 3, 4, 5, 12, 14, 15, 16, 17, 18, 20, 39, 43, 53, 82, 83, 84, 85, 86];[0, 2, 3, 4, 5, 12, 14, 15, 16, 17, 18, 20, 39, 43, 53, 82, 83, 84, 85, 86];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testCoshDefinition;[0, 2, 3, 4, 5, 14, 20, 21, 22, 38, 39, 43, 46, 53, 54, 82, 83, 84, 85, 86, 87, 88, 89];[0, 2, 3, 4, 5, 14, 20, 21, 22, 38, 39, 43, 46, 53, 54, 82, 83, 84, 85, 86, 87, 88, 89];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testDegRad;[0, 2, 3, 4, 5, 8, 20, 39, 43, 90, 91];[0, 2, 3, 4, 5, 8, 20, 39, 43, 90, 91];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testDivideDouble;[3, 5, 11, 44];[3, 5, 11, 44];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testDivideField;[3, 5, 11, 14, 20, 37, 38, 42, 44, 46];[3, 5, 11, 14, 20, 37, 38, 42, 44, 46];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testEquals;[3, 4, 5, 23, 56, 69, 92, 93];[3, 4, 5, 23, 56, 69, 92, 93];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testExp;[0, 2, 3, 4, 5, 14, 53, 87, 88];[0, 2, 3, 4, 5, 14, 53, 87, 88];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testExpm1;[3, 5, 11, 14, 53, 83, 94, 95];[3, 5, 11, 14, 53, 83, 94, 95];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testExpm1Definition;[0, 2, 3, 4, 5, 14, 20, 39, 43, 53, 56, 58, 83, 87, 88, 94, 95];[0, 2, 3, 4, 5, 14, 20, 39, 43, 53, 56, 58, 83, 87, 88, 94, 95];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testExpression;[0, 2, 3, 4, 5, 14, 19, 20, 21, 22, 27, 28, 30, 31, 32, 38, 42, 46, 52, 54, 96, 97];[0, 2, 3, 4, 5, 14, 19, 20, 21, 22, 27, 28, 30, 31, 32, 38, 42, 46, 52, 54, 96, 97];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testField;[0, 2, 3, 4, 5, 19, 23, 56, 58, 69];[0, 2, 3, 4, 5, 19, 23, 56, 58, 69];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testFloor;[3, 4, 5, 11, 56, 59];[3, 4, 5, 11, 56, 59];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testGetField;[3, 4, 5, 11, 56, 58];[3, 4, 5, 11, 56, 58];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testHash;[3, 4, 5, 23, 56, 69, 98, 99];[3, 4, 5, 23, 56, 69, 98, 99];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testHypot;[1, 3, 5, 6, 11, 12, 14, 20, 21, 22, 36, 42, 51, 54, 72, 100, 101, 102];[1, 3, 5, 6, 11, 12, 14, 20, 21, 22, 36, 42, 51, 54, 72, 100, 101, 102];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testHypotDefinition;[0, 2, 3, 4, 5, 12, 14, 20, 21, 22, 36, 39, 42, 43, 51, 54, 72, 100, 101, 102];[0, 2, 3, 4, 5, 12, 14, 20, 21, 22, 36, 39, 42, 43, 51, 54, 72, 100, 101, 102];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testHypotNeglectible;[0, 1, 2, 3, 4, 5, 6, 19, 20, 101, 102];[0, 1, 2, 3, 4, 5, 6, 19, 20, 101, 102];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testHypotNoOverflow;[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 36, 42, 51, 54, 72, 100, 101, 102];[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 36, 42, 51, 54, 72, 100, 101, 102];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testHypotSpecial;[2, 3, 4, 5, 19, 20, 27, 28, 30, 31, 32, 97, 101];[2, 3, 4, 5, 19, 20, 27, 28, 30, 31, 32, 97, 101];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testLinearCombination1DoubleDS;[0, 2, 3, 4, 5, 19, 20, 21, 22, 23, 54, 56, 58, 69, 103, 104];[0, 2, 3, 4, 5, 19, 20, 21, 22, 23, 54, 56, 58, 69, 103, 104];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testLinearCombination1DSDS;[0, 2, 3, 4, 5, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 42, 54, 56, 58, 69, 103, 104];[0, 2, 3, 4, 5, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 42, 54, 56, 58, 69, 103, 104];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testLinearCombination2DoubleDS;[0, 2, 3, 4, 5, 19, 20, 21, 22, 23, 54, 56, 69, 103, 104, 105, 106, 107, 108];[0, 2, 3, 4, 5, 19, 20, 21, 22, 23, 54, 56, 69, 103, 104, 105, 106, 107, 108];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testLinearCombination2DSDS;[0, 2, 3, 4, 5, 19, 20, 21, 22, 23, 42, 54, 56, 69, 103, 104, 105, 106, 107, 108];[0, 2, 3, 4, 5, 19, 20, 21, 22, 23, 42, 54, 56, 69, 103, 104, 105, 106, 107, 108];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testLinearCombinationDaFa;[3, 4, 5, 11, 19, 20, 21, 22, 23, 54, 56, 58, 69, 103, 104, 105, 106, 107, 108];[3, 4, 5, 11, 19, 20, 21, 22, 23, 54, 56, 58, 69, 103, 104, 105, 106, 107, 108];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testLinearCombinationDF2;[3, 4, 5, 11, 19, 20, 21, 22, 23, 54, 56, 58, 69, 103, 104, 105, 106, 107, 108];[3, 4, 5, 11, 19, 20, 21, 22, 23, 54, 56, 58, 69, 103, 104, 105, 106, 107, 108];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testLinearCombinationDF3;[3, 4, 5, 11, 19, 20, 21, 22, 23, 54, 56, 58, 69, 103, 104, 105, 106, 107, 108];[3, 4, 5, 11, 19, 20, 21, 22, 23, 54, 56, 58, 69, 103, 104, 105, 106, 107, 108];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testLinearCombinationDF4;[3, 4, 5, 11, 19, 20, 21, 22, 23, 54, 56, 58, 69, 103, 104, 105, 106, 107, 108];[3, 4, 5, 11, 19, 20, 21, 22, 23, 54, 56, 58, 69, 103, 104, 105, 106, 107, 108];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testLinearCombinationFaFa;[3, 4, 5, 11, 19, 20, 21, 22, 23, 42, 54, 56, 58, 69, 103, 104, 105, 106, 107, 108];[3, 4, 5, 11, 19, 20, 21, 22, 23, 42, 54, 56, 58, 69, 103, 104, 105, 106, 107, 108];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testLinearCombinationFF2;[3, 4, 5, 11, 19, 20, 21, 22, 23, 42, 54, 56, 58, 69, 103, 104, 105, 106, 107, 108];[3, 4, 5, 11, 19, 20, 21, 22, 23, 42, 54, 56, 58, 69, 103, 104, 105, 106, 107, 108];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testLinearCombinationFF3;[3, 4, 5, 11, 19, 20, 21, 22, 23, 42, 54, 56, 58, 69, 103, 104, 105, 106, 107, 108];[3, 4, 5, 11, 19, 20, 21, 22, 23, 42, 54, 56, 58, 69, 103, 104, 105, 106, 107, 108];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testLinearCombinationFF4;[3, 4, 5, 11, 19, 20, 21, 22, 23, 42, 54, 56, 58, 69, 103, 104, 105, 106, 107, 108];[3, 4, 5, 11, 19, 20, 21, 22, 23, 42, 54, 56, 58, 69, 103, 104, 105, 106, 107, 108];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testLog;[0, 2, 3, 4, 5, 14, 18, 19, 46, 109, 110];[0, 2, 3, 4, 5, 14, 18, 19, 46, 109, 110];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testLog10Definition;[0, 2, 3, 4, 5, 14, 18, 20, 39, 43, 44, 109, 110, 111, 112, 113];[0, 2, 3, 4, 5, 14, 18, 20, 39, 43, 44, 109, 110, 111, 112, 113];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testLog10Power;[0, 2, 3, 4, 5, 14, 18, 20, 38, 39, 42, 43, 52, 53, 87, 109, 111, 112, 113];[0, 2, 3, 4, 5, 14, 18, 20, 38, 39, 42, 43, 52, 53, 87, 109, 111, 112, 113];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testLog1p;[3, 5, 11, 14, 18, 114, 115, 116];[3, 5, 11, 14, 18, 114, 115, 116];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testLog1pDefinition;[0, 2, 3, 4, 5, 14, 18, 20, 21, 22, 39, 43, 56, 58, 109, 110, 114, 115, 116];[0, 2, 3, 4, 5, 14, 18, 20, 21, 22, 39, 43, 56, 58, 109, 110, 114, 115, 116];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testLog1pExpm1;[0, 2, 3, 4, 5, 14, 18, 20, 39, 43, 53, 83, 94, 95, 114, 115, 116];[0, 2, 3, 4, 5, 14, 18, 20, 39, 43, 53, 83, 94, 95, 114, 115, 116];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testLogExp;[0, 2, 3, 4, 5, 14, 18, 20, 39, 43, 53, 87, 88, 109, 110];[0, 2, 3, 4, 5, 14, 18, 20, 39, 43, 53, 87, 88, 109, 110];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testMissingOrders;[0, 2, 3, 4, 5, 70, 71];[0, 2, 3, 4, 5, 70, 71];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testMultiply;[0, 2, 3, 4, 5, 19, 20, 42, 54];[0, 2, 3, 4, 5, 19, 20, 42, 54];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testMultiplyDouble;[3, 5, 11, 54];[3, 5, 11, 54];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testMultiplyField;[3, 5, 11, 20, 42, 54];[3, 5, 11, 20, 42, 54];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testMultiplyInt;[3, 5, 11, 54];[3, 5, 11, 54];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testNegate;[0, 2, 3, 4, 5, 6, 19, 23];[0, 2, 3, 4, 5, 6, 19, 23];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testOneOrderConstructor;[0, 2, 3, 4, 5, 20, 21, 22, 23, 39, 43, 56, 69, 70, 71, 93, 104, 117];[0, 2, 3, 4, 5, 20, 21, 22, 23, 39, 43, 56, 69, 70, 71, 93, 104, 117];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testOneParameterConstructor;[0, 2, 3, 4, 5, 14, 23, 56, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 93, 104, 117];[0, 2, 3, 4, 5, 14, 23, 56, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 93, 104, 117];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testPow;[0, 2, 3, 4, 5, 14, 20, 21, 22, 23, 38, 42, 46, 52, 54, 56, 58, 69];[0, 2, 3, 4, 5, 14, 20, 21, 22, 23, 38, 42, 46, 52, 54, 56, 58, 69];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testPowDouble;[3, 5, 11, 14, 18, 38, 46, 52, 53];[3, 5, 11, 14, 18, 38, 46, 52, 53];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testPowField;[3, 5, 11, 14, 18, 20, 38, 42, 46, 52, 53, 87, 109];[3, 5, 11, 14, 18, 20, 38, 42, 46, 52, 53, 87, 109];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testPowInt;[3, 5, 11, 14, 38, 46, 52];[3, 5, 11, 14, 38, 46, 52];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testPowReciprocalPow;[0, 2, 3, 4, 5, 14, 18, 20, 38, 39, 42, 43, 46, 52, 53, 87, 89, 109];[0, 2, 3, 4, 5, 14, 18, 20, 38, 39, 42, 43, 46, 52, 53, 87, 89, 109];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testPrimitiveAdd;[0, 2, 3, 4, 5, 19, 22, 23, 27, 28, 30, 31, 32, 97];[0, 2, 3, 4, 5, 19, 22, 23, 27, 28, 30, 31, 32, 97];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testPrimitiveMultiply;[0, 2, 3, 4, 5, 19, 23, 54];[0, 2, 3, 4, 5, 19, 23, 54];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testPrimitiveRemainder;[0, 2, 3, 4, 5, 20, 22, 39, 43, 118];[0, 2, 3, 4, 5, 20, 22, 39, 43, 118];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testPrimitiveSubtract;[0, 2, 3, 4, 5, 19, 22, 23, 39];[0, 2, 3, 4, 5, 19, 22, 23, 39];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testReciprocal;[0, 2, 3, 4, 5, 14, 19, 27, 28, 30, 31, 32, 38, 46, 56, 69, 89, 97];[0, 2, 3, 4, 5, 14, 19, 27, 28, 30, 31, 32, 38, 46, 56, 69, 89, 97];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testRemainder;[0, 2, 3, 4, 5, 20, 39, 43, 54, 118, 119];[0, 2, 3, 4, 5, 20, 39, 43, 54, 118, 119];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testRemainderDouble;[3, 5, 11, 118];[3, 5, 11, 118];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testRemainderField;[3, 5, 11, 20, 118, 119];[3, 5, 11, 20, 118, 119];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testRint;[3, 4, 5, 11, 56, 57];[3, 4, 5, 11, 56, 57];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testRootN;[3, 5, 11, 12, 14, 18, 36, 46, 51, 53];[3, 5, 11, 12, 14, 18, 36, 46, 51, 53];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testRootNSingularity;[0, 2, 3, 4, 5, 12, 14, 19, 27, 28, 30, 31, 32, 36, 46, 51, 97];[0, 2, 3, 4, 5, 12, 14, 19, 27, 28, 30, 31, 32, 36, 46, 51, 97];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testRound;[3, 5, 60];[3, 5, 60];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testScalb;[3, 5, 11, 100];[3, 5, 11, 100];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testSerialization;[0, 2, 3, 4, 5, 23, 56, 69, 120];[0, 2, 3, 4, 5, 23, 56, 69, 120];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testSignum;[0, 2, 3, 4, 5, 19, 56, 121, 122];[0, 2, 3, 4, 5, 19, 56, 121, 122];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testSin;[3, 5, 11, 14, 76, 77, 78, 79, 80, 81, 123, 124];[3, 5, 11, 14, 76, 77, 78, 79, 80, 81, 123, 124];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testSinAsin;[0, 2, 3, 4, 5, 9, 12, 14, 20, 24, 25, 26, 39, 43, 76, 77, 78, 79, 80, 81, 123, 124];[0, 2, 3, 4, 5, 9, 12, 14, 20, 24, 25, 26, 39, 43, 76, 77, 78, 79, 80, 81, 123, 124];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testSinCos;[0, 2, 3, 4, 5, 14, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124];[0, 2, 3, 4, 5, 14, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testSinh;[3, 5, 11, 14, 53, 83, 85, 86, 125, 126];[3, 5, 11, 14, 53, 83, 85, 86, 125, 126];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testSinhAsinh;[0, 2, 3, 4, 5, 12, 14, 18, 20, 29, 33, 39, 43, 53, 83, 85, 86, 125, 126, 2908];[0, 2, 3, 4, 5, 12, 14, 18, 20, 29, 33, 39, 43, 53, 83, 85, 86, 125, 126, 2908];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testSinhDefinition;[0, 2, 3, 4, 5, 14, 20, 38, 39, 43, 46, 53, 54, 83, 85, 86, 87, 88, 89, 125, 126];[0, 2, 3, 4, 5, 14, 20, 38, 39, 43, 46, 53, 54, 83, 85, 86, 87, 88, 89, 125, 126];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testSqrt;[3, 5, 11, 12, 14, 36, 51, 72];[3, 5, 11, 12, 14, 36, 51, 72];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testSqrtDefinition;[0, 2, 3, 4, 5, 12, 14, 18, 20, 36, 38, 39, 43, 46, 51, 52, 53, 72, 127, 128, 129, 130];[0, 2, 3, 4, 5, 12, 14, 18, 20, 36, 38, 39, 43, 46, 51, 52, 53, 72, 127, 128, 129, 130];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testSqrtPow2;[0, 2, 3, 4, 5, 12, 14, 20, 36, 39, 42, 43, 51, 54, 72];[0, 2, 3, 4, 5, 12, 14, 20, 36, 39, 42, 43, 51, 54, 72];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testSubtract;[0, 2, 3, 4, 5, 19, 20, 23, 39, 43];[0, 2, 3, 4, 5, 19, 20, 23, 39, 43];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testSubtractDouble;[3, 5, 11, 22, 39];[3, 5, 11, 22, 39];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testSubtractField;[3, 5, 11, 20, 39, 43];[3, 5, 11, 20, 39, 43];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testTan;[3, 5, 11, 14, 78, 81, 131, 132, 133, 134];[3, 5, 11, 14, 78, 81, 131, 132, 133, 134];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testTanAtan;[0, 2, 3, 4, 5, 9, 14, 20, 34, 35, 39, 43, 78, 81, 131, 132, 133, 134];[0, 2, 3, 4, 5, 9, 14, 20, 34, 35, 39, 43, 78, 81, 131, 132, 133, 134];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testTangentDefinition;[0, 2, 3, 4, 5, 14, 20, 37, 38, 39, 42, 43, 44, 46, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 131, 132, 133, 134];[0, 2, 3, 4, 5, 14, 20, 37, 38, 39, 42, 43, 44, 46, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 131, 132, 133, 134];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testTanh;[3, 5, 11, 14, 53, 83, 135, 136, 137];[3, 5, 11, 14, 53, 83, 135, 136, 137];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testTanhAtanh;[0, 2, 3, 4, 5, 14, 18, 20, 39, 43, 47, 48, 49, 53, 83, 135, 136, 137];[0, 2, 3, 4, 5, 14, 18, 20, 39, 43, 47, 48, 49, 53, 83, 135, 136, 137];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testTanhDefinition;[0, 2, 3, 4, 5, 14, 20, 21, 22, 37, 38, 39, 42, 43, 44, 46, 53, 83, 87, 88, 89, 135, 136, 137];[0, 2, 3, 4, 5, 14, 20, 21, 22, 37, 38, 39, 42, 43, 44, 46, 53, 83, 87, 88, 89, 135, 136, 137];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testTaylorAtan2;[3, 5, 8, 9, 12, 14, 20, 21, 35, 36, 37, 38, 40, 41, 42, 45, 46, 138, 139, 140];[3, 5, 8, 9, 12, 14, 20, 21, 35, 36, 37, 38, 40, 41, 42, 45, 46, 138, 139, 140];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testTaylorPolynomial;[3, 5, 20, 21, 22, 42, 46, 54, 138, 139, 140];[3, 5, 20, 21, 22, 42, 46, 54, 138, 139, 140];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testToDegreesDefinition;[0, 2, 3, 4, 5, 8, 19, 91];[0, 2, 3, 4, 5, 8, 19, 91];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testTooLargeOrder;[0, 2, 3, 4, 5, 70, 71];[0, 2, 3, 4, 5, 70, 71];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testToRadiansDefinition;[0, 2, 3, 4, 5, 8, 19, 90];[0, 2, 3, 4, 5, 8, 19, 90];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testTrigo;[0, 2, 3, 4, 5, 14, 19, 20, 21, 22, 37, 38, 42, 44, 46, 56, 69, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 131, 132, 133, 134];[0, 2, 3, 4, 5, 14, 19, 20, 21, 22, 37, 38, 42, 44, 46, 56, 69, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 131, 132, 133, 134];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testVariable;[0, 2, 3, 4, 5, 19, 23];[0, 2, 3, 4, 5, 19, 23];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testVariableWithoutDerivative0;[3, 5, 19];[3, 5, 19];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testVariableWithoutDerivative1;[0, 2, 3, 4, 5, 70, 71];[0, 2, 3, 4, 5, 70, 71];0
org.apache.commons.math3.analysis.differentiation.DerivativeStructureTest.testWrongVariableIndex;[3, 5, 70, 71];[3, 5, 70, 71];0
org.apache.commons.math3.analysis.differentiation.DSCompilerTest.testCompositionRules;[3, 140];[3, 140];0
org.apache.commons.math3.analysis.differentiation.DSCompilerTest.testIncompatibleOrder;[3, 20, 70, 71];[3, 20, 70, 71];0
org.apache.commons.math3.analysis.differentiation.DSCompilerTest.testIncompatibleParams;[3, 20, 70, 71];[3, 20, 70, 71];0
org.apache.commons.math3.analysis.differentiation.DSCompilerTest.testIndices;[3, 140];[3, 140];0
org.apache.commons.math3.analysis.differentiation.DSCompilerTest.testMultiplicationRules;[3, 140];[3, 140];0
org.apache.commons.math3.analysis.differentiation.DSCompilerTest.testSize;[3, 5, 141];[3, 5, 141];0
org.apache.commons.math3.analysis.differentiation.DSCompilerTest.testSymmetry;[2, 3, 4, 5, 27, 28, 30, 31, 32, 97, 140];[2, 3, 4, 5, 27, 28, 30, 31, 32, 97, 140];0
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testBoundedSqrt;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 42, 54, 56, 69, 104, 142, 143];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 42, 54, 56, 69, 104, 142, 143];0
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testBounds;[0, 2, 3, 4, 5, 19, 20, 21, 22, 23, 42, 54, 56, 69, 70, 71, 104, 142, 143, 144];[0, 2, 3, 4, 5, 19, 20, 21, 22, 23, 42, 54, 56, 69, 70, 71, 104, 142, 143, 144];0
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testConstant;[0, 2, 3, 4, 5, 19, 20, 21, 22, 23, 42, 54, 56, 69, 104, 142, 143];[0, 2, 3, 4, 5, 19, 20, 21, 22, 23, 42, 54, 56, 69, 104, 142, 143];0
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testGaussian;[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 42, 53, 54, 56, 62, 69, 104, 142, 143];[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 42, 53, 54, 56, 62, 69, 104, 142, 143];0
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testLinear;[0, 2, 3, 4, 5, 19, 20, 21, 22, 23, 42, 54, 56, 69, 104, 142, 143];[0, 2, 3, 4, 5, 19, 20, 21, 22, 23, 42, 54, 56, 69, 104, 142, 143];0
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testMatrixFunction;[0, 2, 3, 4, 5, 19, 20, 21, 22, 23, 42, 53, 54, 56, 69, 76, 77, 78, 79, 80, 81, 83, 85, 86, 104, 142, 143];[0, 2, 3, 4, 5, 19, 20, 21, 22, 23, 42, 53, 54, 56, 69, 76, 77, 78, 79, 80, 81, 83, 85, 86, 104, 142, 143];0
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testSerialization;[145, 146];[145, 146];0
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testSeveralFreeParameters;[0, 2, 3, 4, 5, 14, 19, 20, 21, 22, 23, 39, 42, 43, 54, 56, 69, 76, 77, 78, 79, 80, 81, 104, 123, 124, 142, 143, 147];[0, 2, 3, 4, 5, 14, 19, 20, 21, 22, 23, 39, 42, 43, 54, 56, 69, 76, 77, 78, 79, 80, 81, 104, 123, 124, 142, 143, 147];0
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testStepSizeUnstability;[0, 2, 3, 4, 5, 19, 20, 21, 22, 23, 39, 42, 54, 56, 69, 104, 142, 143];[0, 2, 3, 4, 5, 19, 20, 21, 22, 23, 39, 42, 54, 56, 69, 104, 142, 143];0
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testTooLargeStep;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testVectorFunction;[0, 2, 3, 4, 5, 19, 20, 21, 22, 23, 42, 54, 56, 69, 76, 77, 78, 79, 80, 81, 104, 142, 143];[0, 2, 3, 4, 5, 19, 20, 21, 22, 23, 42, 54, 56, 69, 76, 77, 78, 79, 80, 81, 104, 142, 143];0
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testWrongNumberOfPoints;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testWrongOrder;[3, 5, 56, 69, 70, 71, 143];[3, 5, 56, 69, 70, 71, 143];0
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testWrongOrderMatrix;[3, 5, 56, 69, 70, 71, 143];[3, 5, 56, 69, 70, 71, 143];0
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testWrongOrderVector;[3, 5, 56, 69, 70, 71, 143];[3, 5, 56, 69, 70, 71, 143];0
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiatorTest.testWrongStepSize;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.differentiation.GradientFunctionTest.test2DDistance;[0, 2, 3, 4, 5, 12, 14, 20, 21, 22, 36, 42, 51, 54, 56, 58, 72, 93, 117, 148];[0, 2, 3, 4, 5, 12, 14, 20, 21, 22, 36, 42, 51, 54, 56, 58, 72, 93, 117, 148];0
org.apache.commons.math3.analysis.differentiation.GradientFunctionTest.test3DDistance;[0, 2, 3, 4, 5, 12, 14, 20, 21, 22, 36, 42, 51, 54, 56, 58, 72, 93, 117, 148];[0, 2, 3, 4, 5, 12, 14, 20, 21, 22, 36, 42, 51, 54, 56, 58, 72, 93, 117, 148];0
org.apache.commons.math3.analysis.differentiation.JacobianFunctionTest.testSphere;[0, 2, 3, 4, 5, 14, 20, 42, 54, 74, 75, 76, 77, 78, 79, 80, 81, 93, 117, 123, 124, 149];[0, 2, 3, 4, 5, 14, 20, 42, 54, 74, 75, 76, 77, 78, 79, 80, 81, 93, 117, 123, 124, 149];0
org.apache.commons.math3.analysis.function.GaussianTest.testDerivativeLargeArguments;[0, 2, 3, 4, 5, 12, 14, 19, 53, 56, 62, 69];[0, 2, 3, 4, 5, 12, 14, 19, 53, 56, 62, 69];0
org.apache.commons.math3.analysis.function.GaussianTest.testDerivatives;[0, 2, 3, 4, 5, 14, 19, 53, 56, 62, 69];[0, 2, 3, 4, 5, 14, 19, 53, 56, 62, 69];0
org.apache.commons.math3.analysis.function.GaussianTest.testDerivativesNaN;[0, 2, 3, 4, 5, 12, 14, 19, 53, 56, 62, 69];[0, 2, 3, 4, 5, 12, 14, 19, 53, 56, 62, 69];0
org.apache.commons.math3.analysis.function.GaussianTest.testLargeArguments;[12, 53];[12, 53];0
org.apache.commons.math3.analysis.function.GaussianTest.testParametricGradient;[53];[53];0
org.apache.commons.math3.analysis.function.GaussianTest.testParametricUsage1;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.GaussianTest.testParametricUsage2;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.GaussianTest.testParametricUsage3;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.GaussianTest.testParametricUsage4;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.GaussianTest.testParametricUsage5;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.GaussianTest.testParametricUsage6;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.GaussianTest.testParametricValue;[53];[53];0
org.apache.commons.math3.analysis.function.GaussianTest.testPreconditions;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.GaussianTest.testSomeValues;[12, 53];[12, 53];0
org.apache.commons.math3.analysis.function.HarmonicOscillatorTest.testDerivative;[0, 2, 3, 4, 5, 14, 19, 46, 56, 62, 69, 76, 77, 78, 79, 80, 81, 150];[0, 2, 3, 4, 5, 14, 19, 46, 56, 62, 69, 76, 77, 78, 79, 80, 81, 150];0
org.apache.commons.math3.analysis.function.HarmonicOscillatorTest.testParametricGradient;[76, 77, 78, 79, 80, 81, 150];[76, 77, 78, 79, 80, 81, 150];0
org.apache.commons.math3.analysis.function.HarmonicOscillatorTest.testParametricUsage1;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.HarmonicOscillatorTest.testParametricUsage2;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.HarmonicOscillatorTest.testParametricUsage3;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.HarmonicOscillatorTest.testParametricUsage4;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.HarmonicOscillatorTest.testParametricValue;[76, 77, 78, 79, 81, 150];[76, 77, 78, 79, 81, 150];0
org.apache.commons.math3.analysis.function.HarmonicOscillatorTest.testSomeValues;[77, 78, 79, 81, 150];[77, 78, 79, 81, 150];0
org.apache.commons.math3.analysis.function.LogisticTest.testCompareDerivativeSigmoid;[0, 2, 3, 4, 5, 6, 14, 18, 19, 22, 38, 46, 52, 53, 54, 56, 62, 69, 87, 88, 89, 151, 152];[0, 2, 3, 4, 5, 6, 14, 18, 19, 22, 38, 46, 52, 53, 54, 56, 62, 69, 87, 88, 89, 151, 152];0
org.apache.commons.math3.analysis.function.LogisticTest.testCompareSigmoid;[18, 46, 53, 151, 152];[18, 46, 53, 151, 152];0
org.apache.commons.math3.analysis.function.LogisticTest.testGradientComponent0Component4;[18, 46, 53, 152];[18, 46, 53, 152];0
org.apache.commons.math3.analysis.function.LogisticTest.testGradientComponent1Component2Component3;[18, 46, 53, 152];[18, 46, 53, 152];0
org.apache.commons.math3.analysis.function.LogisticTest.testGradientComponent5;[18, 46, 53, 152];[18, 46, 53, 152];0
org.apache.commons.math3.analysis.function.LogisticTest.testParametricUsage1;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.LogisticTest.testParametricUsage2;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.LogisticTest.testParametricUsage3;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.LogisticTest.testParametricUsage4;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.LogisticTest.testParametricUsage5;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.LogisticTest.testParametricUsage6;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.LogisticTest.testPreconditions1;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.LogisticTest.testPreconditions2;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.LogisticTest.testSomeValues;[12, 18, 46, 53, 152];[12, 18, 46, 53, 152];0
org.apache.commons.math3.analysis.function.LogitTest.testDerivative;[0, 2, 3, 4, 5, 14, 18, 19, 56, 62, 69, 153];[0, 2, 3, 4, 5, 14, 18, 19, 56, 62, 69, 153];0
org.apache.commons.math3.analysis.function.LogitTest.testDerivativeLargeArguments;[3, 5, 19, 70, 71, 153];[3, 5, 19, 70, 71, 153];0
org.apache.commons.math3.analysis.function.LogitTest.testDerivativesHighOrder;[0, 2, 3, 4, 5, 14, 18, 19, 56, 62, 69, 153];[0, 2, 3, 4, 5, 14, 18, 19, 56, 62, 69, 153];0
org.apache.commons.math3.analysis.function.LogitTest.testDerivativesWithInverseFunction;[0, 2, 3, 4, 5, 14, 18, 19, 53, 56, 62, 69, 105, 106, 107, 108, 151, 153, 154];[0, 2, 3, 4, 5, 14, 18, 19, 53, 56, 62, 69, 105, 106, 107, 108, 151, 153, 154];0
org.apache.commons.math3.analysis.function.LogitTest.testParametricUsage1;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.LogitTest.testParametricUsage2;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.LogitTest.testParametricUsage3;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.LogitTest.testParametricUsage4;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.LogitTest.testParametricUsage5;[70, 71, 153];[70, 71, 153];0
org.apache.commons.math3.analysis.function.LogitTest.testParametricUsage6;[70, 71, 153];[70, 71, 153];0
org.apache.commons.math3.analysis.function.LogitTest.testParametricValue;[18, 153];[18, 153];0
org.apache.commons.math3.analysis.function.LogitTest.testPreconditions1;[70, 71, 153];[70, 71, 153];0
org.apache.commons.math3.analysis.function.LogitTest.testPreconditions2;[70, 71, 153];[70, 71, 153];0
org.apache.commons.math3.analysis.function.LogitTest.testSomeValues;[18, 153];[18, 153];0
org.apache.commons.math3.analysis.function.LogitTest.testValueWithInverseFunction;[3, 5, 14, 18, 19, 53, 56, 62, 69, 105, 106, 107, 108, 151, 153, 154];[3, 5, 14, 18, 19, 53, 56, 62, 69, 105, 106, 107, 108, 151, 153, 154];0
org.apache.commons.math3.analysis.function.SigmoidTest.testDerivative;[0, 2, 3, 4, 5, 14, 19, 53, 56, 62, 69, 151];[0, 2, 3, 4, 5, 14, 19, 53, 56, 62, 69, 151];0
org.apache.commons.math3.analysis.function.SigmoidTest.testDerivativeLargeArguments;[0, 2, 3, 4, 5, 14, 19, 53, 56, 62, 69, 151];[0, 2, 3, 4, 5, 14, 19, 53, 56, 62, 69, 151];0
org.apache.commons.math3.analysis.function.SigmoidTest.testDerivativesHighOrder;[0, 2, 3, 4, 5, 14, 19, 53, 56, 62, 69, 151];[0, 2, 3, 4, 5, 14, 19, 53, 56, 62, 69, 151];0
org.apache.commons.math3.analysis.function.SigmoidTest.testParametricUsage1;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.SigmoidTest.testParametricUsage2;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.SigmoidTest.testParametricUsage3;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.SigmoidTest.testParametricUsage4;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.SigmoidTest.testParametricValue;[53, 151];[53, 151];0
org.apache.commons.math3.analysis.function.SigmoidTest.testSomeValues;[53, 151];[53, 151];0
org.apache.commons.math3.analysis.function.SincTest.testCrossings;[76, 77, 78, 80, 81, 155];[76, 77, 78, 80, 81, 155];0
org.apache.commons.math3.analysis.function.SincTest.testDerivatives1Dot2Normalized;[0, 2, 3, 4, 5, 14, 19, 56, 62, 69, 76, 77, 78, 79, 80, 81, 155];[0, 2, 3, 4, 5, 14, 19, 56, 62, 69, 76, 77, 78, 79, 80, 81, 155];0
org.apache.commons.math3.analysis.function.SincTest.testDerivatives1Dot2Unnormalized;[0, 2, 3, 4, 5, 14, 19, 56, 62, 69, 76, 77, 78, 79, 80, 81, 155];[0, 2, 3, 4, 5, 14, 19, 56, 62, 69, 76, 77, 78, 79, 80, 81, 155];0
org.apache.commons.math3.analysis.function.SincTest.testDerivativeShortcut;[0, 2, 3, 4, 5, 14, 19, 56, 62, 69, 76, 77, 78, 79, 80, 81, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201];[0, 2, 3, 4, 5, 14, 19, 56, 62, 69, 76, 77, 78, 79, 80, 81, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201];0
org.apache.commons.math3.analysis.function.SincTest.testDerivativeZero;[0, 2, 3, 4, 5, 14, 19, 56, 62, 69, 155];[0, 2, 3, 4, 5, 14, 19, 56, 62, 69, 155];0
org.apache.commons.math3.analysis.function.SincTest.testEuler;[76, 77, 78, 79, 80, 81, 155];[76, 77, 78, 79, 80, 81, 155];0
org.apache.commons.math3.analysis.function.SincTest.testShortcut;[76, 77, 78, 80, 81, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201];[76, 77, 78, 80, 81, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201];0
org.apache.commons.math3.analysis.function.SincTest.testZero;[155];[155];0
org.apache.commons.math3.analysis.function.SqrtTest.testComparison;[12, 202];[12, 202];0
org.apache.commons.math3.analysis.function.SqrtTest.testDerivativeComparison;[0, 2, 3, 4, 5, 12, 14, 36, 51, 72, 202];[0, 2, 3, 4, 5, 12, 14, 27, 28, 30, 31, 32, 36, 51, 72, 202];0
org.apache.commons.math3.analysis.function.SqrtTest.testDerivativesHighOrder;[0, 2, 3, 4, 5, 12, 14, 36, 51, 72, 202];[0, 2, 3, 4, 5, 12, 14, 27, 28, 30, 31, 32, 36, 51, 72, 97, 202];0
org.apache.commons.math3.analysis.function.StepFunctionTest.testEndpointBehavior;[203, 204];[203, 204];0
org.apache.commons.math3.analysis.function.StepFunctionTest.testHeaviside;[203, 204];[203, 204];0
org.apache.commons.math3.analysis.function.StepFunctionTest.testPreconditions1;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.StepFunctionTest.testPreconditions2;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.StepFunctionTest.testPreconditions3;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.StepFunctionTest.testPreconditions4;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.StepFunctionTest.testPreconditions5;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.function.StepFunctionTest.testPreconditions6;[70, 71, 204];[70, 71, 204];0
org.apache.commons.math3.analysis.function.StepFunctionTest.testSomeValues;[203, 204];[203, 204];0
org.apache.commons.math3.analysis.FunctionUtilsTest.testAdd;[154, 205, 206, 207, 208, 209];[154, 205, 206, 207, 208, 209];0
org.apache.commons.math3.analysis.FunctionUtilsTest.testAddDifferentiable;[0, 2, 3, 4, 5, 6, 14, 20, 21, 22, 23, 38, 46, 56, 69, 76, 77, 78, 79, 80, 81, 89, 123, 124, 147, 205, 206, 207, 209];[0, 2, 3, 4, 5, 6, 14, 20, 21, 22, 23, 38, 46, 56, 69, 76, 77, 78, 79, 80, 81, 89, 123, 124, 147, 205, 206, 207, 209];0
org.apache.commons.math3.analysis.FunctionUtilsTest.testCollector;[208, 210, 211, 212, 213, 214];[208, 210, 211, 212, 213, 214];0
org.apache.commons.math3.analysis.FunctionUtilsTest.testCombine;[205, 206, 208, 210, 211, 215];[205, 206, 208, 210, 211, 215];0
org.apache.commons.math3.analysis.FunctionUtilsTest.testCompose;[18, 46, 53, 154, 205, 206, 207, 208, 216];[18, 46, 53, 154, 205, 206, 207, 208, 216];0
org.apache.commons.math3.analysis.FunctionUtilsTest.testComposeDifferentiable;[0, 2, 3, 4, 5, 6, 14, 18, 23, 38, 46, 52, 53, 56, 69, 89, 109, 110, 154, 205, 206, 207, 208, 216, 217];[0, 2, 3, 4, 5, 6, 14, 18, 23, 38, 46, 52, 53, 56, 69, 89, 109, 110, 154, 205, 206, 207, 208, 216, 217];0
org.apache.commons.math3.analysis.FunctionUtilsTest.testFixingArguments;[18, 46, 53, 210, 216, 218, 219, 220];[18, 46, 53, 127, 128, 129, 130, 210, 216, 218, 219, 220];0
org.apache.commons.math3.analysis.FunctionUtilsTest.testMultiply;[18, 46, 53, 154, 206, 207, 216, 221];[18, 46, 53, 154, 206, 207, 216, 221];0
org.apache.commons.math3.analysis.FunctionUtilsTest.testMultiplyDifferentiable;[0, 2, 3, 4, 5, 14, 18, 20, 23, 38, 42, 46, 52, 53, 54, 56, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 89, 206, 207, 208, 216, 221, 222, 223];[0, 2, 3, 4, 5, 14, 18, 20, 23, 38, 42, 46, 52, 53, 54, 56, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 89, 206, 207, 208, 216, 221, 222, 223];0
org.apache.commons.math3.analysis.FunctionUtilsTest.testSample;[76, 77, 78, 80, 81, 147, 224];[76, 77, 78, 80, 81, 147, 224];0
org.apache.commons.math3.analysis.FunctionUtilsTest.testSampleNegativeNumberOfPoints;[70, 71, 224];[70, 71, 224];0
org.apache.commons.math3.analysis.FunctionUtilsTest.testSampleNullNumberOfPoints;[70, 71, 224];[70, 71, 224];0
org.apache.commons.math3.analysis.FunctionUtilsTest.testSampleWrongBounds;[70, 71, 224];[70, 71, 224];0
org.apache.commons.math3.analysis.FunctionUtilsTest.testSinc;[77, 78, 80, 81, 147, 155, 208, 215, 225];[77, 78, 80, 81, 147, 155, 208, 215, 225];0
org.apache.commons.math3.analysis.FunctionUtilsTest.testToDifferentiableMultivariateFunction;[0, 2, 3, 4, 5, 12, 14, 20, 21, 22, 36, 42, 51, 54, 72, 100, 101, 102, 226];[0, 2, 3, 4, 5, 12, 14, 20, 21, 22, 27, 28, 30, 31, 32, 36, 42, 51, 54, 72, 100, 101, 102, 226];0
org.apache.commons.math3.analysis.FunctionUtilsTest.testToDifferentiableUnivariateFunction;[0, 2, 3, 4, 5, 14, 76, 77, 78, 79, 80, 81, 123, 124, 147, 222, 227, 228];[0, 2, 3, 4, 5, 14, 76, 77, 78, 79, 80, 81, 123, 124, 147, 222, 227, 228];0
org.apache.commons.math3.analysis.FunctionUtilsTest.testToMultivariateDifferentiableFunction;[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 36, 42, 51, 54, 56, 69, 72, 100, 101, 102, 229];[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 36, 42, 51, 54, 56, 69, 72, 100, 101, 102, 229];0
org.apache.commons.math3.analysis.FunctionUtilsTest.testToUnivariateDifferential;[0, 2, 3, 4, 5, 14, 19, 23, 56, 69, 76, 77, 78, 79, 80, 81, 123, 124, 147, 222, 228, 230];[0, 2, 3, 4, 5, 14, 19, 23, 56, 69, 76, 77, 78, 79, 80, 81, 123, 124, 147, 222, 228, 230];0
org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactoryTest.testConcurrentCreation;[231, 232, 233, 234, 235, 236];[231, 232, 233, 234, 235, 236];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[0];[46, 216, 237, 238];[46, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[10];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[11];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[12];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[13];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[14];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[15];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[16];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[17];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[18];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[19];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[1];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[20];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[21];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[22];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[23];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[24];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[25];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[26];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[27];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[28];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[29];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[2];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[3];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[4];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[5];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[6];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[7];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[8];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionParametricTest.testAllMonomials[9];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest.testCos;[76, 77, 78, 79, 81, 204, 222, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242];[76, 77, 78, 79, 81, 204, 222, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242];0
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionTest.testInverse;[18, 204, 206, 217, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242];[18, 204, 206, 217, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[0];[46, 216, 237, 238];[46, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[10];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[11];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[12];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[13];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[14];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[15];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[16];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[17];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[18];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[19];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[1];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[20];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[21];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[22];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[23];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[24];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[25];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[26];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[27];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[28];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[29];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[2];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[3];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[4];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[5];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[6];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[7];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[8];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreParametricTest.testAllMonomials[9];[18, 46, 53, 216, 237, 238];[18, 46, 53, 216, 237, 238];0
org.apache.commons.math3.analysis.integration.gauss.LegendreTest.testCos;[76, 77, 78, 79, 81, 204, 222, 231, 232, 233, 234, 235, 236, 238, 239, 241, 243, 244];[76, 77, 78, 79, 81, 204, 222, 231, 232, 233, 234, 235, 236, 238, 239, 241, 243, 244];0
org.apache.commons.math3.analysis.integration.gauss.LegendreTest.testInverse;[18, 204, 206, 217, 231, 232, 233, 234, 235, 236, 238, 239, 241, 243, 244];[18, 204, 206, 217, 231, 232, 233, 234, 235, 236, 238, 239, 241, 243, 244];0
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest.testExactIntegration;[18, 46, 53, 61, 64, 65, 68, 204, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258];[18, 46, 53, 61, 64, 65, 68, 204, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258];0
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest.testIssue464;[18, 46, 53, 61, 70, 71, 204, 233, 234, 235, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262];[18, 46, 53, 61, 70, 71, 204, 233, 234, 235, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262];0
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest.testQuinticFunction;[18, 46, 53, 61, 204, 233, 234, 235, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258];[18, 46, 53, 61, 204, 233, 234, 235, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258];0
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegratorTest.testSinFunction;[18, 46, 53, 61, 76, 77, 78, 80, 81, 147, 204, 233, 234, 235, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258];[18, 46, 53, 61, 76, 77, 78, 80, 81, 147, 204, 233, 234, 235, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258];0
org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest.testExactIntegration;[12, 18, 46, 53, 61, 64, 65, 68, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 263];[12, 18, 46, 53, 61, 64, 65, 68, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 263];0
org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest.testIssue464;[18, 46, 53, 61, 70, 71, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263];[18, 46, 53, 61, 70, 71, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263];0
org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest.testQuinticFunction;[18, 46, 53, 61, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 263];[18, 46, 53, 61, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 263];0
org.apache.commons.math3.analysis.integration.LegendreGaussIntegratorTest.testSinFunction;[18, 46, 53, 61, 76, 77, 78, 80, 81, 147, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 263];[18, 46, 53, 61, 76, 77, 78, 80, 81, 147, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 263];0
org.apache.commons.math3.analysis.integration.RombergIntegratorTest.testParameters;[61, 70, 71, 246, 252, 254, 258];[61, 70, 71, 246, 252, 254, 258];0
org.apache.commons.math3.analysis.integration.RombergIntegratorTest.testQuinticFunction;[61, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 265, 266];[61, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 265, 266];0
org.apache.commons.math3.analysis.integration.RombergIntegratorTest.testSinFunction;[61, 76, 77, 78, 80, 81, 147, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 265, 266];[61, 76, 77, 78, 80, 81, 147, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 265, 266];0
org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest.testParameters;[61, 70, 71, 246, 252, 254, 258];[61, 70, 71, 246, 252, 254, 258];0
org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest.testQuinticFunction;[61, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 267];[61, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 267];0
org.apache.commons.math3.analysis.integration.SimpsonIntegratorTest.testSinFunction;[61, 76, 77, 78, 80, 81, 147, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 267];[61, 76, 77, 78, 80, 81, 147, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 267];0
org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest.testParameters;[61, 70, 71, 246, 252, 254, 258];[61, 70, 71, 246, 252, 254, 258];0
org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest.testQuinticFunction;[61, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 268];[61, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 268];0
org.apache.commons.math3.analysis.integration.TrapezoidIntegratorTest.testSinFunction;[61, 76, 77, 78, 80, 81, 147, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 268];[61, 76, 77, 78, 80, 81, 147, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 268];0
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest.testMatchingPartialDerivatives;[204, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278];[204, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278];0
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest.testParaboloid;[204, 270, 273, 274, 279];[204, 270, 273, 274, 279];0
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest.testPlane;[204, 270, 273, 274, 279];[204, 270, 273, 274, 279];0
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest.testPreconditions;[70, 71, 204, 274];[70, 71, 204, 274];0
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunctionTest.testSplinePartialDerivatives;[270, 271, 272, 275, 276, 277, 278];[270, 271, 272, 275, 276, 277, 278];0
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest.testParaboloid;[61, 64, 66, 67, 68, 204, 270, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286];[61, 64, 66, 67, 68, 204, 270, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286];0
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest.testPlane;[61, 64, 66, 67, 68, 204, 270, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286];[61, 64, 66, 67, 68, 204, 270, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286];0
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatorTest.testPreconditions;[61, 64, 66, 67, 68, 70, 71, 204, 274, 280, 281, 282, 283, 284, 285, 286];[61, 64, 66, 67, 68, 70, 71, 204, 274, 280, 281, 282, 283, 284, 285, 286];0
org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest.testExpm1Function;[53, 61, 83, 204, 287, 288, 289, 290, 291, 292, 293];[53, 61, 83, 204, 287, 288, 289, 290, 291, 292, 293];0
org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest.testParameters;[70, 71, 204, 288, 290];[70, 71, 204, 288, 290];0
org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolatorTest.testSinFunction;[61, 76, 77, 78, 80, 81, 147, 204, 287, 288, 289, 290, 291, 293];[61, 76, 77, 78, 80, 81, 147, 204, 287, 288, 289, 290, 291, 293];0
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest.testDuplicatedAbscissa;[61, 70, 71, 294, 295, 296, 297, 298, 299];[61, 70, 71, 294, 295, 296, 297, 298, 299];0
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest.testEmptySampleDerivative;[61, 70, 71, 300];[61, 70, 71, 300];0
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest.testEmptySampleValue;[61, 70, 71, 301];[61, 70, 71, 301];0
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest.testMixedDerivatives;[61, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307];[61, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307];0
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest.testOnePointParabola;[61, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308];[61, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308];0
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest.testQuadratic;[61, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308];[61, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308];0
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest.testRandomPolynomialsFirstDerivative;[61, 64, 66, 67, 68, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 297, 301, 309, 310, 311];[61, 64, 66, 67, 68, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 297, 301, 309, 310, 311];0
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest.testRandomPolynomialsValuesOnly;[61, 64, 68, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 297, 301, 309, 310, 311];[61, 64, 68, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 297, 301, 309, 310, 311];0
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest.testSine;[61, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 297, 301, 309, 310, 311, 312];[61, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 297, 301, 309, 310, 311, 312];0
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest.testSquareRoot;[61, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 297, 301, 309, 310, 311];[61, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 297, 301, 309, 310, 311];0
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest.testWikipedia;[61, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308];[61, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308];0
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolatorTest.testZero;[61, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307];[61, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307];0
org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest.testDuplicatedAbscissa;[70, 71, 313];[70, 71, 313];0
org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest.testEmptySample;[70, 71, 314, 315];[70, 71, 314, 315];0
org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest.testMixedDerivatives;[0, 2, 3, 4, 5, 19, 20, 21, 22, 39, 42, 54, 56, 58, 61, 63, 65, 313, 314, 315, 316, 317, 318, 319];[0, 2, 3, 4, 5, 19, 20, 21, 22, 39, 42, 54, 56, 58, 61, 63, 65, 313, 314, 315, 316, 317, 318, 319];0
org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest.testOnePointParabola;[0, 2, 3, 4, 5, 19, 20, 21, 22, 39, 42, 54, 56, 58, 61, 63, 65, 313, 314, 315, 316, 317, 318, 319];[0, 2, 3, 4, 5, 19, 20, 21, 22, 39, 42, 54, 56, 58, 61, 63, 65, 313, 314, 315, 316, 317, 318, 319];0
org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest.testQuadratic;[0, 2, 3, 4, 5, 19, 20, 21, 22, 39, 42, 54, 56, 58, 61, 63, 65, 313, 314, 315, 316, 317, 318, 319];[0, 2, 3, 4, 5, 19, 20, 21, 22, 39, 42, 54, 56, 58, 61, 63, 65, 313, 314, 315, 316, 317, 318, 319];0
org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest.testRandomPolynomialsFirstDerivative;[0, 2, 3, 4, 5, 19, 20, 21, 22, 39, 42, 54, 56, 58, 61, 63, 64, 65, 66, 67, 68, 313, 314, 315, 316, 317, 318, 319];[0, 2, 3, 4, 5, 19, 20, 21, 22, 39, 42, 54, 56, 58, 61, 63, 64, 65, 66, 67, 68, 313, 314, 315, 316, 317, 318, 319];0
org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest.testRandomPolynomialsValuesOnly;[61, 63, 64, 65, 68, 313, 314, 315, 316, 317, 318, 319];[61, 63, 64, 65, 68, 313, 314, 315, 316, 317, 318, 319];0
org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest.testSine;[0, 2, 3, 4, 5, 19, 20, 21, 22, 39, 42, 54, 56, 58, 76, 77, 78, 79, 80, 81, 313, 314, 315];[0, 2, 3, 4, 5, 19, 20, 21, 22, 39, 42, 54, 56, 58, 76, 77, 78, 79, 80, 81, 313, 314, 315];0
org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest.testSquareRoot;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 39, 42, 54, 56, 58, 313, 314, 315];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 39, 42, 54, 56, 58, 313, 314, 315];0
org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest.testWikipedia;[0, 2, 3, 4, 5, 19, 20, 21, 22, 39, 42, 54, 56, 58, 61, 63, 65, 313, 314, 315, 316, 317, 318, 319];[0, 2, 3, 4, 5, 19, 20, 21, 22, 39, 42, 54, 56, 58, 61, 63, 65, 313, 314, 315, 316, 317, 318, 319];0
org.apache.commons.math3.analysis.interpolation.HermiteInterpolatorTest.testZero;[0, 2, 3, 4, 5, 19, 20, 21, 22, 39, 42, 54, 56, 58, 61, 63, 65, 313, 314, 315, 316, 317, 318, 319];[0, 2, 3, 4, 5, 19, 20, 21, 22, 39, 42, 54, 56, 58, 61, 63, 65, 313, 314, 315, 316, 317, 318, 319];0
org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest.testIllegalArguments;[70, 71, 204, 320];[70, 71, 204, 320];0
org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest.testInterpolateLinear;[61, 64, 65, 68, 93, 117, 204, 285, 320, 321];[61, 64, 65, 68, 93, 117, 204, 285, 320, 321];0
org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest.testInterpolateLinearDegenerateThreeSegment;[61, 64, 65, 68, 93, 117, 204, 285, 320, 321];[61, 64, 65, 68, 93, 117, 204, 285, 320, 321];0
org.apache.commons.math3.analysis.interpolation.LinearInterpolatorTest.testInterpolateLinearDegenerateTwoSegment;[61, 64, 65, 68, 93, 117, 204, 285, 320, 321];[61, 64, 65, 68, 93, 117, 204, 285, 320, 321];0
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest.testCompletelyIncorrectBandwidth1;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest.testCompletelyIncorrectBandwidth2;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest.testEmptyData;[70, 71, 322];[70, 71, 322];0
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest.testIncreasingBandwidthIncreasesSmoothness;[12, 46, 76, 77, 78, 80, 81, 204, 322, 323, 324, 325, 326, 327, 328];[12, 46, 76, 77, 78, 80, 81, 204, 322, 323, 324, 325, 326, 327, 328];0
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest.testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers;[12, 76, 77, 78, 80, 81, 204, 322, 323, 324, 325, 326, 327, 328];[12, 76, 77, 78, 80, 81, 204, 322, 323, 324, 325, 326, 327, 328];0
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest.testInsufficientBandwidth;[70, 71, 204, 322, 325, 326];[70, 71, 204, 322, 325, 326];0
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest.testMath296withoutWeights;[12, 204, 322, 324, 325, 326, 327, 328];[12, 204, 322, 324, 325, 326, 327, 328];0
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest.testNonStrictlyIncreasing1;[70, 71, 204, 322, 325, 326];[70, 71, 204, 322, 325, 326];0
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest.testNonStrictlyIncreasing2;[70, 71, 204, 322, 325, 326];[70, 71, 204, 322, 325, 326];0
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest.testNotAllFiniteReal1;[70, 71, 322, 325, 326];[70, 71, 322, 325, 326];0
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest.testNotAllFiniteReal2;[70, 71, 322, 325, 326];[70, 71, 322, 325, 326];0
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest.testNotAllFiniteReal3;[70, 71, 322, 325, 326];[70, 71, 322, 325, 326];0
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest.testNotAllFiniteReal4;[70, 71, 322, 325, 326];[70, 71, 322, 325, 326];0
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest.testNotAllFiniteReal5;[70, 71, 322, 325, 326];[70, 71, 322, 325, 326];0
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest.testNotAllFiniteReal6;[70, 71, 322, 325, 326];[70, 71, 322, 325, 326];0
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest.testOnDistortedSine;[12, 46, 76, 77, 78, 80, 81, 204, 322, 323, 324, 325, 326, 327, 328];[12, 46, 76, 77, 78, 80, 81, 204, 322, 323, 324, 325, 326, 327, 328];0
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest.testOnOnePoint;[204, 322, 325, 326];[204, 322, 325, 326];0
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest.testOnStraightLine;[12, 204, 322, 324, 325, 326, 327, 328];[12, 204, 322, 324, 325, 326, 327, 328];0
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest.testOnTwoPoints;[204, 322, 325, 326];[204, 322, 325, 326];0
org.apache.commons.math3.analysis.interpolation.LoessInterpolatorTest.testUnequalSizeArguments;[70, 71, 322];[70, 71, 322];0
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest.testLinearFunction2D;[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 98, 105, 107, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349];[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 98, 105, 107, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349];0
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatorTest.testParaboloid2D;[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 98, 105, 107, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349];[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 98, 105, 107, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349];0
org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest.testExpm1Function;[53, 83, 204, 288, 292, 350, 351, 352];[53, 83, 204, 288, 292, 350, 351, 352];0
org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest.testParameters;[70, 71, 204, 288, 352, 353, 354];[70, 71, 204, 288, 352, 353, 354];0
org.apache.commons.math3.analysis.interpolation.NevilleInterpolatorTest.testSinFunction;[76, 77, 78, 80, 81, 147, 204, 288, 350, 351, 352];[76, 77, 78, 80, 81, 147, 204, 288, 350, 351, 352];0
org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest.testParaboloid;[12, 61, 64, 66, 67, 68, 204, 246, 247, 250, 255, 270, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286, 329, 330, 331, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436];[12, 61, 64, 66, 67, 68, 204, 246, 247, 250, 255, 270, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286, 329, 330, 331, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436];0
org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest.testPlane;[12, 61, 64, 66, 67, 68, 204, 246, 247, 250, 255, 270, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286, 329, 330, 331, 332, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438];[12, 61, 64, 66, 67, 68, 204, 246, 247, 250, 255, 270, 273, 274, 279, 280, 281, 282, 283, 284, 285, 286, 329, 330, 331, 332, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438];0
org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest.testPreconditions;[12, 61, 64, 66, 67, 68, 70, 71, 204, 246, 247, 250, 255, 274, 280, 281, 282, 283, 284, 285, 286, 329, 330, 331, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436];[12, 61, 64, 66, 67, 68, 70, 71, 204, 246, 247, 250, 255, 274, 280, 281, 282, 283, 284, 285, 286, 329, 330, 331, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436];0
org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest.testIllegalArguments;[70, 71, 204, 284];[70, 71, 204, 284];0
org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest.testInterpolateLinear;[61, 64, 65, 68, 93, 117, 204, 284, 285, 321];[61, 64, 65, 68, 93, 117, 204, 284, 285, 321];0
org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment;[61, 64, 65, 68, 93, 117, 204, 284, 285, 321];[61, 64, 65, 68, 93, 117, 204, 284, 285, 321];0
org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment;[61, 64, 65, 68, 93, 117, 204, 284, 285, 321];[61, 64, 65, 68, 93, 117, 204, 284, 285, 321];0
org.apache.commons.math3.analysis.interpolation.SplineInterpolatorTest.testInterpolateSin;[12, 61, 64, 65, 66, 67, 68, 93, 117, 204, 284, 285, 321, 439];[12, 61, 64, 65, 66, 67, 68, 93, 117, 204, 284, 285, 321, 439];0
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest.testPlane;[204, 440, 441, 442];[204, 440, 441, 442];0
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest.testPreconditions;[70, 71, 204, 442];[70, 71, 204, 442];0
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunctionTest.testWave;[76, 77, 78, 79, 80, 81, 204, 440, 441, 442];[76, 77, 78, 79, 80, 81, 204, 440, 441, 442];0
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest.testPlane;[61, 64, 66, 67, 68, 204, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 440, 441, 442, 443, 444, 445];[61, 64, 66, 67, 68, 204, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 440, 441, 442, 443, 444, 445];0
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest.testPreconditions;[61, 64, 66, 67, 68, 70, 71, 204, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 442, 443, 444, 445];[61, 64, 66, 67, 68, 70, 71, 204, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 442, 443, 444, 445];0
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatorTest.testWave;[61, 64, 66, 67, 68, 76, 77, 78, 79, 81, 204, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 440, 441, 442, 443, 444, 445];[61, 64, 66, 67, 68, 76, 77, 78, 79, 81, 204, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 440, 441, 442, 443, 444, 445];0
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest.testLessThanOnePeriodCoverage;[61, 64, 68, 76, 77, 78, 80, 81, 204, 285, 320, 353, 354, 446, 447];[61, 64, 68, 76, 77, 78, 80, 81, 204, 285, 320, 353, 354, 446, 447];0
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest.testMoreThanOnePeriodCoverage;[61, 64, 68, 76, 77, 78, 80, 81, 204, 285, 320, 353, 354, 446, 447];[61, 64, 68, 76, 77, 78, 80, 81, 204, 285, 320, 353, 354, 446, 447];0
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest.testSine;[61, 64, 68, 76, 77, 78, 80, 81, 204, 285, 320, 353, 354, 446, 447];[61, 64, 68, 76, 77, 78, 80, 81, 204, 285, 320, 353, 354, 446, 447];0
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest.testTooFewSamples;[70, 71, 446];[70, 71, 446];0
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolatorTest.testUnsortedSamples;[70, 71, 204, 446];[70, 71, 204, 446];0
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest.testLinearFunction;[204, 288, 350, 351, 448, 449, 450];[204, 288, 350, 351, 448, 449, 450];0
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest.testParameters;[70, 71, 288];[70, 71, 288];0
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest.testQuadraticFunction;[204, 288, 350, 351, 353, 354, 448, 449, 450];[204, 288, 350, 351, 353, 354, 448, 449, 450];0
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeFormTest.testQuinticFunction;[204, 288, 350, 351, 353, 354, 448, 449, 450];[204, 288, 350, 351, 353, 354, 448, 449, 450];0
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest.testDerivative;[0, 2, 3, 4, 5, 19, 20, 22, 23, 39, 42, 54, 56, 61, 69, 289, 291];[0, 2, 3, 4, 5, 19, 20, 22, 23, 39, 42, 54, 56, 61, 69, 289, 291];0
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest.testLinearFunction;[61, 289, 291, 293, 451, 452, 453];[61, 289, 291, 293, 451, 452, 453];0
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest.testParameters;[61, 70, 71, 291];[61, 70, 71, 291];0
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest.testQuadraticFunction;[61, 289, 291, 293, 451, 452, 453];[61, 289, 291, 293, 451, 452, 453];0
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonFormTest.testQuinticFunction;[61, 289, 291, 293, 451, 452, 453];[61, 289, 291, 293, 451, 452, 453];0
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest.testAddition;[61, 63, 65, 316, 454];[61, 63, 65, 316, 454];0
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest.testConstants;[61, 63, 64, 66, 67, 68, 439];[61, 63, 64, 66, 67, 68, 439];0
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest.testfirstDerivativeComparison;[61, 64, 66, 67, 68, 439];[61, 64, 66, 67, 68, 439];0
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest.testLinear;[61, 63, 64, 66, 67, 68, 439];[61, 63, 64, 66, 67, 68, 439];0
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest.testMath341;[61, 64, 66, 67, 68, 439];[61, 64, 66, 67, 68, 439];0
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest.testMultiplication;[61, 317, 454];[61, 317, 454];0
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest.testQuadratic;[61, 64, 68];[61, 64, 68];0
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest.testQuintic;[61, 63, 64, 68];[61, 63, 64, 68];0
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest.testSerial;[61, 455];[61, 455];0
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest.testString;[61, 454];[61, 454];0
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionTest.testSubtraction;[61, 63, 65, 454, 456];[61, 63, 65, 454, 456];0
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest.testConstructor;[65, 70, 71, 204, 321, 457, 458];[65, 70, 71, 204, 321, 457, 458];0
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunctionTest.testValues;[61, 64, 66, 67, 68, 70, 71, 204, 280, 285, 286];[61, 64, 66, 67, 68, 70, 71, 204, 280, 285, 286];0
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest.testChebyshevBounds;[12, 61, 64, 68, 294, 296, 302, 303, 305, 308, 459, 460, 461];[12, 61, 64, 68, 294, 296, 302, 303, 305, 308, 459, 460, 461];0
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest.testChebyshevDifferentials;[12, 61, 65, 66, 67, 308, 316, 317, 459, 460];[12, 61, 65, 66, 67, 308, 316, 317, 459, 460];0
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest.testChebyshevOrthogonality;[12, 18, 46, 53, 61, 63, 64, 68, 204, 233, 234, 235, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 308, 459, 460];[12, 18, 46, 53, 61, 63, 64, 68, 204, 233, 234, 235, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 308, 459, 460];0
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest.testFirstChebyshevPolynomials;[12, 61, 294, 296, 302, 303, 305, 308, 454, 459, 460, 461];[12, 61, 294, 296, 302, 303, 305, 308, 454, 459, 460, 461];0
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest.testFirstHermitePolynomials;[12, 61, 308, 454, 459, 462];[12, 61, 308, 454, 459, 462];0
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest.testFirstLaguerrePolynomials;[12, 61, 308, 317, 454, 459, 463];[12, 61, 308, 317, 454, 459, 463];0
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest.testFirstLegendrePolynomials;[12, 61, 308, 317, 454, 459, 464];[12, 61, 308, 317, 454, 459, 464];0
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest.testHermiteDifferentials;[12, 61, 65, 66, 67, 294, 296, 302, 303, 305, 308, 316, 317, 459, 461, 462];[12, 61, 65, 66, 67, 294, 296, 302, 303, 305, 308, 316, 317, 459, 461, 462];0
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest.testHermiteOrthogonality;[12, 18, 46, 53, 61, 63, 64, 68, 204, 233, 234, 235, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 294, 296, 302, 303, 305, 308, 459, 461, 462];[12, 18, 46, 53, 61, 63, 64, 68, 204, 233, 234, 235, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 294, 296, 302, 303, 305, 308, 459, 461, 462];0
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest.testHighDegreeLegendre;[12, 61, 65, 294, 296, 302, 303, 305, 308, 459, 461, 464];[12, 61, 65, 294, 296, 302, 303, 305, 308, 459, 461, 464];0
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest.testJacobiEvaluationAt1;[12, 61, 64, 68, 93, 141, 294, 296, 302, 303, 305, 308, 459, 461, 465];[12, 61, 64, 68, 93, 141, 294, 296, 302, 303, 305, 308, 459, 461, 465];0
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest.testJacobiLegendre;[12, 61, 65, 308, 456, 459, 464, 465];[12, 61, 65, 308, 456, 459, 464, 465];0
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest.testJacobiOrthogonality;[12, 18, 46, 53, 61, 63, 64, 68, 204, 233, 234, 235, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 294, 296, 302, 303, 305, 308, 459, 461, 465];[12, 18, 46, 53, 61, 63, 64, 68, 204, 233, 234, 235, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 294, 296, 302, 303, 305, 308, 459, 461, 465];0
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest.testLaguerreDifferentials;[12, 61, 65, 66, 67, 294, 296, 302, 303, 305, 308, 316, 317, 459, 461, 463];[12, 61, 65, 66, 67, 294, 296, 302, 303, 305, 308, 316, 317, 459, 461, 463];0
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest.testLaguerreOrthogonality;[12, 18, 46, 53, 61, 63, 64, 68, 204, 233, 234, 235, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 294, 296, 302, 303, 305, 308, 459, 461, 463];[12, 18, 46, 53, 61, 63, 64, 68, 204, 233, 234, 235, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 294, 296, 302, 303, 305, 308, 459, 461, 463];0
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest.testLegendreDifferentials;[12, 61, 65, 66, 67, 308, 316, 317, 459, 464];[12, 61, 65, 66, 67, 308, 316, 317, 459, 464];0
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest.testLegendreOrthogonality;[12, 18, 46, 53, 61, 63, 64, 68, 204, 233, 234, 235, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 308, 459, 464];[12, 18, 46, 53, 61, 63, 64, 68, 204, 233, 234, 235, 238, 239, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 308, 459, 464];0
org.apache.commons.math3.analysis.polynomials.PolynomialsUtilsTest.testShift;[46, 61, 65, 141, 454, 466];[46, 61, 65, 141, 454, 466];0
org.apache.commons.math3.analysis.solvers.BisectionSolverTest.testMath369;[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476];[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476];0
org.apache.commons.math3.analysis.solvers.BisectionSolverTest.testQuinticZero;[61, 246, 247, 250, 252, 255, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477];[61, 246, 247, 250, 252, 255, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477];0
org.apache.commons.math3.analysis.solvers.BisectionSolverTest.testSinZero;[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476];[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476];0
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.testBadEndpoints;[61, 70, 71, 77, 78, 80, 81, 93, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 478, 479, 480, 481];[61, 70, 71, 77, 78, 80, 81, 93, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 478, 479, 480, 481];0
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.testConstructorsOK;[482];[482];0
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.testConvergenceOnFunctionAccuracy;[61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486];[61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486];0
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.testFasterThanNewton;[0, 2, 3, 4, 5, 12, 14, 18, 19, 20, 21, 22, 36, 38, 39, 42, 43, 46, 51, 52, 53, 54, 61, 72, 76, 77, 78, 79, 80, 81, 87, 88, 89, 93, 109, 110, 123, 124, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 486, 487, 488, 489, 490];[0, 2, 3, 4, 5, 12, 14, 18, 19, 20, 21, 22, 36, 38, 39, 42, 43, 46, 51, 52, 53, 54, 61, 72, 76, 77, 78, 79, 80, 81, 87, 88, 89, 93, 109, 110, 123, 124, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 483, 484, 486, 487, 488, 489, 490];0
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.testInsufficientOrder1;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.testInsufficientOrder2;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.testInsufficientOrder3;[70, 71];[70, 71];0
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.testIssue716;[61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486];[61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486];0
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.testQuinticZero;[61, 93, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 486];[61, 93, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 486];0
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.testRootEndpoints;[61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 478, 479, 480, 481];[61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 478, 479, 480, 481];0
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.testSinZero;[61, 76, 77, 78, 80, 81, 93, 147, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 486];[61, 76, 77, 78, 80, 81, 93, 147, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 478, 479, 480, 481, 483, 484, 486];0
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.testSolutionAboveSide;[61, 76, 77, 78, 80, 81, 93, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486];[61, 76, 77, 78, 80, 81, 93, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486];0
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.testSolutionBelowSide;[61, 76, 77, 78, 80, 81, 93, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486];[61, 76, 77, 78, 80, 81, 93, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486];0
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.testSolutionLeftSide;[61, 76, 77, 78, 80, 81, 93, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486];[61, 76, 77, 78, 80, 81, 93, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486];0
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolverTest.testSolutionRightSide;[61, 76, 77, 78, 80, 81, 93, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486];[61, 76, 77, 78, 80, 81, 93, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486];0
org.apache.commons.math3.analysis.solvers.BrentSolverTest.testBadEndpoints;[61, 70, 71, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 478, 480, 481, 486, 491];[61, 70, 71, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 478, 480, 481, 486, 491];0
org.apache.commons.math3.analysis.solvers.BrentSolverTest.testInitialGuess;[61, 70, 71, 93, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492];[61, 70, 71, 93, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492];0
org.apache.commons.math3.analysis.solvers.BrentSolverTest.testMath832;[0, 2, 3, 4, 5, 12, 14, 20, 21, 22, 23, 36, 38, 42, 46, 51, 54, 56, 61, 69, 72, 89, 93, 154, 202, 206, 207, 209, 221, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492];[0, 2, 3, 4, 5, 12, 14, 20, 21, 22, 23, 36, 38, 42, 46, 51, 54, 56, 61, 69, 72, 89, 93, 154, 202, 206, 207, 209, 221, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492];0
org.apache.commons.math3.analysis.solvers.BrentSolverTest.testQuinticZero;[61, 70, 71, 93, 246, 247, 250, 252, 255, 260, 262, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492];[61, 70, 71, 93, 246, 247, 250, 252, 255, 260, 262, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492];0
org.apache.commons.math3.analysis.solvers.BrentSolverTest.testRootEndpoints;[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 486, 491];[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 486, 491];0
org.apache.commons.math3.analysis.solvers.BrentSolverTest.testSinZero;[61, 76, 77, 78, 80, 81, 93, 147, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492];[61, 76, 77, 78, 80, 81, 93, 147, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492];0
org.apache.commons.math3.analysis.solvers.IllinoisSolverTest.testBadEndpoints;[61, 70, 71, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 493, 494, 495, 496, 497];[61, 70, 71, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.IllinoisSolverTest.testQuinticZero;[61, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 494, 495, 496, 497];[61, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.IllinoisSolverTest.testRootEndpoints;[61, 246, 250, 255, 467, 468, 469, 471, 473, 475, 494, 497];[61, 246, 250, 255, 467, 468, 469, 471, 473, 475, 494, 497];0
org.apache.commons.math3.analysis.solvers.IllinoisSolverTest.testSinZero;[61, 76, 77, 78, 80, 81, 147, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 494, 495, 496, 497];[61, 76, 77, 78, 80, 81, 147, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.IllinoisSolverTest.testSolutionAboveSide;[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.IllinoisSolverTest.testSolutionBelowSide;[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.IllinoisSolverTest.testSolutionLeftSide;[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.IllinoisSolverTest.testSolutionRightSide;[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.LaguerreSolverTest.testLinearFunction;[12, 61, 64, 65, 68, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 498, 499, 500, 501, 502, 503, 504, 505, 506];[12, 61, 64, 65, 68, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 498, 499, 500, 501, 502, 503, 504, 505, 506];0
org.apache.commons.math3.analysis.solvers.LaguerreSolverTest.testParameters;[61, 64, 68, 70, 71, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 478, 480, 481, 486, 504, 506];[61, 64, 68, 70, 71, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 478, 480, 481, 486, 504, 506];0
org.apache.commons.math3.analysis.solvers.LaguerreSolverTest.testQuadraticFunction;[12, 61, 64, 65, 68, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507];[12, 61, 64, 65, 68, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507];0
org.apache.commons.math3.analysis.solvers.LaguerreSolverTest.testQuinticFunction;[12, 61, 64, 65, 68, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507];[12, 61, 64, 65, 68, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507];0
org.apache.commons.math3.analysis.solvers.LaguerreSolverTest.testQuinticFunction2;[12, 61, 93, 246, 250, 255, 468, 471, 474, 483, 486, 500, 501, 503, 506, 507, 508];[12, 61, 93, 246, 250, 255, 468, 471, 474, 483, 486, 500, 501, 503, 506, 507, 508];0
org.apache.commons.math3.analysis.solvers.MullerSolver2Test.testExpm1Function;[12, 53, 61, 83, 246, 250, 252, 255, 292, 467, 468, 469, 470, 471, 473, 474, 475, 483, 486, 509];[12, 53, 61, 83, 246, 250, 252, 255, 292, 467, 468, 469, 470, 471, 473, 474, 475, 483, 486, 509];0
org.apache.commons.math3.analysis.solvers.MullerSolver2Test.testParameters;[61, 70, 71, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 470, 471, 473, 474, 475, 483, 486, 509];[61, 70, 71, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 470, 471, 473, 474, 475, 483, 486, 509];0
org.apache.commons.math3.analysis.solvers.MullerSolver2Test.testQuinticFunction;[12, 61, 246, 250, 252, 255, 467, 468, 469, 470, 471, 473, 474, 475, 483, 486, 509];[12, 61, 246, 250, 252, 255, 467, 468, 469, 470, 471, 473, 474, 475, 483, 486, 509];0
org.apache.commons.math3.analysis.solvers.MullerSolver2Test.testSinFunction;[12, 61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 470, 471, 473, 474, 475, 483, 486, 509];[12, 61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 470, 471, 473, 474, 475, 483, 486, 509];0
org.apache.commons.math3.analysis.solvers.MullerSolverTest.testExpm1Function;[12, 53, 61, 83, 122, 246, 250, 252, 255, 292, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 493, 495, 496, 499, 502, 510, 511, 512];[12, 53, 61, 83, 122, 246, 250, 252, 255, 292, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 493, 495, 496, 499, 502, 510, 511, 512];0
org.apache.commons.math3.analysis.solvers.MullerSolverTest.testParameters;[61, 70, 71, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 478, 480, 481, 486, 493, 495, 496, 512];[61, 70, 71, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 478, 480, 481, 486, 493, 495, 496, 512];0
org.apache.commons.math3.analysis.solvers.MullerSolverTest.testQuinticFunction;[12, 61, 122, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 493, 495, 496, 499, 502, 510, 511, 512];[12, 61, 122, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 493, 495, 496, 499, 502, 510, 511, 512];0
org.apache.commons.math3.analysis.solvers.MullerSolverTest.testSinFunction;[12, 61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 493, 495, 496, 499, 502, 510, 511, 512];[12, 61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 493, 495, 496, 499, 502, 510, 511, 512];0
org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest.testQuinticZero;[0, 2, 3, 4, 5, 19, 20, 22, 39, 42, 54, 61, 246, 250, 255, 467, 468, 471, 474, 476, 478, 487, 488, 489, 490];[0, 2, 3, 4, 5, 19, 20, 22, 39, 42, 54, 61, 246, 250, 255, 467, 468, 471, 474, 476, 478, 487, 488, 489, 490];0
org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolverTest.testSinZero;[0, 2, 3, 4, 5, 14, 19, 61, 76, 77, 78, 79, 80, 81, 123, 124, 147, 246, 247, 250, 255, 467, 468, 471, 474, 476, 477, 478, 487, 488, 489, 490];[0, 2, 3, 4, 5, 14, 19, 61, 76, 77, 78, 79, 80, 81, 123, 124, 147, 246, 247, 250, 255, 467, 468, 471, 474, 476, 477, 478, 487, 488, 489, 490];0
org.apache.commons.math3.analysis.solvers.NewtonSolverTest.testQuinticZero;[0, 2, 3, 4, 5, 20, 22, 39, 42, 54, 61, 246, 250, 255, 467, 468, 471, 474, 475, 476, 478, 513, 514, 515, 516];[0, 2, 3, 4, 5, 20, 22, 39, 42, 54, 61, 246, 250, 255, 467, 468, 471, 474, 475, 476, 478, 513, 514, 515, 516];0
org.apache.commons.math3.analysis.solvers.NewtonSolverTest.testSinZero;[61, 76, 77, 78, 79, 80, 81, 147, 222, 228, 246, 247, 250, 255, 467, 468, 471, 474, 475, 476, 477, 478, 513, 514, 515, 516];[61, 76, 77, 78, 79, 80, 81, 147, 222, 228, 246, 247, 250, 255, 467, 468, 471, 474, 475, 476, 477, 478, 513, 514, 515, 516];0
org.apache.commons.math3.analysis.solvers.PegasusSolverTest.testBadEndpoints;[61, 70, 71, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 493, 494, 495, 496, 497];[61, 70, 71, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.PegasusSolverTest.testQuinticZero;[61, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 494, 495, 496, 497];[61, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.PegasusSolverTest.testRootEndpoints;[61, 246, 250, 255, 467, 468, 469, 471, 473, 475, 494, 497];[61, 246, 250, 255, 467, 468, 469, 471, 473, 475, 494, 497];0
org.apache.commons.math3.analysis.solvers.PegasusSolverTest.testSinZero;[61, 76, 77, 78, 80, 81, 147, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 494, 495, 496, 497];[61, 76, 77, 78, 80, 81, 147, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.PegasusSolverTest.testSolutionAboveSide;[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.PegasusSolverTest.testSolutionBelowSide;[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.PegasusSolverTest.testSolutionLeftSide;[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.PegasusSolverTest.testSolutionRightSide;[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest.testBadEndpoints;[61, 70, 71, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 493, 494, 495, 496, 497];[61, 70, 71, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest.testIssue631;[61, 70, 71, 246, 250, 252, 255, 262, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];[61, 70, 71, 246, 250, 252, 255, 262, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest.testQuinticZero;[61, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 494, 495, 496, 497];[61, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest.testRootEndpoints;[61, 246, 250, 255, 467, 468, 469, 471, 473, 475, 494, 497];[61, 246, 250, 255, 467, 468, 469, 471, 473, 475, 494, 497];0
org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest.testSinZero;[61, 76, 77, 78, 80, 81, 147, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 494, 495, 496, 497];[61, 76, 77, 78, 80, 81, 147, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest.testSolutionAboveSide;[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest.testSolutionBelowSide;[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest.testSolutionLeftSide;[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.RegulaFalsiSolverTest.testSolutionRightSide;[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497];0
org.apache.commons.math3.analysis.solvers.RiddersSolverTest.testExpm1Function;[12, 53, 61, 83, 122, 246, 250, 252, 255, 292, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 495, 496, 517];[12, 53, 61, 83, 122, 246, 250, 252, 255, 292, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 495, 496, 517];0
org.apache.commons.math3.analysis.solvers.RiddersSolverTest.testParameters;[61, 70, 71, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 493, 495, 496, 517];[61, 70, 71, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 493, 495, 496, 517];0
org.apache.commons.math3.analysis.solvers.RiddersSolverTest.testQuinticFunction;[12, 61, 122, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 495, 496, 517];[12, 61, 122, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 495, 496, 517];0
org.apache.commons.math3.analysis.solvers.RiddersSolverTest.testSinFunction;[12, 61, 76, 77, 78, 80, 81, 122, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 495, 496, 517];[12, 61, 76, 77, 78, 80, 81, 122, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 495, 496, 517];0
org.apache.commons.math3.analysis.solvers.SecantSolverTest.testBadEndpoints;[61, 70, 71, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 493, 495, 496, 518];[61, 70, 71, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 493, 495, 496, 518];0
org.apache.commons.math3.analysis.solvers.SecantSolverTest.testQuinticZero;[61, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 495, 496, 518];[61, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 495, 496, 518];0
org.apache.commons.math3.analysis.solvers.SecantSolverTest.testRootEndpoints;[61, 246, 250, 255, 467, 468, 469, 471, 473, 475, 518];[61, 246, 250, 255, 467, 468, 469, 471, 473, 475, 518];0
org.apache.commons.math3.analysis.solvers.SecantSolverTest.testSinZero;[61, 76, 77, 78, 80, 81, 147, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 495, 496, 518];[61, 76, 77, 78, 80, 81, 147, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 495, 496, 518];0
org.apache.commons.math3.analysis.solvers.SecantSolverTest.testSolutionAboveSide;[61, 76, 77, 78, 80, 81, 147, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 494, 495, 496, 497, 518, 519];[61, 76, 77, 78, 80, 81, 147, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 494, 495, 496, 497, 518, 519];0
org.apache.commons.math3.analysis.solvers.SecantSolverTest.testSolutionBelowSide;[61, 76, 77, 78, 80, 81, 147, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 494, 495, 496, 497, 518, 519];[61, 76, 77, 78, 80, 81, 147, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 494, 495, 496, 497, 518, 519];0
org.apache.commons.math3.analysis.solvers.SecantSolverTest.testSolutionLeftSide;[61, 76, 77, 78, 80, 81, 147, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 494, 495, 496, 497, 518, 519];[61, 76, 77, 78, 80, 81, 147, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 494, 495, 496, 497, 518, 519];0
org.apache.commons.math3.analysis.solvers.SecantSolverTest.testSolutionRightSide;[61, 76, 77, 78, 80, 81, 147, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 494, 495, 496, 497, 518, 519];[61, 76, 77, 78, 80, 81, 147, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 483, 486, 493, 494, 495, 496, 497, 518, 519];0
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest.testBadEndpoints;[70, 71, 252, 480, 520];[70, 71, 252, 480, 520];0
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest.testBadInitial;[70, 71, 252, 480, 520];[70, 71, 252, 480, 520];0
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest.testBadMaximumIterations;[70, 71, 520];[70, 71, 520];0
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest.testBracketEndpointRoot;[76, 77, 78, 80, 81, 147, 252, 480, 520];[76, 77, 78, 80, 81, 147, 252, 480, 520];0
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest.testBracketSin;[77, 78, 80, 81, 147, 252, 480, 520];[77, 78, 80, 81, 147, 252, 480, 520];0
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest.testMisc;[61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521];[61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521];0
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest.testNullFunction;[70, 71, 520];[70, 71, 520];0
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest.testSolveAccuracyNull;[70, 71, 521];[70, 71, 521];0
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest.testSolveAccuracySin;[61, 76, 77, 78, 80, 81, 93, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521];[61, 76, 77, 78, 80, 81, 93, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521];0
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest.testSolveBadAccuracy;[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 478, 480, 481, 486, 491, 521];[61, 76, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 478, 480, 481, 486, 491, 521];0
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest.testSolveBadEndpoints;[61, 70, 71, 246, 252, 255, 467, 468, 469, 473, 478, 480, 481, 486, 491, 521];[61, 70, 71, 246, 252, 255, 467, 468, 469, 473, 478, 480, 481, 486, 491, 521];0
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest.testSolveNoRoot;[61, 70, 71, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 478, 480, 481, 486, 491, 521];[61, 70, 71, 77, 78, 80, 81, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 478, 480, 481, 486, 491, 521];0
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest.testSolveNull;[70, 71, 521];[70, 71, 521];0
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtilsTest.testSolveSin;[61, 76, 77, 78, 80, 81, 93, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521];[61, 76, 77, 78, 80, 81, 93, 147, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521];0
org.apache.commons.math3.complex.ComplexFieldTest.testOne;[522, 523];[522, 523];0
org.apache.commons.math3.complex.ComplexFieldTest.testSerial;[523, 524];[523, 524];0
org.apache.commons.math3.complex.ComplexFieldTest.testZero;[523, 525];[523, 525];0
org.apache.commons.math3.complex.ComplexFormatTest.testConstructorSingleFormat;[526];[526];0
org.apache.commons.math3.complex.ComplexFormatTest.testDefaultFormatComplex;[332, 526, 527, 528, 529, 530, 531];[332, 526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.ComplexFormatTest.testDifferentImaginaryChar;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.ComplexFormatTest.testForgottenImaginaryCharacter;[332, 526, 527, 532, 533, 534, 535, 536];[332, 526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.ComplexFormatTest.testFormatNumber;[332, 526, 528, 530, 537];[332, 526, 528, 530, 537];0
org.apache.commons.math3.complex.ComplexFormatTest.testGetImaginaryFormat;[529];[529];0
org.apache.commons.math3.complex.ComplexFormatTest.testGetRealFormat;[526];[526];0
org.apache.commons.math3.complex.ComplexFormatTest.testNan;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.ComplexFormatTest.testNegativeBoth;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.ComplexFormatTest.testNegativeImaginary;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.ComplexFormatTest.testNegativeInfinity;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.ComplexFormatTest.testNegativeReal;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.ComplexFormatTest.testParseDifferentImaginaryChar;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.ComplexFormatTest.testParseNan;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.ComplexFormatTest.testParseNegativeBoth;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.ComplexFormatTest.testParseNegativeImaginary;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.ComplexFormatTest.testParseNegativeReal;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.ComplexFormatTest.testParsePositiveInfinity;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.ComplexFormatTest.testParseSimpleNoDecimals;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.ComplexFormatTest.testParseSimpleWithDecimals;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.ComplexFormatTest.testParseSimpleWithDecimalsTrunc;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.ComplexFormatTest.testParseZeroImaginary;[526, 532, 533, 534, 536];[526, 532, 533, 534, 536];0
org.apache.commons.math3.complex.ComplexFormatTest.testParseZeroReal;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.ComplexFormatTest.testPaseNegativeInfinity;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.ComplexFormatTest.testPositiveInfinity;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.ComplexFormatTest.testSimpleNoDecimals;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.ComplexFormatTest.testSimpleWithDecimals;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.ComplexFormatTest.testSimpleWithDecimalsTrunc;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.ComplexFormatTest.testTrimOneImaginary;[332, 526, 527, 528, 529, 530, 531, 537];[332, 526, 527, 528, 529, 530, 531, 537];0
org.apache.commons.math3.complex.ComplexFormatTest.testZeroImaginary;[526, 528, 530];[526, 528, 530];0
org.apache.commons.math3.complex.ComplexFormatTest.testZeroReal;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.ComplexTest.testAbs;[12, 501];[12, 501];0
org.apache.commons.math3.complex.ComplexTest.testAbsInfinite;[501];[501];0
org.apache.commons.math3.complex.ComplexTest.testAbsNaN;[501];[501];0
org.apache.commons.math3.complex.ComplexTest.testAcos;[8, 9, 12, 13, 18, 40, 61, 500, 501];[8, 9, 12, 13, 18, 40, 61, 500, 501];0
org.apache.commons.math3.complex.ComplexTest.testAcosInf;[12, 61, 500, 501];[12, 61, 500, 501];0
org.apache.commons.math3.complex.ComplexTest.testAdd;[61, 500];[61, 500];0
org.apache.commons.math3.complex.ComplexTest.testAddInf;[61, 500];[61, 500];0
org.apache.commons.math3.complex.ComplexTest.testAddNaN;[61, 500];[61, 500];0
org.apache.commons.math3.complex.ComplexTest.testAsin;[8, 9, 12, 18, 40, 61, 500, 501];[8, 9, 12, 18, 40, 61, 500, 501];0
org.apache.commons.math3.complex.ComplexTest.testAsinInf;[12, 61, 500, 501];[12, 61, 500, 501];0
org.apache.commons.math3.complex.ComplexTest.testAtan;[8, 9, 12, 18, 40, 61, 500, 501, 507];[8, 9, 12, 18, 40, 61, 500, 501, 507];0
org.apache.commons.math3.complex.ComplexTest.testAtanI;[61, 500, 507];[61, 500, 507];0
org.apache.commons.math3.complex.ComplexTest.testAtanInf;[61, 500, 507];[61, 500, 507];0
org.apache.commons.math3.complex.ComplexTest.testConjugate;[538];[538];0
org.apache.commons.math3.complex.ComplexTest.testConjugateInfiinite;[538];[538];0
org.apache.commons.math3.complex.ComplexTest.testConjugateNaN;[538];[538];0
org.apache.commons.math3.complex.ComplexTest.testCos;[53, 76, 77, 78, 79, 80, 81, 85, 86];[53, 76, 77, 78, 79, 80, 81, 85, 86];0
org.apache.commons.math3.complex.ComplexTest.testCosh;[53, 76, 77, 78, 79, 80, 81, 85, 86];[53, 76, 77, 78, 79, 80, 81, 85, 86];0
org.apache.commons.math3.complex.ComplexTest.testCoshInf;[53, 76, 77, 78, 79, 80, 81, 85, 86];[53, 76, 77, 78, 79, 80, 81, 85, 86];0
org.apache.commons.math3.complex.ComplexTest.testCosInf;[53, 76, 77, 78, 79, 80, 81, 85, 86];[53, 76, 77, 78, 79, 80, 81, 85, 86];0
org.apache.commons.math3.complex.ComplexTest.testDivide;[61, 507];[61, 507];0
org.apache.commons.math3.complex.ComplexTest.testDivideImaginary;[61, 507];[61, 507];0
org.apache.commons.math3.complex.ComplexTest.testDivideInf;[61, 507];[61, 507];0
org.apache.commons.math3.complex.ComplexTest.testDivideNaN;[61, 507];[61, 507];0
org.apache.commons.math3.complex.ComplexTest.testDivideNaNInf;[61, 507];[61, 507];0
org.apache.commons.math3.complex.ComplexTest.testDivideReal;[61, 507];[61, 507];0
org.apache.commons.math3.complex.ComplexTest.testDivideZero;[61, 507];[61, 507];0
org.apache.commons.math3.complex.ComplexTest.testDivideZeroZero;[61, 507];[61, 507];0
org.apache.commons.math3.complex.ComplexTest.testExp;[53, 61, 76, 77, 78, 79, 80, 81];[53, 61, 76, 77, 78, 79, 80, 81];0
org.apache.commons.math3.complex.ComplexTest.testExpInf;[53, 76, 77, 78, 79, 80, 81];[53, 76, 77, 78, 79, 80, 81];0
org.apache.commons.math3.complex.ComplexTest.testGetArgument;[8, 9, 40];[8, 9, 40];0
org.apache.commons.math3.complex.ComplexTest.testGetArgumentInf;[40];[40];0
org.apache.commons.math3.complex.ComplexTest.testGetArgumentNaN;[40];[40];0
org.apache.commons.math3.complex.ComplexTest.testHashCode;[98];[98];0
org.apache.commons.math3.complex.ComplexTest.testLog;[8, 9, 12, 18, 40, 501];[8, 9, 12, 18, 40, 501];0
org.apache.commons.math3.complex.ComplexTest.testLogInf;[18, 40, 501];[18, 40, 501];0
org.apache.commons.math3.complex.ComplexTest.testLogZero;[18, 40, 501];[18, 40, 501];0
org.apache.commons.math3.complex.ComplexTest.testMath221;[61];[61];0
org.apache.commons.math3.complex.ComplexTest.testMultiply;[61];[61];0
org.apache.commons.math3.complex.ComplexTest.testMultiplyInfInf;[61];[61];0
org.apache.commons.math3.complex.ComplexTest.testMultiplyNaN;[61];[61];0
org.apache.commons.math3.complex.ComplexTest.testMultiplyNaNInf;[61];[61];0
org.apache.commons.math3.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty;[12, 18, 40, 46, 53, 76, 77, 78, 79, 80, 81, 501];[12, 18, 40, 46, 53, 76, 77, 78, 79, 80, 81, 501];0
org.apache.commons.math3.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_realPartZero;[12, 18, 40, 46, 53, 76, 77, 78, 79, 80, 81, 501];[12, 18, 40, 46, 53, 76, 77, 78, 79, 80, 81, 501];0
org.apache.commons.math3.complex.ComplexTest.testNthRoot_normal_fourthRoot;[8, 9, 12, 18, 40, 46, 53, 76, 77, 78, 79, 80, 81, 501];[8, 9, 12, 18, 40, 46, 53, 76, 77, 78, 79, 80, 81, 501];0
org.apache.commons.math3.complex.ComplexTest.testNthRoot_normal_thirdRoot;[8, 9, 12, 18, 40, 46, 53, 76, 77, 78, 79, 80, 81, 501];[8, 9, 12, 18, 40, 46, 53, 76, 77, 78, 79, 80, 81, 501];0
org.apache.commons.math3.complex.ComplexTest.testPow;[8, 9, 12, 18, 40, 53, 61, 76, 77, 78, 79, 80, 81, 501];[8, 9, 12, 18, 40, 53, 61, 76, 77, 78, 79, 80, 81, 501];0
org.apache.commons.math3.complex.ComplexTest.testPowInf;[12, 18, 40, 53, 61, 79, 80, 501];[12, 18, 40, 53, 61, 79, 80, 501];0
org.apache.commons.math3.complex.ComplexTest.testPowNaNBase;[61];[61];0
org.apache.commons.math3.complex.ComplexTest.testPowNaNExponent;[8, 9, 12, 18, 40, 61, 501];[8, 9, 12, 18, 40, 61, 501];0
org.apache.commons.math3.complex.ComplexTest.testpowNull;[61, 70, 71];[61, 70, 71];0
org.apache.commons.math3.complex.ComplexTest.testPowZero;[8, 9, 12, 18, 40, 53, 61, 76, 77, 78, 79, 80, 81, 501];[8, 9, 12, 18, 40, 53, 61, 76, 77, 78, 79, 80, 81, 501];0
org.apache.commons.math3.complex.ComplexTest.testScalarAdd;[61, 500];[61, 500];0
org.apache.commons.math3.complex.ComplexTest.testScalarAddInf;[61, 500];[61, 500];0
org.apache.commons.math3.complex.ComplexTest.testScalarAddNaN;[61, 500];[61, 500];0
org.apache.commons.math3.complex.ComplexTest.testScalarDivide;[61, 507];[61, 507];0
org.apache.commons.math3.complex.ComplexTest.testScalarDivideInf;[61, 507];[61, 507];0
org.apache.commons.math3.complex.ComplexTest.testScalarDivideNaN;[61, 507];[61, 507];0
org.apache.commons.math3.complex.ComplexTest.testScalarDivideZero;[61, 507];[61, 507];0
org.apache.commons.math3.complex.ComplexTest.testScalarMultiply;[61];[61];0
org.apache.commons.math3.complex.ComplexTest.testScalarMultiplyInf;[61];[61];0
org.apache.commons.math3.complex.ComplexTest.testScalarMultiplyNaN;[61];[61];0
org.apache.commons.math3.complex.ComplexTest.testScalarPow;[8, 9, 12, 18, 40, 53, 61, 76, 77, 78, 79, 80, 81, 501];[8, 9, 12, 18, 40, 53, 61, 76, 77, 78, 79, 80, 81, 501];0
org.apache.commons.math3.complex.ComplexTest.testScalarPowInf;[12, 18, 40, 53, 79, 80, 501];[12, 18, 40, 53, 79, 80, 501];0
org.apache.commons.math3.complex.ComplexTest.testScalarPowNaNBase;[61];[61];0
org.apache.commons.math3.complex.ComplexTest.testScalarPowNaNExponent;[8, 9, 12, 18, 40, 61, 501];[8, 9, 12, 18, 40, 61, 501];0
org.apache.commons.math3.complex.ComplexTest.testScalarPowZero;[8, 9, 12, 18, 40, 53, 76, 77, 78, 79, 80, 81, 501];[8, 9, 12, 18, 40, 53, 76, 77, 78, 79, 80, 81, 501];0
org.apache.commons.math3.complex.ComplexTest.testScalarSubtract;[61];[61];0
org.apache.commons.math3.complex.ComplexTest.testScalarSubtractInf;[61];[61];0
org.apache.commons.math3.complex.ComplexTest.testScalarSubtractNaN;[61];[61];0
org.apache.commons.math3.complex.ComplexTest.testSin;[53, 76, 77, 78, 79, 80, 81, 85, 86];[53, 76, 77, 78, 79, 80, 81, 85, 86];0
org.apache.commons.math3.complex.ComplexTest.testSinh;[53, 76, 77, 78, 79, 80, 81, 85, 86];[53, 76, 77, 78, 79, 80, 81, 85, 86];0
org.apache.commons.math3.complex.ComplexTest.testSinhInf;[53, 76, 77, 78, 79, 80, 81, 85, 86];[53, 76, 77, 78, 79, 80, 81, 85, 86];0
org.apache.commons.math3.complex.ComplexTest.testSinInf;[53, 76, 77, 78, 79, 80, 81, 85, 86];[53, 76, 77, 78, 79, 80, 81, 85, 86];0
org.apache.commons.math3.complex.ComplexTest.testSqrt1z;[12, 61, 501];[12, 61, 501];0
org.apache.commons.math3.complex.ComplexTest.testSqrt1zNaN;[61];[61];0
org.apache.commons.math3.complex.ComplexTest.testSqrtImaginaryNegative;[12, 501];[12, 501];0
org.apache.commons.math3.complex.ComplexTest.testSqrtImaginaryZero;[12, 501];[12, 501];0
org.apache.commons.math3.complex.ComplexTest.testSqrtInf;[12, 501];[12, 501];0
org.apache.commons.math3.complex.ComplexTest.testSqrtPolar;[12, 76, 77, 78, 79, 80, 81, 501, 539];[12, 76, 77, 78, 79, 80, 81, 501, 539];0
org.apache.commons.math3.complex.ComplexTest.testSqrtRealNegative;[12, 501];[12, 501];0
org.apache.commons.math3.complex.ComplexTest.testSqrtRealPositive;[12, 501];[12, 501];0
org.apache.commons.math3.complex.ComplexTest.testSqrtRealZero;[12, 501];[12, 501];0
org.apache.commons.math3.complex.ComplexTest.testSubtract;[61];[61];0
org.apache.commons.math3.complex.ComplexTest.testSubtractInf;[61];[61];0
org.apache.commons.math3.complex.ComplexTest.testSubtractNaN;[61];[61];0
org.apache.commons.math3.complex.ComplexTest.testTan;[53, 76, 77, 78, 79, 80, 81, 85, 86];[53, 76, 77, 78, 79, 80, 81, 85, 86];0
org.apache.commons.math3.complex.ComplexTest.testTanCritical;[53, 76, 77, 78, 79, 80, 81, 85, 86];[53, 76, 77, 78, 79, 80, 81, 85, 86];0
org.apache.commons.math3.complex.ComplexTest.testTanh;[53, 76, 77, 78, 79, 80, 81, 85, 86];[53, 76, 77, 78, 79, 80, 81, 85, 86];0
org.apache.commons.math3.complex.ComplexTest.testTanhCritical;[53, 76, 77, 78, 79, 80, 81, 85, 86];[53, 76, 77, 78, 79, 80, 81, 85, 86];0
org.apache.commons.math3.complex.ComplexUtilsTest.testConvertToComplex;[503];[503];0
org.apache.commons.math3.complex.ComplexUtilsTest.testPolar2Complex;[53, 61, 76, 77, 78, 79, 80, 81, 539];[53, 61, 76, 77, 78, 79, 80, 81, 539];0
org.apache.commons.math3.complex.ComplexUtilsTest.testPolar2ComplexIllegalModulus;[70, 71, 539];[70, 71, 539];0
org.apache.commons.math3.complex.ComplexUtilsTest.testPolar2ComplexInf;[76, 77, 78, 79, 80, 81, 539];[76, 77, 78, 79, 80, 81, 539];0
org.apache.commons.math3.complex.ComplexUtilsTest.testPolar2ComplexNaN;[76, 77, 78, 79, 80, 81, 539];[76, 77, 78, 79, 80, 81, 539];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testConstructorSingleFormat;[526];[526];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testDefaultFormatComplex;[332, 526, 527, 528, 529, 530, 531];[332, 526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testDifferentImaginaryChar;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testForgottenImaginaryCharacter;[332, 526, 527, 532, 533, 534, 535, 536];[332, 526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testFormatNumber;[332, 526, 528, 530, 537];[332, 526, 528, 530, 537];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testGetImaginaryFormat;[529];[529];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testGetRealFormat;[526];[526];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testNan;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testNegativeBoth;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testNegativeImaginary;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testNegativeInfinity;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testNegativeReal;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testParseDifferentImaginaryChar;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testParseNan;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testParseNegativeBoth;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testParseNegativeImaginary;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testParseNegativeReal;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testParsePositiveInfinity;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testParseSimpleNoDecimals;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testParseSimpleWithDecimals;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testParseSimpleWithDecimalsTrunc;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testParseZeroImaginary;[526, 532, 533, 534, 536];[526, 532, 533, 534, 536];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testParseZeroReal;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testPaseNegativeInfinity;[526, 527, 532, 533, 534, 535, 536];[526, 527, 532, 533, 534, 535, 536];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testPositiveInfinity;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testSimpleNoDecimals;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testSimpleWithDecimals;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testSimpleWithDecimalsTrunc;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testTrimOneImaginary;[332, 526, 527, 528, 529, 530, 531, 537];[332, 526, 527, 528, 529, 530, 531, 537];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testZeroImaginary;[526, 528, 530];[526, 528, 530];0
org.apache.commons.math3.complex.FrenchComplexFormatTest.testZeroReal;[526, 527, 528, 529, 530, 531];[526, 527, 528, 529, 530, 531];0
org.apache.commons.math3.complex.QuaternionTest.testAddQuaternionQuaternion;[540];[540];0
org.apache.commons.math3.complex.QuaternionTest.testConjugate;[541];[541];0
org.apache.commons.math3.complex.QuaternionTest.testDotProductQuaternionQuaternion;[542];[542];0
org.apache.commons.math3.complex.QuaternionTest.testGetInverse;[70, 71, 543];[70, 71, 543];0
org.apache.commons.math3.complex.QuaternionTest.testIsUnitQuaternion;[12, 93, 544, 545];[12, 93, 544, 545];0
org.apache.commons.math3.complex.QuaternionTest.testNorm;[12, 541, 543, 544];[12, 541, 543, 544];0
org.apache.commons.math3.complex.QuaternionTest.testNormalize;[12, 544, 545];[12, 544, 545];0
org.apache.commons.math3.complex.QuaternionTest.testNormalizeFail;[12, 70, 71, 544, 545];[12, 70, 71, 544, 545];0
org.apache.commons.math3.complex.QuaternionTest.testObjectEquals;[546];[546];0
org.apache.commons.math3.complex.QuaternionTest.testPolarForm;[8, 9, 12, 13, 26, 93, 544, 545, 547, 548, 549, 550, 551];[8, 9, 12, 13, 26, 93, 544, 545, 547, 548, 549, 550, 551];0
org.apache.commons.math3.complex.QuaternionTest.testProductQuaternionQuaternion;[12, 541, 543, 552, 553, 554, 555, 556, 557];[12, 541, 543, 552, 553, 554, 555, 556, 557];0
org.apache.commons.math3.complex.QuaternionTest.testProductQuaternionVector;[12, 543, 552, 553, 554, 555, 556, 557];[12, 543, 552, 553, 554, 555, 556, 557];0
org.apache.commons.math3.complex.QuaternionTest.testQuaternionEquals;[93];[93];0
org.apache.commons.math3.complex.QuaternionTest.testQuaternionEquals2;[93];[93];0
org.apache.commons.math3.complex.QuaternionTest.testSubtractQuaternionQuaternion;[558];[558];0
org.apache.commons.math3.complex.QuaternionTest.testWrongDimension;[70, 71];[70, 71];0
org.apache.commons.math3.complex.RootsOfUnityTest.testComputeRoots;[76, 77, 78, 79, 80, 81, 559, 560, 561, 562, 563];[76, 77, 78, 79, 80, 81, 559, 560, 561, 562, 563];0
org.apache.commons.math3.complex.RootsOfUnityTest.testGetNumberOfRoots;[76, 77, 78, 79, 80, 81, 560, 563];[76, 77, 78, 79, 80, 81, 560, 563];0
org.apache.commons.math3.complex.RootsOfUnityTest.testMathIllegalState1;[70, 71, 562];[70, 71, 562];0
org.apache.commons.math3.complex.RootsOfUnityTest.testMathIllegalState2;[70, 71, 561];[70, 71, 561];0
org.apache.commons.math3.complex.RootsOfUnityTest.testMathIllegalState3;[70, 71, 559];[70, 71, 559];0
org.apache.commons.math3.complex.RootsOfUnityTest.testZeroNumberOfRoots;[70, 71, 563];[70, 71, 563];0
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest.testConstructorOK;[156, 158, 159, 163, 164, 165, 166, 169, 172, 173, 174, 175, 176, 181, 182, 184, 187, 189, 191, 193, 195, 564];[156, 158, 159, 163, 164, 165, 166, 169, 172, 173, 174, 175, 176, 181, 182, 184, 187, 189, 191, 193, 195, 564];0
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest.testConvergenceOnFunctionAccuracy;[61, 156, 158, 159, 160, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 181, 182, 184, 185, 186, 187, 189, 191, 193, 195, 197, 201, 246, 250, 255, 565, 566, 567, 568, 569, 570, 571, 572];[61, 156, 158, 159, 160, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 181, 182, 184, 185, 186, 187, 189, 191, 193, 195, 197, 201, 246, 250, 255, 565, 566, 567, 568, 569, 570, 571, 572];0
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest.testInsufficientOrder3;[70, 71, 156, 158, 159, 163, 164, 165, 166, 169, 172, 173, 174, 175, 176, 181, 182, 184, 187, 189, 191, 193, 195];[70, 71, 156, 158, 159, 163, 164, 165, 166, 169, 172, 173, 174, 175, 176, 181, 182, 184, 187, 189, 191, 193, 195];0
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFPTest.testNeta;[61, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 246, 250, 255, 565, 566, 567, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579];[61, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 246, 250, 255, 565, 566, 567, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579];0
org.apache.commons.math3.dfp.DfpDecTest.testNextAfter;[156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 181, 182, 183, 184, 186, 187, 189, 191, 193, 195, 196, 197, 201, 579, 580, 581, 582, 583, 584, 585, 586, 587];[156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 181, 182, 183, 184, 186, 187, 189, 191, 193, 195, 196, 197, 201, 579, 580, 581, 582, 583, 584, 585, 586, 587];0
org.apache.commons.math3.dfp.DfpDecTest.testRound;[156, 158, 159, 160, 161, 165, 166, 170, 173, 174, 176, 181, 182, 184, 189, 191, 193, 195, 196, 580, 582, 584, 585, 587, 588];[156, 158, 159, 160, 161, 165, 166, 170, 173, 174, 176, 181, 182, 184, 189, 191, 193, 195, 196, 580, 582, 584, 585, 587, 588];0
org.apache.commons.math3.dfp.DfpDecTest.testRoundDecimal10;[156, 158, 159, 160, 161, 165, 166, 170, 173, 174, 176, 181, 182, 184, 189, 191, 193, 195, 196, 580, 582, 584, 587, 588];[156, 158, 159, 160, 161, 165, 166, 170, 173, 174, 176, 181, 182, 184, 189, 191, 193, 195, 196, 580, 582, 584, 587, 588];0
org.apache.commons.math3.dfp.DfpMathTest.testPow;[156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 573, 574, 575, 576, 577, 578, 579, 582, 586, 587, 589];[156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 573, 574, 575, 576, 577, 578, 579, 582, 586, 587, 589];0
org.apache.commons.math3.dfp.DfpMathTest.testSin;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 579, 582, 587, 590];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 579, 582, 587, 590];0
org.apache.commons.math3.dfp.DfpTest.testAbs;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 569, 582];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 569, 582];0
org.apache.commons.math3.dfp.DfpTest.testAcos;[8, 9, 12, 13, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 310, 579, 582, 586, 590, 591];[8, 9, 12, 13, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 310, 579, 582, 586, 590, 591];0
org.apache.commons.math3.dfp.DfpTest.testAcosh;[12, 16, 18, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 310, 573, 574, 575, 576, 577, 579, 582, 592, 593];[12, 16, 18, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 310, 573, 574, 575, 576, 577, 579, 582, 592, 593];0
org.apache.commons.math3.dfp.DfpTest.testAdd;[156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 170, 173, 174, 176, 177, 181, 182, 184, 186, 189, 191, 193, 195, 196, 582, 587];[156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 170, 173, 174, 176, 177, 181, 182, 184, 186, 189, 191, 193, 195, 196, 582, 587];0
org.apache.commons.math3.dfp.DfpTest.testAddDouble;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582];0
org.apache.commons.math3.dfp.DfpTest.testAddField;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582];0
org.apache.commons.math3.dfp.DfpTest.testAsin;[9, 12, 26, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 310, 579, 582, 590, 594];[9, 12, 26, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 310, 579, 582, 590, 594];0
org.apache.commons.math3.dfp.DfpTest.testAsinh;[12, 18, 33, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 310, 573, 574, 575, 576, 577, 579, 582, 592, 595];[12, 18, 33, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 310, 573, 574, 575, 576, 577, 579, 582, 592, 595];0
org.apache.commons.math3.dfp.DfpTest.testAtan;[9, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 579, 582, 590, 596];[9, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 579, 582, 590, 596];0
org.apache.commons.math3.dfp.DfpTest.testAtan2;[8, 9, 40, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 310, 579, 582, 590, 596, 597];[8, 9, 40, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 310, 579, 582, 590, 596, 597];0
org.apache.commons.math3.dfp.DfpTest.testAtanh;[18, 47, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 573, 574, 575, 576, 577, 579, 582, 592, 598];[18, 47, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 573, 574, 575, 576, 577, 579, 582, 592, 598];0
org.apache.commons.math3.dfp.DfpTest.testByteConstructor;[157, 158, 159, 161, 163, 164, 166, 168, 173, 176, 181, 182, 184, 189, 191, 193, 582];[157, 158, 159, 161, 163, 164, 166, 168, 173, 176, 181, 182, 184, 189, 191, 193, 582];0
org.apache.commons.math3.dfp.DfpTest.testCbrt;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 573, 574, 575, 576, 577, 578, 579, 582, 589, 599, 600];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 573, 574, 575, 576, 577, 578, 579, 582, 589, 599, 600];0
org.apache.commons.math3.dfp.DfpTest.testCeil;[156, 158, 159, 160, 161, 163, 164, 165, 166, 169, 173, 174, 176, 181, 182, 184, 187, 189, 191, 193, 196, 200, 582, 587, 601];[156, 158, 159, 160, 161, 163, 164, 165, 166, 169, 173, 174, 176, 181, 182, 184, 187, 189, 191, 193, 196, 200, 582, 587, 601];0
org.apache.commons.math3.dfp.DfpTest.testCompare;[158, 159, 160, 161, 163, 164, 165, 166, 173, 176, 177, 181, 182, 184, 185, 189, 191, 193, 196, 197, 201, 582, 587];[158, 159, 160, 161, 163, 164, 165, 166, 173, 176, 177, 181, 182, 184, 185, 189, 191, 193, 196, 197, 201, 582, 587];0
org.apache.commons.math3.dfp.DfpTest.testCopySign;[158, 159, 160, 161, 163, 164, 165, 166, 173, 176, 181, 182, 184, 189, 191, 193, 196, 582, 586, 587];[158, 159, 160, 161, 163, 164, 165, 166, 173, 176, 181, 182, 184, 189, 191, 193, 196, 582, 586, 587];0
org.apache.commons.math3.dfp.DfpTest.testCopySignDouble;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582, 602];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582, 602];0
org.apache.commons.math3.dfp.DfpTest.testCopySignField;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582, 602];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582, 602];0
org.apache.commons.math3.dfp.DfpTest.testCos;[76, 77, 78, 79, 81, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 582, 603];[76, 77, 78, 79, 81, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 582, 603];0
org.apache.commons.math3.dfp.DfpTest.testCosh;[53, 85, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 576, 578, 579, 582, 604];[53, 85, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 576, 578, 579, 582, 604];0
org.apache.commons.math3.dfp.DfpTest.testDivide;[157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 173, 176, 177, 181, 182, 184, 189, 191, 193, 196, 582, 587];[157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 173, 176, 177, 181, 182, 184, 189, 191, 193, 196, 582, 587];0
org.apache.commons.math3.dfp.DfpTest.testDivideDouble;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582];0
org.apache.commons.math3.dfp.DfpTest.testDivideField;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582];0
org.apache.commons.math3.dfp.DfpTest.testDivideInt;[157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 173, 176, 177, 181, 182, 184, 186, 189, 191, 193, 196, 582, 587];[157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 173, 176, 177, 181, 182, 184, 186, 189, 191, 193, 196, 582, 587];0
org.apache.commons.math3.dfp.DfpTest.testEquals;[156, 158, 159, 160, 161, 163, 164, 165, 166, 169, 172, 173, 174, 175, 176, 181, 182, 184, 187, 189, 191, 193, 196, 582];[156, 158, 159, 160, 161, 163, 164, 165, 166, 169, 172, 173, 174, 175, 176, 181, 182, 184, 187, 189, 191, 193, 196, 582];0
org.apache.commons.math3.dfp.DfpTest.testExp;[53, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 576, 578, 579, 582, 605];[53, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 576, 578, 579, 582, 605];0
org.apache.commons.math3.dfp.DfpTest.testExpm1;[83, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 576, 578, 579, 582, 606];[83, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 576, 578, 579, 582, 606];0
org.apache.commons.math3.dfp.DfpTest.testFloor;[158, 159, 160, 161, 163, 164, 165, 166, 173, 176, 181, 182, 184, 189, 191, 193, 196, 200, 575, 582, 587];[158, 159, 160, 161, 163, 164, 165, 166, 173, 176, 181, 182, 184, 189, 191, 193, 196, 200, 575, 582, 587];0
org.apache.commons.math3.dfp.DfpTest.testGetField;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582];0
org.apache.commons.math3.dfp.DfpTest.testHash;[156, 158, 159, 161, 163, 164, 165, 166, 169, 172, 173, 174, 175, 176, 181, 182, 184, 187, 189, 191, 193, 582, 607];[156, 158, 159, 161, 163, 164, 165, 166, 169, 172, 173, 174, 175, 176, 181, 182, 184, 187, 189, 191, 193, 582, 607];0
org.apache.commons.math3.dfp.DfpTest.testHypot;[12, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582, 608];[12, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582, 608];0
org.apache.commons.math3.dfp.DfpTest.testIntConstructor;[157, 158, 159, 161, 163, 164, 166, 168, 173, 176, 181, 182, 184, 189, 191, 193, 582];[157, 158, 159, 161, 163, 164, 166, 168, 173, 176, 181, 182, 184, 189, 191, 193, 582];0
org.apache.commons.math3.dfp.DfpTest.testIntValue;[156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 169, 170, 173, 174, 176, 181, 182, 184, 185, 186, 187, 189, 191, 193, 196, 197, 199, 200, 201, 576, 582];[156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 169, 170, 173, 174, 176, 181, 182, 184, 185, 186, 187, 189, 191, 193, 196, 197, 199, 200, 201, 576, 582];0
org.apache.commons.math3.dfp.DfpTest.testIssue567;[156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 176, 177, 178, 181, 182, 184, 185, 186, 189, 191, 192, 193, 195, 196, 197, 198, 201, 582];[156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 176, 177, 178, 181, 182, 184, 185, 186, 189, 191, 192, 193, 195, 196, 197, 198, 201, 582];0
org.apache.commons.math3.dfp.DfpTest.testIsZero;[156, 158, 159, 160, 161, 163, 164, 165, 166, 169, 172, 173, 174, 175, 176, 178, 181, 182, 184, 187, 189, 191, 193, 195, 201, 566, 582];[156, 158, 159, 160, 161, 163, 164, 165, 166, 169, 172, 173, 174, 175, 176, 178, 181, 182, 184, 187, 189, 191, 193, 195, 201, 566, 582];0
org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDaFa;[105, 106, 107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 311, 582, 609];[105, 106, 107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 311, 582, 609];0
org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF2;[105, 106, 107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 311, 582, 609];[105, 106, 107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 311, 582, 609];0
org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF3;[105, 106, 107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 311, 582, 609];[105, 106, 107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 311, 582, 609];0
org.apache.commons.math3.dfp.DfpTest.testLinearCombinationDF4;[105, 106, 107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 311, 582, 609];[105, 106, 107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 311, 582, 609];0
org.apache.commons.math3.dfp.DfpTest.testLinearCombinationFaFa;[105, 106, 107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 311, 582, 609];[105, 106, 107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 311, 582, 609];0
org.apache.commons.math3.dfp.DfpTest.testLinearCombinationFF2;[105, 106, 107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 311, 582, 609];[105, 106, 107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 311, 582, 609];0
org.apache.commons.math3.dfp.DfpTest.testLinearCombinationFF3;[105, 106, 107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 311, 582, 609];[105, 106, 107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 311, 582, 609];0
org.apache.commons.math3.dfp.DfpTest.testLinearCombinationFF4;[105, 106, 107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 311, 582, 609];[105, 106, 107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 311, 582, 609];0
org.apache.commons.math3.dfp.DfpTest.testLog;[18, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 573, 574, 575, 576, 577, 579, 582, 592];[18, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 573, 574, 575, 576, 577, 579, 582, 592];0
org.apache.commons.math3.dfp.DfpTest.testLog10;[158, 159, 161, 163, 164, 166, 173, 176, 181, 182, 183, 184, 189, 191, 193, 582];[158, 159, 161, 163, 164, 166, 173, 176, 181, 182, 183, 184, 189, 191, 193, 582];0
org.apache.commons.math3.dfp.DfpTest.testLog10K;[158, 159, 161, 163, 164, 166, 173, 176, 181, 182, 184, 189, 191, 193, 574, 582];[158, 159, 161, 163, 164, 166, 173, 176, 181, 182, 184, 189, 191, 193, 574, 582];0
org.apache.commons.math3.dfp.DfpTest.testLog1p;[18, 115, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 573, 574, 575, 576, 577, 579, 582, 610];[18, 115, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 573, 574, 575, 576, 577, 579, 582, 610];0
org.apache.commons.math3.dfp.DfpTest.testLongConstructor;[157, 158, 159, 161, 163, 164, 166, 168, 173, 176, 181, 182, 184, 189, 191, 193, 582];[157, 158, 159, 161, 163, 164, 166, 168, 173, 176, 181, 182, 184, 189, 191, 193, 582];0
org.apache.commons.math3.dfp.DfpTest.testMultiply;[157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172, 173, 176, 177, 181, 182, 184, 189, 191, 193, 195, 196, 582, 587];[157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172, 173, 176, 177, 181, 182, 184, 189, 191, 193, 195, 196, 582, 587];0
org.apache.commons.math3.dfp.DfpTest.testMultiplyDouble;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582];0
org.apache.commons.math3.dfp.DfpTest.testMultiplyField;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582];0
org.apache.commons.math3.dfp.DfpTest.testMultiplyInt;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582];0
org.apache.commons.math3.dfp.DfpTest.testNextAfter;[156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 176, 181, 182, 184, 186, 187, 189, 191, 193, 195, 196, 197, 201, 579, 582, 587, 611];[156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 176, 181, 182, 184, 186, 187, 189, 191, 193, 195, 196, 197, 201, 579, 582, 587, 611];0
org.apache.commons.math3.dfp.DfpTest.testPowDouble;[18, 46, 53, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 573, 574, 575, 576, 577, 578, 579, 582, 589, 612];[18, 46, 53, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 573, 574, 575, 576, 577, 578, 579, 582, 589, 612];0
org.apache.commons.math3.dfp.DfpTest.testPower10;[158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 172, 173, 176, 181, 182, 184, 187, 189, 191, 193, 196, 581, 582, 587];[158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 172, 173, 176, 181, 182, 184, 187, 189, 191, 193, 196, 581, 582, 587];0
org.apache.commons.math3.dfp.DfpTest.testPower10K;[158, 159, 160, 161, 163, 164, 165, 166, 169, 171, 173, 176, 181, 182, 184, 187, 189, 191, 193, 196, 582, 587];[158, 159, 160, 161, 163, 164, 165, 166, 169, 171, 173, 176, 181, 182, 184, 187, 189, 191, 193, 196, 582, 587];0
org.apache.commons.math3.dfp.DfpTest.testPowField;[18, 46, 53, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 573, 574, 575, 576, 577, 578, 579, 582, 589, 612];[18, 46, 53, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 573, 574, 575, 576, 577, 578, 579, 582, 589, 612];0
org.apache.commons.math3.dfp.DfpTest.testPowInt;[46, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582, 612];[46, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582, 612];0
org.apache.commons.math3.dfp.DfpTest.testReciprocal;[157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 173, 176, 177, 181, 182, 184, 187, 189, 191, 193, 196, 309, 582, 587];[157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 173, 176, 177, 181, 182, 184, 187, 189, 191, 193, 196, 309, 582, 587];0
org.apache.commons.math3.dfp.DfpTest.testRemainder;[156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 176, 181, 182, 184, 185, 186, 189, 191, 193, 194, 196, 199, 200, 201, 582, 587];[156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 176, 181, 182, 184, 185, 186, 189, 191, 193, 194, 196, 199, 200, 201, 582, 587];0
org.apache.commons.math3.dfp.DfpTest.testRemainderDouble;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 582];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 582];0
org.apache.commons.math3.dfp.DfpTest.testRemainderField;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 582];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 582];0
org.apache.commons.math3.dfp.DfpTest.testRint;[156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 169, 170, 173, 174, 176, 181, 182, 184, 185, 186, 187, 189, 191, 193, 196, 199, 200, 201, 582, 587];[156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 169, 170, 173, 174, 176, 181, 182, 184, 185, 186, 187, 189, 191, 193, 196, 199, 200, 201, 582, 587];0
org.apache.commons.math3.dfp.DfpTest.testRootN;[18, 46, 53, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 573, 574, 575, 576, 577, 578, 579, 582, 589, 600];[18, 46, 53, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 573, 574, 575, 576, 577, 578, 579, 582, 589, 600];0
org.apache.commons.math3.dfp.DfpTest.testRound;[156, 158, 159, 160, 161, 163, 164, 165, 166, 173, 174, 176, 181, 182, 184, 189, 191, 193, 195, 196, 582, 587, 588];[156, 158, 159, 160, 161, 163, 164, 165, 166, 173, 174, 176, 181, 182, 184, 189, 191, 193, 195, 196, 582, 587, 588];0
org.apache.commons.math3.dfp.DfpTest.testScalb;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582, 613];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582, 613];0
org.apache.commons.math3.dfp.DfpTest.testSignPredicates;[158, 159, 160, 161, 163, 164, 166, 173, 176, 178, 181, 182, 184, 187, 189, 191, 193, 201, 565, 567, 582, 614, 615];[158, 159, 160, 161, 163, 164, 166, 173, 176, 178, 181, 182, 184, 187, 189, 191, 193, 201, 565, 567, 582, 614, 615];0
org.apache.commons.math3.dfp.DfpTest.testSignum;[122, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 566, 582, 616];[122, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 566, 582, 616];0
org.apache.commons.math3.dfp.DfpTest.testSin;[77, 78, 80, 81, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 312, 582];[77, 78, 80, 81, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 312, 582];0
org.apache.commons.math3.dfp.DfpTest.testSinh;[53, 83, 86, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 576, 578, 579, 582, 617];[53, 83, 86, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 576, 578, 579, 582, 617];0
org.apache.commons.math3.dfp.DfpTest.testSpecialConstructors;[158, 159, 160, 161, 163, 164, 165, 166, 173, 176, 181, 182, 184, 189, 191, 193, 196, 582];[158, 159, 160, 161, 163, 164, 165, 166, 173, 176, 181, 182, 184, 189, 191, 193, 196, 582];0
org.apache.commons.math3.dfp.DfpTest.testSqrt;[156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 170, 173, 174, 176, 177, 181, 182, 184, 185, 186, 189, 191, 192, 193, 195, 196, 197, 582, 587];[156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 170, 173, 174, 176, 177, 181, 182, 184, 185, 186, 189, 191, 192, 193, 195, 196, 197, 582, 587];0
org.apache.commons.math3.dfp.DfpTest.testSubtractDouble;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582];0
org.apache.commons.math3.dfp.DfpTest.testSubtractField;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 582];0
org.apache.commons.math3.dfp.DfpTest.testTan;[78, 81, 131, 134, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 582, 618];[78, 81, 131, 134, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 582, 618];0
org.apache.commons.math3.dfp.DfpTest.testTanh;[53, 83, 136, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 576, 578, 579, 582, 619];[53, 83, 136, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 310, 576, 578, 579, 582, 619];0
org.apache.commons.math3.dfp.DfpTest.testToString;[157, 158, 159, 161, 163, 164, 166, 168, 173, 176, 181, 182, 184, 189, 191, 193, 582, 620];[157, 158, 159, 161, 163, 164, 166, 168, 173, 176, 181, 182, 184, 189, 191, 193, 582, 620];0
org.apache.commons.math3.distribution.BetaDistributionTest.testCumulative;[12, 18, 53, 61, 93, 107, 108, 115, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635];[12, 18, 53, 61, 93, 107, 108, 115, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635];0
org.apache.commons.math3.distribution.BetaDistributionTest.testDensity;[18, 53, 107, 108, 115, 633, 636, 637];[18, 53, 107, 108, 115, 633, 636, 637];0
org.apache.commons.math3.distribution.BetaDistributionTest.testMoments;[107, 108, 621, 624, 632, 635];[107, 108, 621, 624, 632, 635];0
org.apache.commons.math3.distribution.BinomialDistributionTest.testConsistencyAtSupportBounds;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.BinomialDistributionTest.testCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.BinomialDistributionTest.testDegenerate0;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.BinomialDistributionTest.testDegenerate1;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.BinomialDistributionTest.testDensities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.BinomialDistributionTest.testIllegalArguments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.BinomialDistributionTest.testInverseCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.BinomialDistributionTest.testMath718;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.BinomialDistributionTest.testMoments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.BinomialDistributionTest.testSampling;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.CauchyDistributionTest.testConsistency;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.CauchyDistributionTest.testCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.CauchyDistributionTest.testDensities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.CauchyDistributionTest.testDensityIntegrals;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.CauchyDistributionTest.testDistributionClone;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.CauchyDistributionTest.testIllegalArguments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.CauchyDistributionTest.testInverseCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.CauchyDistributionTest.testInverseCumulativeProbabilityExtremes;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.CauchyDistributionTest.testIsSupportLowerBoundInclusive;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.CauchyDistributionTest.testIsSupportUpperBoundInclusive;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.CauchyDistributionTest.testMedian;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.CauchyDistributionTest.testMoments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.CauchyDistributionTest.testPreconditions;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.CauchyDistributionTest.testSampling;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.CauchyDistributionTest.testScale;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ChiSquaredDistributionTest.testConsistency;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.ChiSquaredDistributionTest.testCumulativeProbabilities;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.ChiSquaredDistributionTest.testDensities;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.ChiSquaredDistributionTest.testDensity;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.ChiSquaredDistributionTest.testDensityIntegrals;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.ChiSquaredDistributionTest.testDfAccessors;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.ChiSquaredDistributionTest.testDistributionClone;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.ChiSquaredDistributionTest.testIllegalArguments;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.ChiSquaredDistributionTest.testInverseCumulativeProbabilities;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.ChiSquaredDistributionTest.testIsSupportLowerBoundInclusive;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.ChiSquaredDistributionTest.testIsSupportUpperBoundInclusive;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.ChiSquaredDistributionTest.testMoments;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.ChiSquaredDistributionTest.testSampling;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.ChiSquaredDistributionTest.testSmallDf;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest.testCumulativeProbability;[353, 354, 638, 639];[353, 354, 638, 639];0
org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest.testExceptions;[70, 71, 107, 108, 353, 354];[70, 71, 107, 108, 353, 354];0
org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest.testGetNumericalMean;[353, 354, 638, 640];[353, 354, 638, 640];0
org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest.testGetNumericalVariance;[353, 354, 638, 641];[353, 354, 638, 641];0
org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest.testGetSupportLowerBound;[353, 354, 638, 642];[353, 354, 638, 642];0
org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest.testGetSupportUpperBound;[353, 354, 638, 643];[353, 354, 638, 643];0
org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest.testIsSupportConnected;[644];[644];0
org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest.testProbability;[645, 646];[645, 646];0
org.apache.commons.math3.distribution.EnumeratedIntegerDistributionTest.testSample;[46, 105, 107, 108, 353, 354, 638, 640, 641, 647, 648, 649, 650, 651, 652, 653, 654, 655];[46, 105, 107, 108, 353, 354, 638, 640, 641, 647, 648, 649, 650, 651, 652, 653, 654, 655];0
org.apache.commons.math3.distribution.EnumeratedRealDistributionTest.testCumulativeProbability;[353, 354, 638, 656];[353, 354, 638, 656];0
org.apache.commons.math3.distribution.EnumeratedRealDistributionTest.testDensity;[645, 657, 658];[645, 657, 658];0
org.apache.commons.math3.distribution.EnumeratedRealDistributionTest.testExceptions;[70, 71, 107, 108, 353, 354];[70, 71, 107, 108, 353, 354];0
org.apache.commons.math3.distribution.EnumeratedRealDistributionTest.testGetNumericalMean;[353, 354, 638, 659];[353, 354, 638, 659];0
org.apache.commons.math3.distribution.EnumeratedRealDistributionTest.testGetNumericalVariance;[353, 354, 638, 660];[353, 354, 638, 660];0
org.apache.commons.math3.distribution.EnumeratedRealDistributionTest.testGetSupportLowerBound;[353, 354, 638, 661];[353, 354, 638, 661];0
org.apache.commons.math3.distribution.EnumeratedRealDistributionTest.testGetSupportUpperBound;[353, 354, 638, 662];[353, 354, 638, 662];0
org.apache.commons.math3.distribution.EnumeratedRealDistributionTest.testIssue942;[105, 107, 108, 353, 354, 647, 651];[105, 107, 108, 353, 354, 647, 651];0
org.apache.commons.math3.distribution.EnumeratedRealDistributionTest.testIsSupportConnected;[663];[663];0
org.apache.commons.math3.distribution.EnumeratedRealDistributionTest.testIsSupportLowerBoundInclusive;[664];[664];0
org.apache.commons.math3.distribution.EnumeratedRealDistributionTest.testIsSupportUpperBoundInclusive;[665];[665];0
org.apache.commons.math3.distribution.EnumeratedRealDistributionTest.testProbability;[645, 657];[645, 657];0
org.apache.commons.math3.distribution.EnumeratedRealDistributionTest.testSample;[46, 105, 107, 108, 353, 354, 638, 647, 651, 652, 653, 654, 655, 659, 660, 666, 667, 668];[46, 105, 107, 108, 353, 354, 638, 647, 651, 652, 653, 654, 655, 659, 660, 666, 667, 668];0
org.apache.commons.math3.distribution.ExponentialDistributionTest.testConsistency;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ExponentialDistributionTest.testCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ExponentialDistributionTest.testCumulativeProbability2;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ExponentialDistributionTest.testCumulativeProbabilityExtremes;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ExponentialDistributionTest.testDensities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ExponentialDistributionTest.testDensity;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ExponentialDistributionTest.testDensityIntegrals;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ExponentialDistributionTest.testDistributionClone;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ExponentialDistributionTest.testIllegalArguments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ExponentialDistributionTest.testInverseCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ExponentialDistributionTest.testInverseCumulativeProbabilityExtremes;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ExponentialDistributionTest.testIsSupportLowerBoundInclusive;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ExponentialDistributionTest.testIsSupportUpperBoundInclusive;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ExponentialDistributionTest.testMeanAccessors;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ExponentialDistributionTest.testMoments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ExponentialDistributionTest.testPreconditions;[18, 46, 107, 108, 669, 670, 671];[18, 46, 107, 108, 669, 670, 671];0
org.apache.commons.math3.distribution.ExponentialDistributionTest.testSampling;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.FDistributionTest.testConsistency;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.FDistributionTest.testCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.FDistributionTest.testCumulativeProbabilityExtremes;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.FDistributionTest.testDensities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.FDistributionTest.testDensityIntegrals;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.FDistributionTest.testDfAccessors;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.FDistributionTest.testDistributionClone;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.FDistributionTest.testIllegalArguments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.FDistributionTest.testInverseCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.FDistributionTest.testInverseCumulativeProbabilityExtremes;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.FDistributionTest.testIsSupportLowerBoundInclusive;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.FDistributionTest.testIsSupportUpperBoundInclusive;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.FDistributionTest.testLargeDegreesOfFreedom;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.FDistributionTest.testMath785;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.FDistributionTest.testMoments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.FDistributionTest.testPreconditions;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.FDistributionTest.testSampling;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.FDistributionTest.testSmallDegreesOfFreedom;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testConvergenceException;[12, 18, 46, 53, 61, 70, 71, 93, 107, 108, 233, 234, 262, 358, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 424, 425, 431, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728];[12, 18, 46, 53, 61, 70, 71, 93, 107, 108, 233, 234, 262, 358, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 424, 425, 431, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728];0
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testFit;[12, 18, 46, 53, 61, 93, 107, 108, 233, 234, 358, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 424, 425, 431, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733];[12, 18, 46, 53, 61, 93, 107, 108, 233, 234, 358, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 424, 425, 431, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733];0
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testIncompatibleIntialMixture;[12, 61, 70, 71, 93, 107, 108, 233, 234, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 424, 425, 672, 675, 677, 678, 679, 680, 683, 684, 685, 695, 697, 698, 699, 700, 701, 703, 706, 708, 709, 710, 712, 713, 715, 716, 717, 719, 720, 722, 723, 724, 725, 726];[12, 61, 70, 71, 93, 107, 108, 233, 234, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 424, 425, 672, 675, 677, 678, 679, 680, 683, 684, 685, 695, 697, 698, 699, 700, 701, 703, 706, 708, 709, 710, 712, 713, 715, 716, 717, 719, 720, 722, 723, 724, 725, 726];0
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testInitialMixture;[12, 61, 93, 107, 108, 233, 234, 353, 358, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 424, 425, 431, 672, 673, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728, 731, 732, 733];[12, 61, 93, 107, 108, 233, 234, 353, 358, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 424, 425, 431, 672, 673, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728, 731, 732, 733];0
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testMaxIterationsPositive;[12, 61, 70, 71, 93, 107, 108, 233, 234, 358, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 424, 425, 431, 672, 673, 675, 676, 677, 678, 679, 681, 683, 684, 685, 686, 687, 688, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728];[12, 61, 70, 71, 93, 107, 108, 233, 234, 358, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 424, 425, 431, 672, 673, 675, 676, 677, 678, 679, 681, 683, 684, 685, 686, 687, 688, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728];0
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testMultipleColumnsRequired;[70, 71];[70, 71];0
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testNonEmptyData;[70, 71];[70, 71];0
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testNonJaggedData;[70, 71];[70, 71];0
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximizationTest.testThresholdPositive;[12, 61, 70, 71, 93, 107, 108, 233, 234, 358, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 424, 425, 431, 672, 673, 675, 676, 677, 678, 679, 681, 683, 684, 685, 686, 687, 688, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728];[12, 61, 70, 71, 93, 107, 108, 233, 234, 358, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 424, 425, 431, 672, 673, 675, 676, 677, 678, 679, 681, 683, 684, 685, 686, 687, 688, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728];0
org.apache.commons.math3.distribution.GammaDistributionTest.testConsistency;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testCumulativeProbabilities;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testDensities;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testDensity;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testDensityIntegrals;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testDistributionClone;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testIllegalArguments;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testInverseCumulativeProbabilities;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testInverseCumulativeProbabilityExtremes;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testIsSupportLowerBoundInclusive;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testIsSupportUpperBoundInclusive;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testMath753Shape1;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testMath753Shape10;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testMath753Shape100;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testMath753Shape1000;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testMath753Shape142;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testMath753Shape8;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testMoments;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testParameterAccessors;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testPreconditions;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testProbabilities;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testSampling;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.GammaDistributionTest.testValues;[12, 18, 46, 53, 107, 108];[12, 18, 46, 53, 107, 108];0
org.apache.commons.math3.distribution.HypergeometricDistributionTest.testAccessors;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.HypergeometricDistributionTest.testConsistencyAtSupportBounds;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.HypergeometricDistributionTest.testCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.HypergeometricDistributionTest.testDegenerateFullSample;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.HypergeometricDistributionTest.testDegenerateNoFailures;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.HypergeometricDistributionTest.testDensities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.HypergeometricDistributionTest.testIllegalArguments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.HypergeometricDistributionTest.testInverseCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.HypergeometricDistributionTest.testLargeValues;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.HypergeometricDistributionTest.testMath644;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.HypergeometricDistributionTest.testMoments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.HypergeometricDistributionTest.testMoreLargeValues;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.HypergeometricDistributionTest.testPreconditions;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.HypergeometricDistributionTest.testSampling;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.KolmogorovSmirnovDistributionTest.testCumulativeDensityFunction;[61, 70, 71, 262, 294, 295, 296, 302, 303, 304, 305, 307, 308, 373, 384, 392, 396, 402, 405, 417, 672, 677, 695, 706, 720, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748];[61, 70, 71, 262, 294, 295, 296, 302, 303, 304, 305, 307, 308, 373, 384, 392, 396, 402, 405, 417, 672, 677, 695, 706, 720, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748];0
org.apache.commons.math3.distribution.LevyDistributionTest.testConsistency;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LevyDistributionTest.testCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LevyDistributionTest.testDensities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LevyDistributionTest.testDensityIntegrals;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LevyDistributionTest.testDistributionClone;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LevyDistributionTest.testIllegalArguments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LevyDistributionTest.testInverseCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LevyDistributionTest.testIsSupportLowerBoundInclusive;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LevyDistributionTest.testIsSupportUpperBoundInclusive;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LevyDistributionTest.testParameters;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LevyDistributionTest.testSampling;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LevyDistributionTest.testSupport;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LogNormalDistributionTest.testConsistency;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LogNormalDistributionTest.testCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LogNormalDistributionTest.testDensities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LogNormalDistributionTest.testDensity;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LogNormalDistributionTest.testDensityIntegrals;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LogNormalDistributionTest.testDistributionClone;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LogNormalDistributionTest.testExtremeValues;[12, 107, 108];[12, 107, 108];0
org.apache.commons.math3.distribution.LogNormalDistributionTest.testGetScale;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LogNormalDistributionTest.testGetShape;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LogNormalDistributionTest.testIllegalArguments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LogNormalDistributionTest.testInverseCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LogNormalDistributionTest.testInverseCumulativeProbabilityExtremes;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LogNormalDistributionTest.testIsSupportLowerBoundInclusive;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LogNormalDistributionTest.testIsSupportUpperBoundInclusive;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LogNormalDistributionTest.testMeanVariance;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LogNormalDistributionTest.testPreconditions;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LogNormalDistributionTest.testQuantiles;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.LogNormalDistributionTest.testSampling;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testDensities;[12, 18, 46, 53, 61, 93, 107, 108, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 424, 425, 672, 677, 678, 679, 680, 682, 683, 684, 685, 692, 695, 697, 698, 699, 700, 701, 703, 706, 708, 709, 710, 712, 714, 715, 716, 717, 719, 720, 722, 723, 724, 725, 726];[12, 18, 46, 53, 61, 93, 107, 108, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 424, 425, 672, 677, 678, 679, 680, 682, 683, 684, 685, 692, 695, 697, 698, 699, 700, 701, 703, 706, 708, 709, 710, 712, 714, 715, 716, 717, 719, 720, 722, 723, 724, 725, 726];0
org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testGetCovarianceMatrix;[12, 61, 93, 107, 108, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 424, 425, 672, 677, 678, 679, 683, 684, 685, 695, 697, 698, 699, 700, 701, 703, 706, 708, 709, 710, 712, 715, 716, 717, 719, 720, 722, 723, 724, 725, 726, 731, 733];[12, 61, 93, 107, 108, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 424, 425, 672, 677, 678, 679, 683, 684, 685, 695, 697, 698, 699, 700, 701, 703, 706, 708, 709, 710, 712, 715, 716, 717, 719, 720, 722, 723, 724, 725, 726, 731, 733];0
org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testGetMean;[12, 61, 93, 107, 108, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 424, 425, 672, 677, 678, 679, 680, 683, 684, 685, 695, 697, 698, 699, 700, 701, 703, 706, 708, 709, 710, 712, 715, 716, 717, 719, 720, 722, 723, 724, 725];[12, 61, 93, 107, 108, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 424, 425, 672, 677, 678, 679, 680, 683, 684, 685, 695, 697, 698, 699, 700, 701, 703, 706, 708, 709, 710, 712, 715, 716, 717, 719, 720, 722, 723, 724, 725];0
org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testSampling;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 108, 340, 358, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 424, 425, 431, 647, 672, 676, 677, 678, 679, 681, 683, 684, 685, 686, 687, 688, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728, 749, 750, 751, 752];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 108, 340, 358, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 424, 425, 431, 647, 672, 676, 677, 678, 679, 681, 683, 684, 685, 686, 687, 688, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 706, 707, 708, 709, 710, 711, 712, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728, 749, 750, 751, 752];0
org.apache.commons.math3.distribution.MultivariateNormalDistributionTest.testUnivariateDistribution;[12, 18, 46, 53, 61, 93, 107, 108, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 424, 425, 672, 677, 678, 679, 680, 682, 683, 684, 685, 692, 695, 697, 698, 699, 700, 701, 703, 706, 708, 709, 710, 712, 714, 715, 716, 717, 719, 720, 722, 723, 724, 725, 726, 753];[12, 18, 46, 53, 61, 93, 107, 108, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 424, 425, 672, 677, 678, 679, 680, 682, 683, 684, 685, 692, 695, 697, 698, 699, 700, 701, 703, 706, 708, 709, 710, 712, 714, 715, 716, 717, 719, 720, 722, 723, 724, 725, 726, 753];0
org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest.testDensities;[12, 18, 46, 53, 61, 93, 107, 108, 233, 234, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 424, 425, 672, 674, 677, 678, 679, 680, 682, 683, 684, 685, 692, 695, 697, 698, 699, 700, 701, 703, 706, 708, 709, 710, 712, 714, 715, 716, 717, 719, 720, 722, 723, 724, 725, 726];[12, 18, 46, 53, 61, 93, 107, 108, 233, 234, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 424, 425, 672, 674, 677, 678, 679, 680, 682, 683, 684, 685, 692, 695, 697, 698, 699, 700, 701, 703, 706, 708, 709, 710, 712, 714, 715, 716, 717, 719, 720, 722, 723, 724, 725, 726];0
org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest.testNonUnitWeightSum;[12, 61, 93, 107, 108, 233, 234, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 424, 425, 672, 677, 678, 679, 683, 684, 685, 695, 697, 698, 699, 700, 701, 703, 706, 708, 709, 710, 712, 713, 715, 716, 717, 719, 720, 722, 723, 724, 725, 726];[12, 61, 93, 107, 108, 233, 234, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 424, 425, 672, 677, 678, 679, 683, 684, 685, 695, 697, 698, 699, 700, 701, 703, 706, 708, 709, 710, 712, 713, 715, 716, 717, 719, 720, 722, 723, 724, 725, 726];0
org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest.testPreconditionPositiveWeights;[12, 61, 70, 71, 93, 107, 108, 233, 234, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 424, 425, 672, 677, 678, 679, 683, 684, 685, 695, 697, 698, 699, 700, 701, 703, 706, 708, 709, 710, 712, 715, 716, 717, 719, 720, 722, 723, 724, 725, 726];[12, 61, 70, 71, 93, 107, 108, 233, 234, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 424, 425, 672, 677, 678, 679, 683, 684, 685, 695, 697, 698, 699, 700, 701, 703, 706, 708, 709, 710, 712, 715, 716, 717, 719, 720, 722, 723, 724, 725, 726];0
org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest.testSampling;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 108, 233, 234, 340, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 424, 425, 647, 672, 677, 678, 679, 683, 684, 685, 695, 697, 698, 699, 700, 701, 703, 706, 708, 709, 710, 712, 715, 716, 717, 719, 720, 722, 723, 724, 725, 726, 749, 750, 751, 752, 754, 755];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 108, 233, 234, 340, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 424, 425, 647, 672, 677, 678, 679, 683, 684, 685, 695, 697, 698, 699, 700, 701, 703, 706, 708, 709, 710, 712, 715, 716, 717, 719, 720, 722, 723, 724, 725, 726, 749, 750, 751, 752, 754, 755];0
org.apache.commons.math3.distribution.MultivariateNormalMixtureModelDistributionTest.testWeightSumOverFlow;[12, 61, 70, 71, 93, 107, 108, 233, 234, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 424, 425, 672, 677, 678, 679, 683, 684, 685, 695, 697, 698, 699, 700, 701, 703, 706, 708, 709, 710, 712, 715, 716, 717, 719, 720, 722, 723, 724, 725, 726];[12, 61, 70, 71, 93, 107, 108, 233, 234, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 424, 425, 672, 677, 678, 679, 683, 684, 685, 695, 697, 698, 699, 700, 701, 703, 706, 708, 709, 710, 712, 715, 716, 717, 719, 720, 722, 723, 724, 725, 726];0
org.apache.commons.math3.distribution.NormalDistributionTest.testConsistency;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.NormalDistributionTest.testCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.NormalDistributionTest.testDensities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.NormalDistributionTest.testDensity;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.NormalDistributionTest.testDensityIntegrals;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.NormalDistributionTest.testDistributionClone;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.NormalDistributionTest.testExtremeValues;[12, 107, 108];[12, 107, 108];0
org.apache.commons.math3.distribution.NormalDistributionTest.testGetMean;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.NormalDistributionTest.testGetStandardDeviation;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.NormalDistributionTest.testIllegalArguments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.NormalDistributionTest.testInverseCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.NormalDistributionTest.testInverseCumulativeProbabilityExtremes;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.NormalDistributionTest.testIsSupportLowerBoundInclusive;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.NormalDistributionTest.testIsSupportUpperBoundInclusive;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.NormalDistributionTest.testMath280;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.NormalDistributionTest.testMoments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.NormalDistributionTest.testPreconditions;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.NormalDistributionTest.testQuantiles;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.NormalDistributionTest.testSampling;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.PascalDistributionTest.testConsistencyAtSupportBounds;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.PascalDistributionTest.testCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.PascalDistributionTest.testDegenerate0;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.PascalDistributionTest.testDegenerate1;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.PascalDistributionTest.testDensities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.PascalDistributionTest.testIllegalArguments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.PascalDistributionTest.testInverseCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.PascalDistributionTest.testMoments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.PascalDistributionTest.testSampling;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.PoissonDistributionTest.testConsistencyAtSupportBounds;[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];0
org.apache.commons.math3.distribution.PoissonDistributionTest.testCumulativeProbabilities;[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];0
org.apache.commons.math3.distribution.PoissonDistributionTest.testCumulativeProbabilitySpecial;[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];0
org.apache.commons.math3.distribution.PoissonDistributionTest.testDegenerateInverseCumulativeProbability;[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];0
org.apache.commons.math3.distribution.PoissonDistributionTest.testDensities;[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];0
org.apache.commons.math3.distribution.PoissonDistributionTest.testIllegalArguments;[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];0
org.apache.commons.math3.distribution.PoissonDistributionTest.testInverseCumulativeProbabilities;[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];0
org.apache.commons.math3.distribution.PoissonDistributionTest.testLargeMeanCumulativeProbability;[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];0
org.apache.commons.math3.distribution.PoissonDistributionTest.testLargeMeanInverseCumulativeProbability;[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];0
org.apache.commons.math3.distribution.PoissonDistributionTest.testMean;[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];0
org.apache.commons.math3.distribution.PoissonDistributionTest.testMoments;[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];0
org.apache.commons.math3.distribution.PoissonDistributionTest.testNegativeMean;[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];0
org.apache.commons.math3.distribution.PoissonDistributionTest.testNormalApproximateProbability;[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];0
org.apache.commons.math3.distribution.PoissonDistributionTest.testSampling;[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];[12, 18, 53, 107, 108, 115, 633, 756, 757, 758];0
org.apache.commons.math3.distribution.TDistributionTest.nistData;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TDistributionTest.testConsistency;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TDistributionTest.testCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TDistributionTest.testCumulativeProbabilityAgainstStackOverflow;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TDistributionTest.testDensities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TDistributionTest.testDensityIntegrals;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TDistributionTest.testDfAccessors;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TDistributionTest.testDistributionClone;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TDistributionTest.testIllegalArguments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TDistributionTest.testInverseCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TDistributionTest.testInverseCumulativeProbabilityExtremes;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TDistributionTest.testIsSupportLowerBoundInclusive;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TDistributionTest.testIsSupportUpperBoundInclusive;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TDistributionTest.testMoments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TDistributionTest.testPreconditions;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TDistributionTest.testSampling;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TDistributionTest.testSmallDf;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TriangularDistributionTest.testConsistency;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TriangularDistributionTest.testCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TriangularDistributionTest.testDensities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TriangularDistributionTest.testDensityIntegrals;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TriangularDistributionTest.testDistributionClone;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TriangularDistributionTest.testGetLowerBound;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TriangularDistributionTest.testGetUpperBound;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TriangularDistributionTest.testIllegalArguments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TriangularDistributionTest.testInverseCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TriangularDistributionTest.testIsSupportLowerBoundInclusive;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TriangularDistributionTest.testIsSupportUpperBoundInclusive;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TriangularDistributionTest.testMeanVariance;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TriangularDistributionTest.testPreconditions1;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TriangularDistributionTest.testPreconditions2;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TriangularDistributionTest.testPreconditions3;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TriangularDistributionTest.testPreconditions4;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.TriangularDistributionTest.testSampling;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformIntegerDistributionTest.testConsistencyAtSupportBounds;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformIntegerDistributionTest.testCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformIntegerDistributionTest.testDensities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformIntegerDistributionTest.testIllegalArguments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformIntegerDistributionTest.testInverseCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformIntegerDistributionTest.testMoments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformIntegerDistributionTest.testSampling;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformRealDistributionTest.testConsistency;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformRealDistributionTest.testCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformRealDistributionTest.testDensities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformRealDistributionTest.testDensityIntegrals;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformRealDistributionTest.testDistributionClone;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformRealDistributionTest.testGetLowerBound;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformRealDistributionTest.testGetUpperBound;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformRealDistributionTest.testIllegalArguments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformRealDistributionTest.testInverseCumulativeDistribution;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformRealDistributionTest.testInverseCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformRealDistributionTest.testIsSupportLowerBoundInclusive;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformRealDistributionTest.testIsSupportUpperBoundInclusive;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformRealDistributionTest.testMeanVariance;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformRealDistributionTest.testPreconditions1;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformRealDistributionTest.testPreconditions2;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.UniformRealDistributionTest.testSampling;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.WeibullDistributionTest.testAlpha;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.WeibullDistributionTest.testBeta;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.WeibullDistributionTest.testConsistency;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.WeibullDistributionTest.testCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.WeibullDistributionTest.testDensities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.WeibullDistributionTest.testDensityIntegrals;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.WeibullDistributionTest.testDistributionClone;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.WeibullDistributionTest.testIllegalArguments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.WeibullDistributionTest.testInverseCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.WeibullDistributionTest.testInverseCumulativeProbabilityExtremes;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.WeibullDistributionTest.testIsSupportLowerBoundInclusive;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.WeibullDistributionTest.testIsSupportUpperBoundInclusive;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.WeibullDistributionTest.testMoments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.WeibullDistributionTest.testSampling;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ZipfDistributionTest.testConsistencyAtSupportBounds;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ZipfDistributionTest.testCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ZipfDistributionTest.testDensities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ZipfDistributionTest.testIllegalArguments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ZipfDistributionTest.testInverseCumulativeProbabilities;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ZipfDistributionTest.testMoments;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ZipfDistributionTest.testPreconditions1;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ZipfDistributionTest.testPreconditions2;[107, 108];[107, 108];0
org.apache.commons.math3.distribution.ZipfDistributionTest.testSampling;[107, 108];[107, 108];0
org.apache.commons.math3.exception.DimensionMismatchExceptionTest.testAccessors;[70, 71, 144, 759];[70, 71, 144, 759];0
org.apache.commons.math3.exception.MaxCountExceededExceptionTest.testAccessors;[70, 71, 260, 262];[70, 71, 260, 262];0
org.apache.commons.math3.exception.NonMonotonicSequenceExceptionTest.testAccessors;[70, 71, 144, 760, 761, 762, 763];[70, 71, 144, 760, 761, 762, 763];0
org.apache.commons.math3.exception.NotPositiveExceptionTest.testAccessors;[70, 71, 144, 764, 765];[70, 71, 144, 764, 765];0
org.apache.commons.math3.exception.NotStrictlyPositiveExceptionTest.testAccessors;[70, 71, 144, 764, 765];[70, 71, 144, 764, 765];0
org.apache.commons.math3.exception.NumberIsTooLargeExceptionTest.testAccessors;[70, 71, 144, 766, 767];[70, 71, 144, 766, 767];0
org.apache.commons.math3.exception.NumberIsTooSmallExceptionTest.testAccessors;[70, 71, 144, 764, 765];[70, 71, 144, 764, 765];0
org.apache.commons.math3.exception.OutOfRangeExceptionTest.testAccessors;[70, 71, 144, 768, 769];[70, 71, 144, 768, 769];0
org.apache.commons.math3.exception.TooManyEvaluationsExceptionTest.testMessage;[70, 71, 262, 770, 771, 772, 773, 774];[70, 71, 262, 770, 771, 772, 773, 774];0
org.apache.commons.math3.exception.util.ArgUtilsTest.testFlatten;[71];[71];0
org.apache.commons.math3.exception.util.ExceptionContextTest.testContext;[775, 776, 777];[775, 776, 777];0
org.apache.commons.math3.exception.util.ExceptionContextTest.testMessageChain;[70, 71, 771, 773, 774];[70, 71, 771, 773, 774];0
org.apache.commons.math3.exception.util.ExceptionContextTest.testNoArgAddMessage;[70, 71, 771, 773, 774];[70, 71, 771, 773, 774];0
org.apache.commons.math3.exception.util.ExceptionContextTest.testSerialize;[70, 71, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783];[70, 71, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783];0
org.apache.commons.math3.exception.util.ExceptionContextTest.testSerializeUnserializable;[70, 71, 776, 777, 778, 779, 780, 781, 782, 783, 784];[70, 71, 776, 777, 778, 779, 780, 781, 782, 783, 784];0
org.apache.commons.math3.exception.util.LocalizedFormatsTest.testNoMissingFrenchTranslation;[774];[774];0
org.apache.commons.math3.exception.util.LocalizedFormatsTest.testNoOpEnglishTranslation;[774, 785];[774, 785];0
org.apache.commons.math3.exception.util.LocalizedFormatsTest.testVariablePartsConsistency;[774, 785];[774, 785];0
org.apache.commons.math3.filter.KalmanFilterTest.testConstant;[12, 61, 93, 329, 331, 341, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 418, 424, 425, 672, 677, 679, 685, 689, 695, 704, 706, 709, 715, 720, 724, 725, 731, 750, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805];[12, 61, 93, 329, 331, 341, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 418, 424, 425, 672, 677, 679, 685, 689, 695, 704, 706, 709, 715, 720, 724, 725, 731, 750, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805];0
org.apache.commons.math3.filter.KalmanFilterTest.testConstantAcceleration;[12, 61, 93, 329, 331, 341, 349, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 418, 424, 425, 672, 677, 679, 685, 689, 695, 697, 704, 706, 709, 715, 720, 724, 725, 727, 750, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807];[12, 61, 93, 329, 331, 341, 349, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 418, 424, 425, 672, 677, 679, 685, 689, 695, 697, 704, 706, 709, 715, 720, 724, 725, 727, 750, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807];0
org.apache.commons.math3.filter.KalmanFilterTest.testTransitionControlMatrixMismatch;[61, 70, 71, 331, 373, 392, 396, 402, 405, 672, 677, 679, 685, 695, 706, 709, 724, 725, 731, 788, 793, 796, 798, 799, 801, 804];[61, 70, 71, 331, 373, 392, 396, 402, 405, 672, 677, 679, 685, 695, 706, 709, 724, 725, 731, 788, 793, 796, 798, 799, 801, 804];0
org.apache.commons.math3.filter.KalmanFilterTest.testTransitionMeasurementMatrixMismatch;[61, 70, 71, 331, 373, 392, 396, 402, 405, 672, 677, 679, 685, 695, 704, 706, 709, 724, 725, 731, 788, 793, 796, 798, 799, 801, 804];[61, 70, 71, 331, 373, 392, 396, 402, 405, 672, 677, 679, 685, 695, 704, 706, 709, 724, 725, 731, 788, 793, 796, 798, 799, 801, 804];0
org.apache.commons.math3.fitting.CurveFitterTest.testMath303;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809];0
org.apache.commons.math3.fitting.CurveFitterTest.testMath304;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809];0
org.apache.commons.math3.fitting.CurveFitterTest.testMath372;[12, 18, 46, 53, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];[12, 18, 46, 53, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];0
org.apache.commons.math3.fitting.GaussianFitterTest.testFit01;[12, 18, 53, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814];[12, 18, 53, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814];0
org.apache.commons.math3.fitting.GaussianFitterTest.testFit02;[70, 71, 813, 814];[70, 71, 813, 814];0
org.apache.commons.math3.fitting.GaussianFitterTest.testFit03;[70, 71, 381, 813, 814];[70, 71, 381, 813, 814];0
org.apache.commons.math3.fitting.GaussianFitterTest.testFit04;[12, 18, 53, 61, 70, 71, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814];[12, 18, 53, 61, 70, 71, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814];0
org.apache.commons.math3.fitting.GaussianFitterTest.testFit05;[12, 18, 53, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814];[12, 18, 53, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814];0
org.apache.commons.math3.fitting.GaussianFitterTest.testFit06;[12, 18, 53, 61, 70, 71, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814];[12, 18, 53, 61, 70, 71, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814];0
org.apache.commons.math3.fitting.GaussianFitterTest.testFit07;[12, 18, 53, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814];[12, 18, 53, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814];0
org.apache.commons.math3.fitting.GaussianFitterTest.testMath519;[12, 18, 53, 61, 70, 71, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814];[12, 18, 53, 61, 70, 71, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814];0
org.apache.commons.math3.fitting.GaussianFitterTest.testMath798;[12, 18, 53, 61, 70, 71, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814];[12, 18, 53, 61, 70, 71, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814];0
org.apache.commons.math3.fitting.HarmonicFitterTest.test1PercentError;[8, 9, 12, 40, 61, 76, 77, 78, 79, 80, 81, 150, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 814, 815, 816];[8, 9, 12, 40, 61, 76, 77, 78, 79, 80, 81, 150, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 814, 815, 816];0
org.apache.commons.math3.fitting.HarmonicFitterTest.testInitialGuess;[12, 61, 76, 77, 78, 79, 80, 81, 150, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 815, 816];[12, 61, 76, 77, 78, 79, 80, 81, 150, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 815, 816];0
org.apache.commons.math3.fitting.HarmonicFitterTest.testMath844;[70, 71, 359, 374];[70, 71, 359, 374];0
org.apache.commons.math3.fitting.HarmonicFitterTest.testNoError;[8, 9, 12, 40, 61, 76, 77, 78, 79, 80, 81, 150, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 814, 815, 816];[8, 9, 12, 40, 61, 76, 77, 78, 79, 80, 81, 150, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 814, 815, 816];0
org.apache.commons.math3.fitting.HarmonicFitterTest.testPreconditions1;[70, 71, 814, 815];[70, 71, 814, 815];0
org.apache.commons.math3.fitting.HarmonicFitterTest.testTinyVariationsData;[8, 9, 12, 40, 61, 76, 77, 78, 79, 80, 81, 150, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 814, 815];[8, 9, 12, 40, 61, 76, 77, 78, 79, 80, 81, 150, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 814, 815];0
org.apache.commons.math3.fitting.HarmonicFitterTest.testUnsorted;[8, 9, 12, 40, 61, 76, 77, 78, 79, 80, 81, 150, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 814, 815, 816];[8, 9, 12, 40, 61, 76, 77, 78, 79, 80, 81, 150, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 814, 815, 816];0
org.apache.commons.math3.fitting.PolynomialFitterTest.testFit;[12, 61, 64, 68, 93, 105, 107, 108, 117, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 433, 434, 435, 436, 647, 652, 653, 654, 655, 668, 677, 695, 706, 715, 727, 808, 809, 817];[12, 61, 64, 68, 93, 105, 107, 108, 117, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 433, 434, 435, 436, 647, 652, 653, 654, 655, 668, 677, 695, 706, 715, 727, 808, 809, 817];0
org.apache.commons.math3.fitting.PolynomialFitterTest.testLargeSample;[12, 61, 64, 68, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 428, 429, 431, 432, 433, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 818];[12, 61, 64, 68, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 428, 429, 431, 432, 433, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 818];0
org.apache.commons.math3.fitting.PolynomialFitterTest.testMath798;[12, 61, 68, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 672, 677, 695, 706, 715, 727, 808, 809, 819];[12, 61, 68, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 672, 677, 695, 706, 715, 727, 808, 809, 819];0
org.apache.commons.math3.fitting.PolynomialFitterTest.testMath798WithToleranceTooLow;[12, 61, 68, 70, 71, 246, 247, 250, 255, 262, 331, 349, 353, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 379, 380, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 672, 819];[12, 61, 68, 70, 71, 246, 247, 250, 255, 262, 331, 349, 353, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 379, 380, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 672, 819];0
org.apache.commons.math3.fitting.PolynomialFitterTest.testMath798WithToleranceTooLowButNoException;[12, 61, 68, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 672, 677, 695, 706, 715, 727, 808, 809, 819];[12, 61, 68, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 672, 677, 695, 706, 715, 727, 808, 809, 819];0
org.apache.commons.math3.fitting.PolynomialFitterTest.testNoError;[12, 61, 64, 68, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 433, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809];[12, 61, 64, 68, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 433, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809];0
org.apache.commons.math3.fitting.PolynomialFitterTest.testRedundantSolvable;[12, 61, 64, 68, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 433, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809];[12, 61, 64, 68, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 433, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809];0
org.apache.commons.math3.fitting.PolynomialFitterTest.testRedundantUnsolvable;[12, 61, 64, 68, 70, 71, 246, 247, 250, 255, 262, 329, 330, 331, 349, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436, 672, 819];[12, 61, 64, 68, 70, 71, 246, 247, 250, 255, 262, 329, 330, 331, 349, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436, 672, 819];0
org.apache.commons.math3.fitting.PolynomialFitterTest.testSmallError;[12, 61, 64, 68, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 433, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809];[12, 61, 64, 68, 246, 250, 255, 329, 330, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 374, 375, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 433, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809];0
org.apache.commons.math3.fraction.BigFractionFieldTest.testOne;[294, 295, 299];[294, 295, 299];0
org.apache.commons.math3.fraction.BigFractionFieldTest.testSerial;[295, 820];[295, 820];0
org.apache.commons.math3.fraction.BigFractionFieldTest.testZero;[294, 295, 304];[294, 295, 304];0
org.apache.commons.math3.fraction.BigFractionFormatTest.testDenominatorFormat;[821, 822, 823, 824, 825, 826];[821, 822, 823, 824, 825, 826];0
org.apache.commons.math3.fraction.BigFractionFormatTest.testDoubleFormat;[821, 822, 823, 824, 825, 827, 828, 829, 830, 831];[821, 822, 823, 824, 825, 827, 828, 829, 830, 831];0
org.apache.commons.math3.fraction.BigFractionFormatTest.testFormat;[61, 821, 822, 823, 824, 825, 828, 829, 830, 831, 832];[61, 821, 822, 823, 824, 825, 828, 829, 830, 831, 832];0
org.apache.commons.math3.fraction.BigFractionFormatTest.testFormatImproper;[61, 821, 822, 823, 824, 825, 828, 829, 830, 831, 832, 833];[61, 821, 822, 823, 824, 825, 828, 829, 830, 831, 832, 833];0
org.apache.commons.math3.fraction.BigFractionFormatTest.testFormatImproperNegative;[61, 821, 822, 823, 824, 825, 828, 829, 830, 831, 832, 833];[61, 821, 822, 823, 824, 825, 828, 829, 830, 831, 832, 833];0
org.apache.commons.math3.fraction.BigFractionFormatTest.testFormatNegative;[61, 821, 822, 823, 824, 825, 828, 829, 830, 831, 832];[61, 821, 822, 823, 824, 825, 828, 829, 830, 831, 832];0
org.apache.commons.math3.fraction.BigFractionFormatTest.testFormatZero;[61, 821, 822, 823, 824, 825, 828, 829, 830, 831, 832];[61, 821, 822, 823, 824, 825, 828, 829, 830, 831, 832];0
org.apache.commons.math3.fraction.BigFractionFormatTest.testLongFormat;[821, 822, 823, 824, 825, 827, 828, 829, 830, 831];[821, 822, 823, 824, 825, 827, 828, 829, 830, 831];0
org.apache.commons.math3.fraction.BigFractionFormatTest.testNumeratorFormat;[822, 823, 824, 825, 828, 834];[822, 823, 824, 825, 828, 834];0
org.apache.commons.math3.fraction.BigFractionFormatTest.testParse;[61, 822, 823, 824, 825, 829, 830, 835, 836, 837, 838, 839];[61, 822, 823, 824, 825, 829, 830, 835, 836, 837, 838, 839];0
org.apache.commons.math3.fraction.BigFractionFormatTest.testParseBig;[61, 294, 296, 308, 822, 823, 824, 825, 835, 836, 837, 838, 839, 840];[61, 294, 296, 308, 822, 823, 824, 825, 835, 836, 837, 838, 839, 840];0
org.apache.commons.math3.fraction.BigFractionFormatTest.testParseInteger;[61, 822, 823, 824, 825, 829, 830, 835, 836, 837, 838, 839];[61, 822, 823, 824, 825, 829, 830, 835, 836, 837, 838, 839];0
org.apache.commons.math3.fraction.BigFractionFormatTest.testParseInvalid;[70, 71, 262, 822, 823, 824, 825, 835, 836, 837, 838, 839];[70, 71, 262, 822, 823, 824, 825, 835, 836, 837, 838, 839];0
org.apache.commons.math3.fraction.BigFractionFormatTest.testParseInvalidDenominator;[70, 71, 262, 822, 823, 824, 825, 835, 836, 837, 838, 839];[70, 71, 262, 822, 823, 824, 825, 835, 836, 837, 838, 839];0
org.apache.commons.math3.fraction.BigFractionFormatTest.testParseNegative;[61, 822, 823, 824, 825, 835, 836, 837, 838, 839, 841, 842];[61, 822, 823, 824, 825, 835, 836, 837, 838, 839, 841, 842];0
org.apache.commons.math3.fraction.BigFractionFormatTest.testParseProper;[61, 70, 71, 262, 822, 823, 824, 825, 835, 836, 837, 838, 839, 841, 842];[61, 70, 71, 262, 822, 823, 824, 825, 835, 836, 837, 838, 839, 841, 842];0
org.apache.commons.math3.fraction.BigFractionFormatTest.testParseProperInvalidMinus;[70, 71, 262, 822, 823, 824, 825, 835, 836, 837, 838, 839];[70, 71, 262, 822, 823, 824, 825, 835, 836, 837, 838, 839];0
org.apache.commons.math3.fraction.BigFractionFormatTest.testParseProperNegative;[61, 70, 71, 262, 822, 823, 824, 825, 835, 836, 837, 838, 839, 841, 842];[61, 70, 71, 262, 822, 823, 824, 825, 835, 836, 837, 838, 839, 841, 842];0
org.apache.commons.math3.fraction.BigFractionFormatTest.testWholeFormat;[822, 823, 824, 825, 833];[822, 823, 824, 825, 833];0
org.apache.commons.math3.fraction.BigFractionTest.testAbs;[61, 841, 842, 843, 844];[61, 841, 842, 843, 844];0
org.apache.commons.math3.fraction.BigFractionTest.testAdd;[61, 70, 71, 294, 296, 303, 841, 842];[61, 70, 71, 294, 296, 303, 841, 842];0
org.apache.commons.math3.fraction.BigFractionTest.testBigDecimalValue;[61, 840];[61, 840];0
org.apache.commons.math3.fraction.BigFractionTest.testCompareTo;[61, 308, 738];[61, 308, 738];0
org.apache.commons.math3.fraction.BigFractionTest.testConstructor;[61, 70, 71, 262, 308, 841, 842, 845, 846];[61, 70, 71, 262, 308, 841, 842, 845, 846];0
org.apache.commons.math3.fraction.BigFractionTest.testConstructorDouble;[70, 71, 841, 842, 845, 846];[70, 71, 841, 842, 845, 846];0
org.apache.commons.math3.fraction.BigFractionTest.testDigitLimitConstructor;[841, 842];[841, 842];0
org.apache.commons.math3.fraction.BigFractionTest.testDivide;[61, 70, 71, 302, 306, 743, 841, 842];[61, 70, 71, 302, 306, 743, 841, 842];0
org.apache.commons.math3.fraction.BigFractionTest.testDoubleConstructor;[841, 842];[841, 842];0
org.apache.commons.math3.fraction.BigFractionTest.testDoubleValue;[61, 308];[61, 308];0
org.apache.commons.math3.fraction.BigFractionTest.testDoubleValueForLargeNumeratorAndDenominator;[61, 308];[61, 308];0
org.apache.commons.math3.fraction.BigFractionTest.testEpsilonLimitConstructor;[841, 842];[841, 842];0
org.apache.commons.math3.fraction.BigFractionTest.testEqualsAndHashCode;[61, 294, 296, 847];[61, 294, 296, 847];0
org.apache.commons.math3.fraction.BigFractionTest.testFloatValue;[61, 848];[61, 848];0
org.apache.commons.math3.fraction.BigFractionTest.testFloatValueForLargeNumeratorAndDenominator;[61, 848];[61, 848];0
org.apache.commons.math3.fraction.BigFractionTest.testGetReducedFraction;[61, 70, 71, 294, 296, 842, 849];[61, 70, 71, 294, 296, 842, 849];0
org.apache.commons.math3.fraction.BigFractionTest.testGoldenRatio;[12, 70, 71, 262];[12, 70, 71, 262];0
org.apache.commons.math3.fraction.BigFractionTest.testIntValue;[61, 850];[61, 850];0
org.apache.commons.math3.fraction.BigFractionTest.testLongValue;[61, 851];[61, 851];0
org.apache.commons.math3.fraction.BigFractionTest.testMath340;[61, 294, 296, 302, 306, 829, 830];[61, 294, 296, 302, 306, 829, 830];0
org.apache.commons.math3.fraction.BigFractionTest.testMultiply;[61, 70, 71, 302, 841, 842];[61, 70, 71, 302, 841, 842];0
org.apache.commons.math3.fraction.BigFractionTest.testNegate;[61, 841, 842, 843];[61, 841, 842, 843];0
org.apache.commons.math3.fraction.BigFractionTest.testPercentage;[61, 302, 308, 852];[61, 302, 308, 852];0
org.apache.commons.math3.fraction.BigFractionTest.testPow;[61, 294, 296, 736];[61, 294, 296, 736];0
org.apache.commons.math3.fraction.BigFractionTest.testReciprocal;[61, 70, 71, 306, 841, 842];[61, 70, 71, 306, 841, 842];0
org.apache.commons.math3.fraction.BigFractionTest.testSerial;[61, 294, 296];[61, 294, 296];0
org.apache.commons.math3.fraction.BigFractionTest.testSubtract;[61, 70, 71, 294, 296, 305, 841, 842, 843];[61, 70, 71, 294, 296, 305, 841, 842, 843];0
org.apache.commons.math3.fraction.FractionFieldTest.testOne;[853, 854, 855];[853, 854, 855];0
org.apache.commons.math3.fraction.FractionFieldTest.testSerial;[853, 856];[853, 856];0
org.apache.commons.math3.fraction.FractionFieldTest.testZero;[853, 854, 857];[853, 854, 857];0
org.apache.commons.math3.fraction.FractionFormatTest.testDenominatorFormat;[821, 825, 826, 858, 859, 860];[821, 825, 826, 858, 859, 860];0
org.apache.commons.math3.fraction.FractionFormatTest.testDoubleFormat;[821, 825, 827, 828, 858, 859, 860, 861, 862, 863];[821, 825, 827, 828, 858, 859, 860, 861, 862, 863];0
org.apache.commons.math3.fraction.FractionFormatTest.testFormat;[821, 825, 828, 858, 859, 860, 861, 862, 863, 864];[821, 825, 828, 858, 859, 860, 861, 862, 863, 864];0
org.apache.commons.math3.fraction.FractionFormatTest.testFormatImproper;[821, 825, 828, 858, 859, 860, 861, 862, 863, 864, 865];[821, 825, 828, 858, 859, 860, 861, 862, 863, 864, 865];0
org.apache.commons.math3.fraction.FractionFormatTest.testFormatImproperNegative;[821, 825, 828, 858, 859, 860, 861, 862, 863, 864, 865];[821, 825, 828, 858, 859, 860, 861, 862, 863, 864, 865];0
org.apache.commons.math3.fraction.FractionFormatTest.testFormatNegative;[821, 825, 828, 858, 859, 860, 861, 862, 863, 864];[821, 825, 828, 858, 859, 860, 861, 862, 863, 864];0
org.apache.commons.math3.fraction.FractionFormatTest.testFormatZero;[821, 825, 828, 858, 859, 860, 861, 862, 863, 864];[821, 825, 828, 858, 859, 860, 861, 862, 863, 864];0
org.apache.commons.math3.fraction.FractionFormatTest.testLongFormat;[821, 825, 827, 828, 858, 859, 860, 861, 862, 863];[821, 825, 827, 828, 858, 859, 860, 861, 862, 863];0
org.apache.commons.math3.fraction.FractionFormatTest.testNumeratorFormat;[825, 828, 834, 858, 859, 860];[825, 828, 834, 858, 859, 860];0
org.apache.commons.math3.fraction.FractionFormatTest.testParse;[821, 825, 828, 836, 839, 858, 859, 860, 861, 863, 866, 867];[821, 825, 828, 836, 839, 858, 859, 860, 861, 863, 866, 867];0
org.apache.commons.math3.fraction.FractionFormatTest.testParseInteger;[825, 828, 836, 839, 858, 859, 860, 861, 863, 866, 867];[825, 828, 836, 839, 858, 859, 860, 861, 863, 866, 867];0
org.apache.commons.math3.fraction.FractionFormatTest.testParseInvalid;[70, 71, 262, 825, 828, 836, 839, 858, 859, 860, 865, 866, 867];[70, 71, 262, 825, 828, 836, 839, 858, 859, 860, 865, 866, 867];0
org.apache.commons.math3.fraction.FractionFormatTest.testParseInvalidDenominator;[70, 71, 262, 821, 825, 828, 836, 839, 858, 859, 860, 865, 866, 867];[70, 71, 262, 821, 825, 828, 836, 839, 858, 859, 860, 865, 866, 867];0
org.apache.commons.math3.fraction.FractionFormatTest.testParseNegative;[821, 825, 828, 836, 839, 858, 859, 860, 861, 863, 866, 867];[821, 825, 828, 836, 839, 858, 859, 860, 861, 863, 866, 867];0
org.apache.commons.math3.fraction.FractionFormatTest.testParseOne1;[821, 825, 828, 836, 839, 858, 859, 860, 861, 863, 866, 867];[821, 825, 828, 836, 839, 858, 859, 860, 861, 863, 866, 867];0
org.apache.commons.math3.fraction.FractionFormatTest.testParseOne2;[821, 825, 828, 836, 839, 858, 859, 860, 861, 863, 866, 867];[821, 825, 828, 836, 839, 858, 859, 860, 861, 863, 866, 867];0
org.apache.commons.math3.fraction.FractionFormatTest.testParseProper;[70, 71, 262, 821, 825, 828, 836, 839, 858, 859, 860, 861, 863, 865, 866, 867, 868];[70, 71, 262, 821, 825, 828, 836, 839, 858, 859, 860, 861, 863, 865, 866, 867, 868];0
org.apache.commons.math3.fraction.FractionFormatTest.testParseProperInvalidMinus;[70, 71, 262, 821, 825, 828, 836, 839, 858, 859, 860, 865, 866, 867];[70, 71, 262, 821, 825, 828, 836, 839, 858, 859, 860, 865, 866, 867];0
org.apache.commons.math3.fraction.FractionFormatTest.testParseProperNegative;[70, 71, 262, 821, 825, 828, 836, 839, 858, 859, 860, 861, 863, 865, 866, 867, 868];[70, 71, 262, 821, 825, 828, 836, 839, 858, 859, 860, 861, 863, 865, 866, 867, 868];0
org.apache.commons.math3.fraction.FractionFormatTest.testParseZero1;[821, 825, 828, 836, 839, 858, 859, 860, 861, 863, 866, 867];[821, 825, 828, 836, 839, 858, 859, 860, 861, 863, 866, 867];0
org.apache.commons.math3.fraction.FractionFormatTest.testParseZero2;[821, 825, 828, 836, 839, 858, 859, 860, 861, 863, 866, 867, 869];[821, 825, 828, 836, 839, 858, 859, 860, 861, 863, 866, 867, 869];0
org.apache.commons.math3.fraction.FractionFormatTest.testWholeFormat;[825, 858, 859, 860, 865];[825, 858, 859, 860, 865];0
org.apache.commons.math3.fraction.FractionTest.testAbs;[861, 863, 870, 871];[861, 863, 870, 871];0
org.apache.commons.math3.fraction.FractionTest.testAdd;[70, 71, 861, 863, 872, 873, 874];[70, 71, 861, 863, 872, 873, 874];0
org.apache.commons.math3.fraction.FractionTest.testCompareTo;[869, 875];[869, 875];0
org.apache.commons.math3.fraction.FractionTest.testConstructor;[70, 71, 861, 863];[70, 71, 861, 863];0
org.apache.commons.math3.fraction.FractionTest.testConstructorDouble;[861, 863];[861, 863];0
org.apache.commons.math3.fraction.FractionTest.testDigitLimitConstructor;[861, 863];[861, 863];0
org.apache.commons.math3.fraction.FractionTest.testDivide;[70, 71, 861, 863, 876];[70, 71, 861, 863, 876];0
org.apache.commons.math3.fraction.FractionTest.testDoubleConstructor;[861, 863];[861, 863];0
org.apache.commons.math3.fraction.FractionTest.testDoubleValue;[869];[869];0
org.apache.commons.math3.fraction.FractionTest.testEpsilonLimitConstructor;[861, 863];[861, 863];0
org.apache.commons.math3.fraction.FractionTest.testEqualsAndHashCode;[854, 877];[854, 877];0
org.apache.commons.math3.fraction.FractionTest.testFloatValue;[869, 878];[869, 878];0
org.apache.commons.math3.fraction.FractionTest.testGetReducedFraction;[70, 71, 854, 861];[70, 71, 854, 861];0
org.apache.commons.math3.fraction.FractionTest.testGoldenRatio;[12, 70, 71, 262];[12, 70, 71, 262];0
org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow;[70, 71, 262];[70, 71, 262];0
org.apache.commons.math3.fraction.FractionTest.testIntValue;[869, 879];[869, 879];0
org.apache.commons.math3.fraction.FractionTest.testLongValue;[869, 880];[869, 880];0
org.apache.commons.math3.fraction.FractionTest.testMath835;[869];[869];0
org.apache.commons.math3.fraction.FractionTest.testMultiply;[70, 71, 861, 863];[70, 71, 861, 863];0
org.apache.commons.math3.fraction.FractionTest.testNegate;[70, 71, 861, 863, 870];[70, 71, 861, 863, 870];0
org.apache.commons.math3.fraction.FractionTest.testPercentage;[869];[869];0
org.apache.commons.math3.fraction.FractionTest.testReciprocal;[70, 71, 861, 863, 876];[70, 71, 861, 863, 876];0
org.apache.commons.math3.fraction.FractionTest.testSerial;[854];[854];0
org.apache.commons.math3.fraction.FractionTest.testSubtract;[70, 71, 861, 863, 870, 873, 881];[70, 71, 861, 863, 870, 873, 881];0
org.apache.commons.math3.genetics.BinaryChromosomeTest.testInvalidConstructor;[70, 71, 882];[70, 71, 882];0
org.apache.commons.math3.genetics.BinaryChromosomeTest.testIsSame;[882, 883, 884, 885];[882, 883, 884, 885];0
org.apache.commons.math3.genetics.BinaryChromosomeTest.testRandomConstructor;[882, 886, 887];[882, 886, 887];0
org.apache.commons.math3.genetics.BinaryMutationTest.testMutate;[882, 883, 885, 886, 887, 888];[882, 883, 885, 886, 887, 888];0
org.apache.commons.math3.genetics.ChromosomeTest.testCompareTo;[889, 890];[889, 890];0
org.apache.commons.math3.genetics.ChromosomeTest.testFindSameChromosome;[889, 891, 892, 893, 894];[889, 891, 892, 893, 894];0
org.apache.commons.math3.genetics.CycleCrossoverTest.testCrossover;[883, 885, 887, 895, 896, 897, 898];[883, 885, 887, 895, 896, 897, 898];0
org.apache.commons.math3.genetics.CycleCrossoverTest.testCrossoverDimensionMismatchException;[70, 71, 882, 883, 885, 895, 896];[70, 71, 882, 883, 885, 895, 896];0
org.apache.commons.math3.genetics.CycleCrossoverTest.testCrossoverExample;[883, 885, 895, 896, 897, 898];[883, 885, 895, 896, 897, 898];0
org.apache.commons.math3.genetics.CycleCrossoverTest.testCrossoverExample2;[883, 885, 895, 896, 897, 898];[883, 885, 895, 896, 897, 898];0
org.apache.commons.math3.genetics.CycleCrossoverTest.testCrossoverInvalidFixedLengthChromosomeFirst;[70, 71, 882, 895];[70, 71, 882, 895];0
org.apache.commons.math3.genetics.CycleCrossoverTest.testCrossoverInvalidFixedLengthChromosomeSecond;[70, 71, 882, 895];[70, 71, 882, 895];0
org.apache.commons.math3.genetics.ElitisticListPopulationTest.testChromosomeListConstructorTooHigh;[70, 71, 899];[70, 71, 899];0
org.apache.commons.math3.genetics.ElitisticListPopulationTest.testChromosomeListConstructorTooLow;[70, 71, 899];[70, 71, 899];0
org.apache.commons.math3.genetics.ElitisticListPopulationTest.testConstructorTooHigh;[70, 71, 899];[70, 71, 899];0
org.apache.commons.math3.genetics.ElitisticListPopulationTest.testConstructorTooLow;[70, 71, 899];[70, 71, 899];0
org.apache.commons.math3.genetics.ElitisticListPopulationTest.testNextGeneration;[889, 890, 899, 900, 901, 902, 903, 904, 905];[889, 890, 899, 900, 901, 902, 903, 904, 905];0
org.apache.commons.math3.genetics.ElitisticListPopulationTest.testSetElitismRate;[899, 905];[899, 905];0
org.apache.commons.math3.genetics.ElitisticListPopulationTest.testSetElitismRateTooHigh;[70, 71, 899];[70, 71, 899];0
org.apache.commons.math3.genetics.ElitisticListPopulationTest.testSetElitismRateTooLow;[70, 71, 899];[70, 71, 899];0
org.apache.commons.math3.genetics.FitnessCachingTest.testFitnessCaching;[882, 883, 885, 886, 887, 888, 889, 890, 893, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917];[882, 883, 885, 886, 887, 888, 889, 890, 893, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917];0
org.apache.commons.math3.genetics.FixedElapsedTimeTest.testIsSatisfied;[918];[918];0
org.apache.commons.math3.genetics.FixedGenerationCountTest.testIsSatisfied;[910];[910];0
org.apache.commons.math3.genetics.ListPopulationTest.testAddTooManyChromosomes;[70, 71, 882, 886, 887, 919];[70, 71, 882, 886, 887, 919];0
org.apache.commons.math3.genetics.ListPopulationTest.testAddTooManyChromosomesSingleCall;[70, 71, 882, 886, 887, 900, 903];[70, 71, 882, 886, 887, 900, 903];0
org.apache.commons.math3.genetics.ListPopulationTest.testChromosomeListConstructorPopulationLimitNotPositive;[70, 71, 882, 886, 887];[70, 71, 882, 886, 887];0
org.apache.commons.math3.genetics.ListPopulationTest.testChromosomes;[882, 885, 886, 887, 889, 893, 903, 919, 920, 921, 922];[882, 885, 886, 887, 889, 893, 903, 919, 920, 921, 922];0
org.apache.commons.math3.genetics.ListPopulationTest.testConstructorListOfChromosomesBiggerThanPopulationSize;[70, 71, 882, 886, 887];[70, 71, 882, 886, 887];0
org.apache.commons.math3.genetics.ListPopulationTest.testConstructorPopulationLimitNotPositive;[70, 71];[70, 71];0
org.apache.commons.math3.genetics.ListPopulationTest.testGetFittestChromosome;[889, 890, 906];[889, 890, 906];0
org.apache.commons.math3.genetics.ListPopulationTest.testIterator;[882, 886, 887, 892, 893, 919];[882, 886, 887, 892, 893, 919];0
org.apache.commons.math3.genetics.ListPopulationTest.testSetPopulationLimit;[70, 71, 922];[70, 71, 922];0
org.apache.commons.math3.genetics.ListPopulationTest.testSetPopulationLimitTooSmall;[70, 71, 882, 886, 887, 922];[70, 71, 882, 886, 887, 922];0
org.apache.commons.math3.genetics.NPointCrossoverTest.testCrossover;[882, 883, 885, 887, 897, 898, 923, 924];[882, 883, 885, 887, 897, 898, 923, 924];0
org.apache.commons.math3.genetics.NPointCrossoverTest.testCrossoverDimensionMismatchException;[70, 71, 882, 883, 885, 923, 924];[70, 71, 882, 883, 885, 923, 924];0
org.apache.commons.math3.genetics.NPointCrossoverTest.testCrossoverInvalidFixedLengthChromosomeFirst;[70, 71, 882, 923];[70, 71, 882, 923];0
org.apache.commons.math3.genetics.NPointCrossoverTest.testCrossoverInvalidFixedLengthChromosomeSecond;[70, 71, 882, 923];[70, 71, 882, 923];0
org.apache.commons.math3.genetics.NPointCrossoverTest.testNumberIsTooLargeException;[70, 71, 882, 883, 885, 923, 924];[70, 71, 882, 883, 885, 923, 924];0
org.apache.commons.math3.genetics.OnePointCrossoverTest.testCrossover;[882, 883, 885, 887, 897, 898, 912];[882, 883, 885, 887, 897, 898, 912];0
org.apache.commons.math3.genetics.OrderedCrossoverTest.testCrossover;[883, 885, 887, 897, 898, 925, 926];[883, 885, 887, 897, 898, 925, 926];0
org.apache.commons.math3.genetics.OrderedCrossoverTest.testCrossoverDimensionMismatchException;[70, 71, 882, 883, 885, 925, 926];[70, 71, 882, 883, 885, 925, 926];0
org.apache.commons.math3.genetics.OrderedCrossoverTest.testCrossoverInvalidFixedLengthChromosomeFirst;[70, 71, 882, 926];[70, 71, 882, 926];0
org.apache.commons.math3.genetics.OrderedCrossoverTest.testCrossoverInvalidFixedLengthChromosomeSecond;[70, 71, 882, 926];[70, 71, 882, 926];0
org.apache.commons.math3.genetics.RandomKeyMutationTest.testMutate;[883, 885, 887, 927, 928, 929, 930, 931];[883, 885, 887, 927, 928, 929, 930, 931];0
org.apache.commons.math3.genetics.RandomKeyTest.testComparatorPermutation;[883, 885, 927, 930, 931, 932, 933, 934];[883, 885, 927, 930, 931, 932, 933, 934];0
org.apache.commons.math3.genetics.RandomKeyTest.testConstructor1;[70, 71, 931];[70, 71, 931];0
org.apache.commons.math3.genetics.RandomKeyTest.testConstructor2;[70, 71, 931];[70, 71, 931];0
org.apache.commons.math3.genetics.RandomKeyTest.testDecode;[883, 885, 927, 930, 931, 933];[883, 885, 927, 930, 931, 933];0
org.apache.commons.math3.genetics.RandomKeyTest.testEqualRepr;[883, 885, 927, 930, 931, 933];[883, 885, 927, 930, 931, 933];0
org.apache.commons.math3.genetics.RandomKeyTest.testIdentityPermutation;[883, 885, 927, 930, 931, 933, 935];[883, 885, 927, 930, 931, 933, 935];0
org.apache.commons.math3.genetics.RandomKeyTest.testInducedPermutation;[70, 71, 883, 885, 927, 930, 931, 932, 933];[70, 71, 883, 885, 927, 930, 931, 932, 933];0
org.apache.commons.math3.genetics.RandomKeyTest.testInvalidRepresentation;[70, 71, 931];[70, 71, 931];0
org.apache.commons.math3.genetics.RandomKeyTest.testIsSame;[883, 885, 927, 930, 931, 936];[883, 885, 927, 930, 931, 936];0
org.apache.commons.math3.genetics.RandomKeyTest.testRandomPermutation;[883, 885, 887, 927, 928, 930, 931];[883, 885, 887, 927, 928, 930, 931];0
org.apache.commons.math3.genetics.TournamentSelectionTest.testSelect;[887, 889, 890, 893, 897, 898, 899, 900, 901, 903, 906, 908, 917];[887, 889, 890, 893, 897, 898, 899, 900, 901, 903, 906, 908, 917];0
org.apache.commons.math3.genetics.UniformCrossoverTest.testCrossover;[882, 883, 885, 887, 897, 898, 937, 938];[882, 883, 885, 887, 897, 898, 937, 938];0
org.apache.commons.math3.genetics.UniformCrossoverTest.testCrossoverDimensionMismatchException;[70, 71, 882, 883, 885, 937, 938];[70, 71, 882, 883, 885, 937, 938];0
org.apache.commons.math3.genetics.UniformCrossoverTest.testCrossoverInvalidFixedLengthChromosomeFirst;[70, 71, 882, 938];[70, 71, 882, 938];0
org.apache.commons.math3.genetics.UniformCrossoverTest.testCrossoverInvalidFixedLengthChromosomeSecond;[70, 71, 882, 938];[70, 71, 882, 938];0
org.apache.commons.math3.genetics.UniformCrossoverTest.testRatioTooHigh;[70, 71];[70, 71];0
org.apache.commons.math3.genetics.UniformCrossoverTest.testRatioTooLow;[70, 71];[70, 71];0
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest.testInfinite;[18, 46, 53, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967];[18, 46, 53, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967];0
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest.testInterval;[940, 941, 942, 943, 946, 947, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 964, 965, 966, 967, 968];[940, 941, 942, 943, 946, 947, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 964, 965, 966, 967, 968];0
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest.testMultiple;[939, 940, 941, 942, 943, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987];[939, 940, 941, 942, 943, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987];0
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSetTest.testSinglePoint;[940, 941, 942, 946, 947, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 964, 965, 966, 968];[940, 941, 942, 946, 947, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 962, 964, 965, 966, 968];0
org.apache.commons.math3.geometry.euclidean.oned.IntervalTest.testInfinite;[18, 46, 53, 955, 969, 972, 988];[18, 46, 53, 955, 969, 972, 988];0
org.apache.commons.math3.geometry.euclidean.oned.IntervalTest.testInterval;[955, 964, 969, 972, 988];[955, 964, 969, 972, 988];0
org.apache.commons.math3.geometry.euclidean.oned.IntervalTest.testSinglePoint;[955, 964];[955, 964];0
org.apache.commons.math3.geometry.euclidean.oned.IntervalTest.testTolerance;[988];[988];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest.testAngles;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 311, 312, 549, 550, 551, 579, 586, 590, 591, 594, 596, 597, 603, 816, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 311, 312, 549, 550, 551, 579, 586, 590, 591, 594, 596, 597, 603, 816, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest.testApplyInverseTo;[76, 77, 78, 79, 80, 81, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 312, 603, 991, 993, 996, 998, 999, 1000];[76, 77, 78, 79, 80, 81, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 312, 603, 991, 993, 996, 998, 999, 1000];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest.testArray;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 312, 603, 991, 993, 996, 998, 999, 1000];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 312, 603, 991, 993, 996, 998, 999, 1000];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest.testAxisAngle;[12, 70, 71, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 309, 310, 312, 579, 586, 590, 591, 594, 603, 816, 991, 993, 998, 999, 1000, 1001, 1002];[12, 70, 71, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 309, 310, 312, 579, 586, 590, 591, 594, 603, 816, 991, 993, 998, 999, 1000, 1001, 1002];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest.testCompose;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 312, 603, 991, 993, 998, 999, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 312, 603, 991, 993, 998, 999, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest.testComposeInverse;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 312, 603, 991, 993, 996, 998, 999, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 312, 603, 991, 993, 996, 998, 999, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest.testDoubleRotations;[12, 18, 76, 77, 78, 79, 80, 81, 105, 106, 107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 312, 334, 340, 549, 550, 551, 554, 603, 991, 993, 996, 998, 999, 1000, 1007, 1008, 1009, 1010];[12, 18, 76, 77, 78, 79, 80, 81, 105, 106, 107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 312, 334, 340, 549, 550, 551, 554, 603, 991, 993, 996, 998, 999, 1000, 1007, 1008, 1009, 1010];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest.testDoubleVectors;[12, 18, 76, 77, 78, 79, 80, 81, 105, 106, 107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 312, 334, 340, 549, 550, 551, 603, 991, 993, 996, 998, 999, 1000];[12, 18, 76, 77, 78, 79, 80, 81, 105, 106, 107, 108, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 312, 334, 340, 549, 550, 551, 603, 991, 993, 996, 998, 999, 1000];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest.testIdentity;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 309, 310, 590, 594, 816, 993, 998, 999, 1000, 1001];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 309, 310, 590, 594, 816, 993, 998, 999, 1000, 1001];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest.testIssue639;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 309, 310, 311, 609, 991, 998, 999, 1000, 1003, 1004, 1005, 1006, 1011, 1012, 1013, 1014];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 309, 310, 311, 609, 991, 998, 999, 1000, 1003, 1004, 1005, 1006, 1011, 1012, 1013, 1014];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest.testIssue801;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 309, 310, 311, 590, 594, 609, 991, 993, 998, 999, 1000, 1003, 1004, 1005, 1006, 1011, 1012, 1013, 1014, 1015, 1016];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 309, 310, 311, 590, 594, 609, 991, 993, 998, 999, 1000, 1003, 1004, 1005, 1006, 1011, 1012, 1013, 1014, 1015, 1016];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest.testMatrix;[70, 71, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 309, 310, 311, 586, 590, 591, 594, 816, 993, 996, 998, 999, 1000, 1001, 1013, 1017, 1018, 1019];[70, 71, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 309, 310, 311, 586, 590, 591, 594, 816, 993, 996, 998, 999, 1000, 1001, 1013, 1017, 1018, 1019];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest.testQuaternion;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 309, 310, 312, 590, 594, 603, 991, 993, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1018];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 309, 310, 312, 590, 594, 603, 991, 993, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1018];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest.testRevert;[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 309, 310, 586, 590, 591, 594, 609, 993, 996, 1001, 1002, 1015, 1018, 1020];[156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 309, 310, 586, 590, 591, 594, 609, 993, 996, 1001, 1002, 1015, 1018, 1020];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest.testSingularities;[70, 71, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 312, 549, 550, 551, 603, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000];[70, 71, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 310, 312, 549, 550, 551, 603, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest.testVectorOnePair;[70, 71, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 309, 310, 586, 590, 591, 609, 816, 991, 993, 998, 999, 1000, 1001, 1011, 1012, 1015, 1021, 1022];[70, 71, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 309, 310, 586, 590, 591, 609, 816, 991, 993, 998, 999, 1000, 1001, 1011, 1012, 1015, 1021, 1022];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDfpTest.testVectorTwoPairs;[12, 70, 71, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 309, 310, 311, 586, 590, 591, 594, 609, 816, 991, 993, 996, 998, 999, 1000, 1001, 1002, 1011, 1012, 1013, 1014, 1015, 1018, 1022];[12, 70, 71, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 309, 310, 311, 586, 590, 591, 594, 609, 816, 991, 993, 996, 998, 999, 1000, 1001, 1002, 1011, 1012, 1013, 1014, 1015, 1018, 1022];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest.testAngles;[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 24, 25, 26, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 54, 56, 58, 72, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 549, 550, 551, 816, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000];[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 24, 25, 26, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 54, 56, 58, 72, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 549, 550, 551, 816, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest.testApplyInverseTo;[3, 5, 6, 11, 12, 14, 20, 21, 22, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 72, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 991, 993, 996, 998, 999, 1000];[3, 5, 6, 11, 12, 14, 20, 21, 22, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 72, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 991, 993, 996, 998, 999, 1000];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest.testArray;[3, 5, 6, 11, 12, 14, 20, 21, 22, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 72, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 991, 993, 996, 998, 999, 1000];[3, 5, 6, 11, 12, 14, 20, 21, 22, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 72, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 991, 993, 996, 998, 999, 1000];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest.testAxisAngle;[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 24, 25, 26, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 56, 58, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 89, 123, 124, 816, 991, 993, 998, 999, 1000, 1001, 1002];[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 24, 25, 26, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 56, 58, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 89, 123, 124, 816, 991, 993, 998, 999, 1000, 1001, 1002];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest.testCompose;[3, 5, 11, 12, 14, 20, 21, 22, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 72, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 991, 993, 998, 999, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010];[3, 5, 11, 12, 14, 20, 21, 22, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 72, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 991, 993, 998, 999, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest.testComposeInverse;[3, 5, 6, 11, 12, 14, 20, 21, 22, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 72, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 991, 993, 996, 998, 999, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010];[3, 5, 6, 11, 12, 14, 20, 21, 22, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 72, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 991, 993, 996, 998, 999, 1000, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest.testDerivatives;[0, 2, 3, 4, 5, 11, 12, 14, 20, 21, 22, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 61, 72, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 549, 550, 551, 555, 556, 677, 695, 720, 991, 993, 998, 999, 1000];[0, 2, 3, 4, 5, 11, 12, 14, 20, 21, 22, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 61, 72, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 549, 550, 551, 555, 556, 677, 695, 720, 991, 993, 998, 999, 1000];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest.testDoubleRotations;[3, 5, 6, 11, 12, 14, 18, 20, 21, 22, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 72, 74, 75, 76, 77, 78, 79, 80, 81, 105, 106, 107, 108, 123, 124, 334, 340, 549, 550, 551, 554, 991, 993, 996, 998, 999, 1000, 1007, 1008, 1009, 1010];[3, 5, 6, 11, 12, 14, 18, 20, 21, 22, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 72, 74, 75, 76, 77, 78, 79, 80, 81, 105, 106, 107, 108, 123, 124, 334, 340, 549, 550, 551, 554, 991, 993, 996, 998, 999, 1000, 1007, 1008, 1009, 1010];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest.testDoubleVectors;[3, 5, 6, 11, 12, 14, 18, 20, 21, 22, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 72, 74, 75, 76, 77, 78, 79, 80, 81, 105, 106, 107, 108, 123, 124, 334, 340, 549, 550, 551, 991, 993, 996, 998, 999, 1000];[3, 5, 6, 11, 12, 14, 18, 20, 21, 22, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 72, 74, 75, 76, 77, 78, 79, 80, 81, 105, 106, 107, 108, 123, 124, 334, 340, 549, 550, 551, 991, 993, 996, 998, 999, 1000];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest.testIdentity;[3, 5, 11, 12, 14, 20, 21, 22, 24, 25, 26, 36, 38, 39, 42, 43, 46, 51, 54, 72, 89, 816, 993, 998, 999, 1000, 1001];[3, 5, 11, 12, 14, 20, 21, 22, 24, 25, 26, 36, 38, 39, 42, 43, 46, 51, 54, 72, 89, 816, 993, 998, 999, 1000, 1001];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest.testIssue639;[3, 4, 5, 6, 11, 12, 14, 19, 20, 21, 22, 23, 36, 38, 39, 42, 43, 46, 51, 54, 56, 58, 69, 72, 89, 103, 104, 991, 998, 999, 1000, 1003, 1004, 1005, 1006, 1011, 1012, 1013, 1014];[3, 4, 5, 6, 11, 12, 14, 19, 20, 21, 22, 23, 36, 38, 39, 42, 43, 46, 51, 54, 56, 58, 69, 72, 89, 103, 104, 991, 998, 999, 1000, 1003, 1004, 1005, 1006, 1011, 1012, 1013, 1014];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest.testIssue801;[3, 4, 5, 6, 9, 11, 12, 14, 19, 20, 21, 22, 23, 24, 25, 26, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 56, 58, 69, 72, 89, 103, 104, 991, 993, 998, 999, 1000, 1003, 1004, 1005, 1006, 1011, 1012, 1013, 1014, 1015, 1016];[3, 4, 5, 6, 9, 11, 12, 14, 19, 20, 21, 22, 23, 24, 25, 26, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 56, 58, 69, 72, 89, 103, 104, 991, 993, 998, 999, 1000, 1003, 1004, 1005, 1006, 1011, 1012, 1013, 1014, 1015, 1016];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest.testMatrix;[3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 20, 21, 22, 24, 25, 26, 36, 38, 39, 42, 43, 46, 51, 54, 56, 58, 70, 71, 72, 89, 816, 993, 996, 998, 999, 1000, 1001, 1013, 1017, 1018, 1019];[3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 20, 21, 22, 24, 25, 26, 36, 38, 39, 42, 43, 46, 51, 54, 56, 58, 70, 71, 72, 89, 816, 993, 996, 998, 999, 1000, 1001, 1013, 1017, 1018, 1019];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest.testQuaternion;[3, 5, 6, 11, 12, 14, 20, 21, 22, 24, 25, 26, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 72, 74, 75, 76, 77, 78, 79, 80, 81, 89, 123, 124, 991, 993, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1018, 1023];[3, 5, 6, 11, 12, 14, 20, 21, 22, 24, 25, 26, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 72, 74, 75, 76, 77, 78, 79, 80, 81, 89, 123, 124, 991, 993, 996, 998, 999, 1000, 1001, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1018, 1023];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest.testRevert;[0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 36, 38, 39, 42, 43, 46, 51, 54, 56, 69, 72, 89, 103, 104, 993, 996, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1018, 1020];[0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 36, 38, 39, 42, 43, 46, 51, 54, 56, 69, 72, 89, 103, 104, 993, 996, 1001, 1002, 1003, 1004, 1005, 1006, 1015, 1018, 1020];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest.testSingularities;[3, 4, 5, 6, 11, 12, 14, 20, 21, 22, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 56, 58, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 549, 550, 551, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000];[3, 4, 5, 6, 11, 12, 14, 20, 21, 22, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 56, 58, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 549, 550, 551, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest.testVectorOnePair;[3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 19, 20, 21, 22, 23, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 56, 58, 69, 70, 71, 72, 89, 103, 104, 816, 991, 993, 998, 999, 1000, 1001, 1011, 1012, 1015, 1021, 1022];[3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 19, 20, 21, 22, 23, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 56, 58, 69, 70, 71, 72, 89, 103, 104, 816, 991, 993, 998, 999, 1000, 1001, 1011, 1012, 1015, 1021, 1022];0
org.apache.commons.math3.geometry.euclidean.threed.FieldRotationDSTest.testVectorTwoPairs;[3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 36, 38, 39, 42, 43, 46, 51, 54, 56, 58, 69, 70, 71, 72, 89, 103, 104, 816, 991, 993, 996, 998, 999, 1000, 1001, 1002, 1011, 1012, 1013, 1014, 1015, 1018, 1022];[3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 36, 38, 39, 42, 43, 46, 51, 54, 56, 58, 69, 70, 71, 72, 89, 103, 104, 816, 991, 993, 996, 998, 999, 1000, 1001, 1002, 1011, 1012, 1013, 1014, 1015, 1018, 1022];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateCrossProduct;[3, 4, 5, 6, 11, 12, 14, 19, 20, 21, 22, 23, 36, 39, 42, 43, 51, 54, 56, 69, 72, 103, 104, 991, 998, 999, 1000, 1011, 1024];[3, 4, 5, 6, 11, 12, 14, 19, 20, 21, 22, 23, 36, 39, 42, 43, 51, 54, 56, 69, 72, 103, 104, 991, 998, 999, 1000, 1011, 1024];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAccurateDotProduct;[3, 4, 5, 11, 19, 20, 21, 22, 23, 42, 54, 56, 69, 103, 104, 998, 999, 1000, 1015];[3, 4, 5, 11, 19, 20, 21, 22, 23, 42, 54, 56, 69, 103, 104, 998, 999, 1000, 1015];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAdd;[0, 2, 3, 4, 5, 11, 19, 20, 21, 22, 23, 42, 54, 56, 58, 69, 103, 104, 549, 550, 551, 998, 999, 1000, 1025];[0, 2, 3, 4, 5, 11, 19, 20, 21, 22, 23, 42, 54, 56, 58, 69, 103, 104, 549, 550, 551, 998, 999, 1000, 1025];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAngle;[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 36, 37, 38, 39, 42, 44, 46, 51, 54, 56, 69, 70, 71, 72, 103, 104, 991, 1011, 1015, 1016];[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 36, 37, 38, 39, 42, 44, 46, 51, 54, 56, 69, 70, 71, 72, 103, 104, 991, 1011, 1015, 1016];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAngular;[3, 5, 8, 9, 11, 12, 14, 20, 21, 22, 24, 25, 26, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 51, 54, 72, 76, 77, 78, 79, 80, 81, 123, 124, 991, 1026, 1027];[3, 5, 8, 9, 11, 12, 14, 20, 21, 22, 24, 25, 26, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 51, 54, 72, 76, 77, 78, 79, 80, 81, 123, 124, 991, 1026, 1027];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testAngularSeparation;[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 36, 37, 38, 39, 42, 44, 46, 51, 54, 56, 58, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 89, 103, 104, 549, 550, 551, 554, 991, 1011, 1012, 1014, 1015, 1016, 1021, 1022, 1025, 1028];[3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 36, 37, 38, 39, 42, 44, 46, 51, 54, 56, 58, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 89, 103, 104, 549, 550, 551, 554, 991, 1011, 1012, 1014, 1015, 1016, 1021, 1022, 1025, 1028];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testConstructors;[0, 2, 3, 4, 5, 11, 12, 14, 19, 20, 21, 22, 23, 42, 54, 56, 69, 74, 75, 76, 77, 78, 79, 80, 81, 103, 104, 123, 124, 549, 550, 551, 998, 999, 1000];[0, 2, 3, 4, 5, 11, 12, 14, 19, 20, 21, 22, 23, 42, 54, 56, 69, 74, 75, 76, 77, 78, 79, 80, 81, 103, 104, 123, 124, 549, 550, 551, 998, 999, 1000];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testCoordinates;[3, 4, 5, 11, 56, 58, 998, 999, 1000, 1029];[3, 4, 5, 11, 56, 58, 998, 999, 1000, 1029];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testCrossProduct;[0, 2, 3, 4, 5, 6, 11, 19, 20, 21, 22, 23, 42, 54, 56, 69, 103, 104, 105, 106, 107, 108, 549, 550, 551, 998, 999, 1000, 1011];[0, 2, 3, 4, 5, 6, 11, 19, 20, 21, 22, 23, 42, 54, 56, 69, 103, 104, 105, 106, 107, 108, 549, 550, 551, 998, 999, 1000, 1011];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testCrossProductCancellation;[3, 4, 5, 6, 11, 19, 20, 21, 22, 23, 42, 54, 56, 69, 103, 104, 998, 999, 1000, 1011];[3, 4, 5, 6, 11, 19, 20, 21, 22, 23, 42, 54, 56, 69, 103, 104, 998, 999, 1000, 1011];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testDistance;[0, 2, 3, 4, 5, 11, 12, 14, 20, 21, 22, 36, 39, 42, 43, 51, 54, 72, 549, 550, 551, 1024];[0, 2, 3, 4, 5, 11, 12, 14, 20, 21, 22, 36, 39, 42, 43, 51, 54, 72, 549, 550, 551, 1024];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testDistance1;[0, 1, 2, 3, 4, 5, 6, 11, 20, 21, 22, 39, 43, 549, 550, 551, 1030];[0, 1, 2, 3, 4, 5, 6, 11, 20, 21, 22, 39, 43, 549, 550, 551, 1030];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testDistanceInf;[0, 1, 2, 3, 4, 5, 6, 11, 20, 22, 39, 43, 549, 550, 551, 1031, 1032, 1033];[0, 1, 2, 3, 4, 5, 6, 11, 20, 22, 39, 43, 549, 550, 551, 1031, 1032, 1033];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testDistanceSq;[0, 2, 3, 4, 5, 11, 20, 21, 22, 39, 42, 43, 54, 549, 550, 551, 1034];[0, 2, 3, 4, 5, 11, 20, 21, 22, 39, 42, 43, 54, 549, 550, 551, 1034];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testDotProduct;[0, 2, 3, 4, 5, 11, 19, 20, 21, 22, 23, 42, 54, 56, 69, 103, 104, 105, 106, 107, 108, 549, 550, 551, 1015];[0, 2, 3, 4, 5, 11, 19, 20, 21, 22, 23, 42, 54, 56, 69, 103, 104, 105, 106, 107, 108, 549, 550, 551, 1015];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testEquals;[3, 4, 5, 11, 23, 56, 69, 92, 93, 1028, 1035, 1036];[3, 4, 5, 11, 23, 56, 69, 92, 93, 1028, 1035, 1036];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testHash;[3, 4, 5, 11, 23, 56, 69, 98, 99, 1036, 1037];[3, 4, 5, 11, 23, 56, 69, 98, 99, 1036, 1037];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testInfinite;[3, 5, 11, 1036, 1038];[3, 5, 11, 1036, 1038];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testNaN;[3, 5, 11, 1036];[3, 5, 11, 1036];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testNegate;[0, 2, 3, 4, 5, 6, 11, 998, 999, 1000, 1022];[0, 2, 3, 4, 5, 6, 11, 998, 999, 1000, 1022];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testNorm;[0, 2, 3, 4, 5, 11, 12, 14, 20, 21, 22, 36, 42, 51, 54, 72, 991];[0, 2, 3, 4, 5, 11, 12, 14, 20, 21, 22, 36, 42, 51, 54, 72, 991];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testNorm1;[0, 1, 2, 3, 4, 5, 6, 11, 20, 21, 22, 1039];[0, 1, 2, 3, 4, 5, 6, 11, 20, 21, 22, 1039];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testNormalize;[3, 5, 11, 12, 14, 20, 21, 22, 36, 38, 42, 46, 51, 54, 70, 71, 72, 89, 991, 1012, 1014];[3, 5, 11, 12, 14, 20, 21, 22, 36, 38, 42, 46, 51, 54, 70, 71, 72, 89, 991, 1012, 1014];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testNormInf;[0, 1, 2, 3, 4, 5, 6, 11, 1032];[0, 1, 2, 3, 4, 5, 6, 11, 1032];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testNormSq;[0, 2, 3, 4, 5, 11, 20, 21, 22, 42, 54, 1040];[0, 2, 3, 4, 5, 11, 20, 21, 22, 42, 54, 1040];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testOrthogonal;[3, 4, 5, 6, 11, 12, 14, 19, 20, 21, 22, 23, 36, 38, 42, 46, 51, 54, 56, 58, 69, 70, 71, 72, 89, 103, 104, 991, 1015, 1021];[3, 4, 5, 6, 11, 12, 14, 19, 20, 21, 22, 23, 36, 38, 42, 46, 51, 54, 56, 58, 69, 70, 71, 72, 89, 103, 104, 991, 1015, 1021];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testScalarProduct;[3, 5, 11, 54, 998, 999, 1000, 1012];[3, 5, 11, 54, 998, 999, 1000, 1012];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testSubtract;[0, 2, 3, 4, 5, 6, 11, 19, 20, 21, 22, 23, 39, 42, 43, 54, 56, 58, 69, 103, 104, 549, 550, 551, 998, 999, 1000, 1031];[0, 2, 3, 4, 5, 6, 11, 19, 20, 21, 22, 23, 39, 42, 43, 54, 56, 58, 69, 103, 104, 549, 550, 551, 998, 999, 1000, 1031];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testToString;[3, 5, 11, 332, 528, 549, 550, 551, 1028, 1041, 1042, 1043, 1044];[3, 5, 11, 332, 528, 549, 550, 551, 1028, 1041, 1042, 1043, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testVectorialProducts;[3, 4, 5, 6, 11, 19, 20, 21, 22, 23, 42, 54, 56, 69, 103, 104, 549, 550, 551, 998, 999, 1000, 1011, 1015, 1028];[3, 4, 5, 6, 11, 19, 20, 21, 22, 23, 42, 54, 56, 69, 103, 104, 549, 550, 551, 998, 999, 1000, 1011, 1015, 1028];0
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3DTest.testWrongDimension;[3, 5, 70, 71];[3, 5, 70, 71];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.tesNegativeInfinity;[528, 549, 550, 551, 1042, 1044];[528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testConstructorSingleFormat;[1045];[1045];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testDefaultFormatVector3D;[332, 528, 549, 550, 551, 1042, 1044];[332, 528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testForgottenPrefix;[332, 533, 534, 535, 1046, 1047];[332, 533, 534, 535, 1046, 1047];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testForgottenSeparator;[332, 533, 534, 535, 536, 1046, 1047];[332, 533, 534, 535, 536, 1046, 1047];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testForgottenSuffix;[332, 533, 534, 535, 536, 1046, 1047];[332, 533, 534, 535, 536, 1046, 1047];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testNan;[528, 549, 550, 551, 1042, 1044];[528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testNegativeX;[528, 549, 550, 551, 1042, 1044];[528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testNegativeY;[528, 549, 550, 551, 1042, 1044];[528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testNegativeZ;[528, 549, 550, 551, 1042, 1044];[528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testNonDefaultSetting;[528, 549, 550, 551, 1042, 1044];[528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testParseIgnoredWhitespace;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testParseNan;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testParseNegativeAll;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testParseNegativeInfinity;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testParseNegativeX;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testParseNegativeY;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testParseNegativeZ;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testParseNonDefaultSetting;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testParsePositiveInfinity;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testParseSimpleNoDecimals;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testParseSimpleWithDecimals;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testParseSimpleWithDecimalsTrunc;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testParseZeroX;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testPositiveInfinity;[528, 549, 550, 551, 1042, 1044];[528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testSimpleNoDecimals;[528, 549, 550, 551, 1042, 1044];[528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testSimpleWithDecimals;[528, 549, 550, 551, 1042, 1044];[528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.FrenchVector3DFormatTest.testSimpleWithDecimalsTrunc;[528, 549, 550, 551, 1042, 1044];[528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.LineTest.testClosest;[12, 556, 557, 1050, 1051, 1052, 1053];[12, 556, 557, 1050, 1051, 1052, 1053];0
org.apache.commons.math3.geometry.euclidean.threed.LineTest.testContains;[12, 76, 77, 78, 79, 80, 81, 553, 554, 555, 556, 557, 1050, 1053, 1054, 1055, 1056, 1057];[12, 76, 77, 78, 79, 80, 81, 553, 554, 555, 556, 557, 1050, 1053, 1054, 1055, 1056, 1057];0
org.apache.commons.math3.geometry.euclidean.threed.LineTest.testIntersection;[12, 554, 556, 557, 1050, 1051, 1052, 1053, 1055, 1056, 1058];[12, 554, 556, 557, 1050, 1051, 1052, 1053, 1055, 1056, 1058];0
org.apache.commons.math3.geometry.euclidean.threed.LineTest.testLineDistance;[12, 554, 555, 556, 557, 1050, 1053, 1056];[12, 554, 555, 556, 557, 1050, 1053, 1056];0
org.apache.commons.math3.geometry.euclidean.threed.LineTest.testPointDistance;[12, 554, 556, 557, 1050, 1053, 1056];[12, 554, 556, 557, 1050, 1053, 1056];0
org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert;[12, 556, 557, 1050, 1053, 1054, 1059, 1060, 1061];[12, 556, 557, 1050, 1053, 1054, 1059, 1060, 1061];0
org.apache.commons.math3.geometry.euclidean.threed.LineTest.testSimilar;[8, 9, 12, 13, 26, 553, 554, 555, 556, 557, 1050, 1053, 1054, 1055, 1056, 1057, 1062, 1063];[8, 9, 12, 13, 26, 553, 554, 555, 556, 557, 1050, 1053, 1054, 1055, 1056, 1057, 1062, 1063];0
org.apache.commons.math3.geometry.euclidean.threed.PlaneTest.testContains;[12, 554, 555, 556, 1057, 1064, 1065, 1066, 1067];[12, 554, 555, 556, 1057, 1064, 1065, 1066, 1067];0
org.apache.commons.math3.geometry.euclidean.threed.PlaneTest.testIntersection;[12, 553, 554, 555, 556, 557, 940, 1050, 1053, 1054, 1055, 1056, 1057, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071];[12, 553, 554, 555, 556, 557, 940, 1050, 1053, 1054, 1055, 1056, 1057, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071];0
org.apache.commons.math3.geometry.euclidean.threed.PlaneTest.testIntersection2;[12, 549, 550, 551, 553, 554, 555, 556, 557, 1050, 1053, 1055, 1056, 1057, 1064, 1065, 1071];[12, 549, 550, 551, 553, 554, 555, 556, 557, 1050, 1053, 1055, 1056, 1057, 1064, 1065, 1071];0
org.apache.commons.math3.geometry.euclidean.threed.PlaneTest.testIntersection3;[12, 549, 550, 551, 554, 555, 556, 1057, 1064, 1065, 1071];[12, 549, 550, 551, 554, 555, 556, 1057, 1064, 1065, 1071];0
org.apache.commons.math3.geometry.euclidean.threed.PlaneTest.testOffset;[12, 554, 555, 556, 1057, 1064, 1065, 1067, 1070];[12, 554, 555, 556, 1057, 1064, 1065, 1067, 1070];0
org.apache.commons.math3.geometry.euclidean.threed.PlaneTest.testPoint;[12, 554, 555, 556, 1057, 1064, 1065, 1066, 1067, 1072];[12, 554, 555, 556, 1057, 1064, 1065, 1066, 1067, 1072];0
org.apache.commons.math3.geometry.euclidean.threed.PlaneTest.testRotate;[12, 76, 77, 78, 79, 80, 81, 549, 550, 551, 553, 554, 555, 556, 557, 1057, 1064, 1065, 1066, 1067, 1070, 1073, 1074];[12, 76, 77, 78, 79, 80, 81, 549, 550, 551, 553, 554, 555, 556, 557, 1057, 1064, 1065, 1066, 1067, 1070, 1073, 1074];0
org.apache.commons.math3.geometry.euclidean.threed.PlaneTest.testSimilar;[8, 9, 12, 13, 26, 553, 554, 555, 556, 557, 1057, 1063, 1064, 1065, 1070, 1075];[8, 9, 12, 13, 26, 553, 554, 555, 556, 557, 1057, 1063, 1064, 1065, 1070, 1075];0
org.apache.commons.math3.geometry.euclidean.threed.PlaneTest.testThreePoints;[12, 554, 555, 556, 557, 1057, 1064, 1065, 1066, 1067];[12, 554, 555, 556, 557, 1057, 1064, 1065, 1066, 1067];0
org.apache.commons.math3.geometry.euclidean.threed.PlaneTest.testTranslate;[12, 553, 554, 555, 556, 557, 1057, 1064, 1065, 1066, 1067, 1070, 1076, 1077, 1078];[12, 553, 554, 555, 556, 557, 1057, 1064, 1065, 1066, 1067, 1070, 1076, 1077, 1078];0
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest.testBox;[12, 40, 76, 77, 78, 79, 80, 81, 549, 550, 551, 553, 554, 555, 556, 557, 816, 939, 940, 941, 942, 946, 947, 948, 950, 952, 953, 954, 956, 957, 958, 959, 960, 961, 962, 963, 965, 966, 968, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1050, 1053, 1054, 1057, 1058, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134];[12, 40, 76, 77, 78, 79, 80, 81, 549, 550, 551, 553, 554, 555, 556, 557, 816, 939, 940, 941, 942, 946, 947, 948, 950, 952, 953, 954, 956, 957, 958, 959, 960, 961, 962, 963, 965, 966, 968, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1050, 1053, 1054, 1057, 1058, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134];0
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest.testBuildBox;[12, 40, 76, 77, 78, 79, 80, 81, 549, 550, 551, 553, 554, 555, 556, 557, 816, 939, 940, 941, 942, 946, 947, 948, 950, 952, 953, 954, 956, 957, 958, 959, 960, 961, 962, 963, 965, 966, 968, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1050, 1053, 1054, 1057, 1058, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134];[12, 40, 76, 77, 78, 79, 80, 81, 549, 550, 551, 553, 554, 555, 556, 557, 816, 939, 940, 941, 942, 946, 947, 948, 950, 952, 953, 954, 956, 957, 958, 959, 960, 961, 962, 963, 965, 966, 968, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1050, 1053, 1054, 1057, 1058, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134];0
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest.testCross;[12, 40, 76, 77, 78, 79, 80, 81, 549, 550, 551, 553, 554, 555, 556, 557, 816, 939, 940, 941, 942, 946, 947, 948, 950, 952, 953, 954, 956, 957, 958, 959, 960, 961, 962, 963, 965, 966, 968, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1050, 1053, 1054, 1057, 1058, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136];[12, 40, 76, 77, 78, 79, 80, 81, 549, 550, 551, 553, 554, 555, 556, 557, 816, 939, 940, 941, 942, 946, 947, 948, 950, 952, 953, 954, 956, 957, 958, 959, 960, 961, 962, 963, 965, 966, 968, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1050, 1053, 1054, 1057, 1058, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136];0
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest.testIsometry;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 549, 550, 551, 553, 554, 555, 556, 557, 816, 939, 940, 941, 942, 946, 947, 948, 950, 952, 953, 954, 956, 957, 958, 959, 960, 961, 962, 963, 965, 966, 968, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1050, 1053, 1054, 1057, 1058, 1064, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 549, 550, 551, 553, 554, 555, 556, 557, 816, 939, 940, 941, 942, 946, 947, 948, 950, 952, 953, 954, 956, 957, 958, 959, 960, 961, 962, 963, 965, 966, 968, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1050, 1053, 1054, 1057, 1058, 1064, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141];0
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest.testIssue780;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 549, 550, 551, 553, 554, 555, 556, 557, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1050, 1053, 1054, 1057, 1058, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1142, 1143, 1144];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 549, 550, 551, 553, 554, 555, 556, 557, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1050, 1053, 1054, 1057, 1058, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1142, 1143, 1144];0
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSetTest.testTetrahedron;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 549, 550, 551, 553, 554, 555, 556, 557, 816, 939, 940, 941, 942, 946, 947, 948, 950, 952, 953, 954, 956, 957, 958, 959, 960, 961, 962, 963, 965, 966, 968, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1050, 1053, 1054, 1057, 1058, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 549, 550, 551, 553, 554, 555, 556, 557, 816, 939, 940, 941, 942, 946, 947, 948, 950, 952, 953, 954, 956, 957, 958, 959, 960, 961, 962, 963, 965, 966, 968, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1050, 1053, 1054, 1057, 1058, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134];0
org.apache.commons.math3.geometry.euclidean.threed.RotationOrderTest.testName;[1145];[1145];0
org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testAngles;[8, 9, 12, 13, 26, 40, 76, 77, 78, 79, 80, 81, 549, 550, 551, 554, 816, 990, 992, 994, 1073, 1146, 1147];[8, 9, 12, 13, 26, 40, 76, 77, 78, 79, 80, 81, 549, 550, 551, 554, 816, 990, 992, 994, 1073, 1146, 1147];0
org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testApplyInverseTo;[12, 76, 77, 78, 79, 80, 81, 549, 550, 551, 554, 557, 1073, 1146];[12, 76, 77, 78, 79, 80, 81, 549, 550, 551, 554, 557, 1073, 1146];0
org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testArray;[12, 76, 77, 78, 79, 80, 81, 549, 550, 551, 554, 1073, 1146];[12, 76, 77, 78, 79, 80, 81, 549, 550, 551, 554, 1073, 1146];0
org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testAxisAngle;[8, 9, 12, 13, 26, 70, 71, 76, 77, 78, 79, 80, 81, 547, 548, 549, 550, 551, 554, 557, 816, 1073];[8, 9, 12, 13, 26, 70, 71, 76, 77, 78, 79, 80, 81, 547, 548, 549, 550, 551, 554, 557, 816, 1073];0
org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testCompose;[12, 76, 77, 78, 79, 80, 81, 549, 550, 551, 554, 557, 1073];[12, 76, 77, 78, 79, 80, 81, 549, 550, 551, 554, 557, 1073];0
org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testComposeInverse;[12, 76, 77, 78, 79, 80, 81, 549, 550, 551, 554, 557, 1073, 1146];[12, 76, 77, 78, 79, 80, 81, 549, 550, 551, 554, 557, 1073, 1146];0
org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testIdentity;[12, 26, 548, 549, 550, 551, 554, 557, 816, 1073];[12, 26, 548, 549, 550, 551, 554, 557, 816, 1073];0
org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testIssue639;[12, 549, 550, 551, 552, 554, 555, 1007, 1008, 1009, 1010, 1148, 1149];[12, 549, 550, 551, 552, 554, 555, 1007, 1008, 1009, 1010, 1148, 1149];0
org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testIssue801;[9, 12, 26, 549, 550, 551, 552, 554, 555, 556, 1007, 1008, 1009, 1010, 1063, 1073, 1148, 1149];[9, 12, 26, 549, 550, 551, 552, 554, 555, 556, 1007, 1008, 1009, 1010, 1063, 1073, 1148, 1149];0
org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testMatrix;[9, 12, 13, 26, 70, 71, 548, 549, 550, 551, 554, 557, 816, 1073, 1146, 1148, 1150, 1151, 1152];[9, 12, 13, 26, 70, 71, 548, 549, 550, 551, 554, 557, 816, 1073, 1146, 1148, 1150, 1151, 1152];0
org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testQuaternion;[12, 26, 76, 77, 78, 79, 80, 81, 548, 549, 550, 551, 554, 557, 1007, 1008, 1009, 1010, 1073, 1146, 1150];[12, 26, 76, 77, 78, 79, 80, 81, 548, 549, 550, 551, 554, 557, 1007, 1008, 1009, 1010, 1073, 1146, 1150];0
org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testRevert;[8, 9, 12, 13, 26, 547, 548, 556, 1073, 1146, 1150, 1153];[8, 9, 12, 13, 26, 547, 548, 556, 1073, 1146, 1150, 1153];0
org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testSingularities;[12, 70, 71, 76, 77, 78, 79, 80, 81, 549, 550, 551, 554, 990, 992, 994, 1073, 1146, 1147];[12, 70, 71, 76, 77, 78, 79, 80, 81, 549, 550, 551, 554, 990, 992, 994, 1073, 1146, 1147];0
org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testVectorOnePair;[12, 13, 70, 71, 548, 549, 550, 551, 552, 554, 555, 556, 557, 816, 1057, 1061, 1073];[12, 13, 70, 71, 548, 549, 550, 551, 552, 554, 555, 556, 557, 816, 1057, 1061, 1073];0
org.apache.commons.math3.geometry.euclidean.threed.RotationTest.testVectorTwoPairs;[9, 12, 13, 26, 70, 71, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 816, 1061, 1073, 1146, 1148, 1149, 1150];[9, 12, 13, 26, 70, 71, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 816, 1061, 1073, 1146, 1148, 1149, 1150];0
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest.testCoordinatesCtoS;[12, 13, 40, 551, 554, 1154, 1155, 1156, 1157];[12, 13, 40, 551, 554, 1154, 1155, 1156, 1157];0
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest.testCoordinatesStoC;[12, 76, 77, 78, 79, 80, 81, 1052, 1158];[12, 76, 77, 78, 79, 80, 81, 1052, 1158];0
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest.testGradient;[0, 2, 3, 4, 5, 12, 14, 20, 22, 37, 38, 42, 44, 46, 52, 54, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 549, 550, 551, 554, 1052, 1158, 1159, 1160];[0, 2, 3, 4, 5, 12, 14, 20, 22, 37, 38, 42, 44, 46, 52, 54, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 549, 550, 551, 554, 1052, 1158, 1159, 1160];0
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest.testHessian;[0, 2, 3, 4, 5, 12, 14, 20, 22, 37, 38, 42, 44, 46, 52, 54, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 549, 550, 551, 1158, 1160, 1161, 1162];[0, 2, 3, 4, 5, 12, 14, 20, 22, 37, 38, 42, 44, 46, 52, 54, 74, 75, 76, 77, 78, 79, 80, 81, 123, 124, 549, 550, 551, 1158, 1160, 1161, 1162];0
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinatesTest.testSerialization;[8, 9, 12, 13, 40, 76, 77, 78, 79, 80, 81, 549, 550, 551, 554, 1052, 1154, 1155, 1156, 1157, 1158, 1163];[8, 9, 12, 13, 40, 76, 77, 78, 79, 80, 81, 549, 550, 551, 554, 1052, 1154, 1155, 1156, 1157, 1158, 1163];0
org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testEndPoints;[12, 556, 557, 940, 941, 942, 946, 950, 951, 952, 953, 954, 956, 957, 960, 962, 965, 966, 969, 972, 1050, 1052, 1053, 1068, 1069, 1086, 1112, 1127, 1143, 1164, 1165, 1166];[12, 556, 557, 940, 941, 942, 946, 950, 951, 952, 953, 954, 956, 957, 960, 962, 965, 966, 969, 972, 1050, 1052, 1053, 1068, 1069, 1086, 1112, 1127, 1143, 1164, 1165, 1166];0
org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testHalfInfiniteNeg;[12, 549, 550, 551, 556, 557, 940, 941, 942, 946, 950, 951, 952, 953, 954, 956, 957, 960, 962, 965, 966, 969, 972, 1050, 1052, 1053, 1068, 1069, 1086, 1127, 1166];[12, 549, 550, 551, 556, 557, 940, 941, 942, 946, 950, 951, 952, 953, 954, 956, 957, 960, 962, 965, 966, 969, 972, 1050, 1052, 1053, 1068, 1069, 1086, 1127, 1166];0
org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testHalfInfinitePos;[12, 549, 550, 551, 556, 557, 940, 941, 942, 946, 950, 951, 952, 953, 954, 956, 957, 960, 962, 965, 966, 969, 972, 1050, 1052, 1053, 1068, 1069, 1086, 1127, 1166];[12, 549, 550, 551, 556, 557, 940, 941, 942, 946, 950, 951, 952, 953, 954, 956, 957, 960, 962, 965, 966, 969, 972, 1050, 1052, 1053, 1068, 1069, 1086, 1127, 1166];0
org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionBoundaryBoundary;[12, 554, 556, 557, 940, 941, 946, 950, 951, 952, 953, 956, 961, 965, 966, 1050, 1051, 1052, 1053, 1055, 1056, 1058, 1112, 1143, 1165, 1167];[12, 554, 556, 557, 940, 941, 946, 950, 951, 952, 953, 956, 961, 965, 966, 1050, 1051, 1052, 1053, 1055, 1056, 1058, 1112, 1143, 1165, 1167];0
org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionBoundaryOutside;[12, 554, 556, 557, 940, 941, 946, 950, 951, 952, 953, 956, 961, 965, 966, 1050, 1051, 1053, 1055, 1056, 1058, 1112, 1143, 1165, 1167];[12, 554, 556, 557, 940, 941, 946, 950, 951, 952, 953, 956, 961, 965, 966, 1050, 1051, 1053, 1055, 1056, 1058, 1112, 1143, 1165, 1167];0
org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionInsideBoundary;[12, 554, 556, 557, 940, 941, 946, 950, 951, 952, 953, 956, 961, 965, 966, 1050, 1051, 1052, 1053, 1055, 1056, 1058, 1112, 1143, 1165, 1167];[12, 554, 556, 557, 940, 941, 946, 950, 951, 952, 953, 956, 961, 965, 966, 1050, 1051, 1052, 1053, 1055, 1056, 1058, 1112, 1143, 1165, 1167];0
org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionInsideInside;[12, 554, 556, 557, 940, 941, 946, 950, 951, 953, 956, 961, 965, 1050, 1051, 1052, 1053, 1055, 1056, 1058, 1112, 1143, 1165, 1167];[12, 554, 556, 557, 940, 941, 946, 950, 951, 953, 956, 961, 965, 1050, 1051, 1052, 1053, 1055, 1056, 1058, 1112, 1143, 1165, 1167];0
org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionInsideOutside;[12, 554, 556, 557, 940, 941, 946, 950, 951, 953, 956, 961, 965, 1050, 1051, 1053, 1055, 1056, 1058, 1112, 1143, 1165, 1167];[12, 554, 556, 557, 940, 941, 946, 950, 951, 953, 956, 961, 965, 1050, 1051, 1053, 1055, 1056, 1058, 1112, 1143, 1165, 1167];0
org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testIntersectionOutsideOutside;[12, 554, 556, 557, 940, 941, 946, 950, 951, 953, 956, 961, 965, 1050, 1051, 1053, 1055, 1056, 1058, 1112, 1143, 1165, 1167];[12, 554, 556, 557, 940, 941, 946, 950, 951, 953, 956, 961, 965, 1050, 1051, 1053, 1055, 1056, 1058, 1112, 1143, 1165, 1167];0
org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testNoEndPoints;[12, 549, 550, 551, 556, 557, 940, 941, 942, 950, 957, 962, 969, 972, 1050, 1053, 1068, 1069, 1086, 1127, 1166, 1168];[12, 549, 550, 551, 556, 557, 940, 941, 942, 950, 957, 962, 969, 972, 1050, 1053, 1068, 1069, 1086, 1127, 1166, 1168];0
org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testNoSegments;[12, 556, 557, 941, 942, 944, 945, 948, 950, 957, 962, 1050, 1053, 1166];[12, 556, 557, 941, 942, 944, 945, 948, 950, 957, 962, 1050, 1053, 1166];0
org.apache.commons.math3.geometry.euclidean.threed.SubLineTest.testSeveralSegments;[12, 556, 557, 939, 940, 941, 942, 946, 948, 950, 951, 952, 953, 954, 956, 957, 960, 961, 962, 963, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1050, 1053, 1068, 1069, 1166];[12, 556, 557, 939, 940, 941, 942, 946, 948, 950, 951, 952, 953, 954, 956, 957, 960, 961, 962, 963, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1050, 1053, 1068, 1069, 1166];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.tesNegativeInfinity;[528, 549, 550, 551, 1042, 1044];[528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testConstructorSingleFormat;[1045];[1045];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testDefaultFormatVector3D;[332, 528, 549, 550, 551, 1042, 1044];[332, 528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testForgottenPrefix;[332, 533, 534, 535, 1046, 1047];[332, 533, 534, 535, 1046, 1047];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testForgottenSeparator;[332, 533, 534, 535, 536, 1046, 1047];[332, 533, 534, 535, 536, 1046, 1047];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testForgottenSuffix;[332, 533, 534, 535, 536, 1046, 1047];[332, 533, 534, 535, 536, 1046, 1047];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testNan;[528, 549, 550, 551, 1042, 1044];[528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testNegativeX;[528, 549, 550, 551, 1042, 1044];[528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testNegativeY;[528, 549, 550, 551, 1042, 1044];[528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testNegativeZ;[528, 549, 550, 551, 1042, 1044];[528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testNonDefaultSetting;[528, 549, 550, 551, 1042, 1044];[528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testParseIgnoredWhitespace;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testParseNan;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testParseNegativeAll;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testParseNegativeInfinity;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testParseNegativeX;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testParseNegativeY;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testParseNegativeZ;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testParseNonDefaultSetting;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testParsePositiveInfinity;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testParseSimpleNoDecimals;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testParseSimpleWithDecimals;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testParseSimpleWithDecimalsTrunc;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testParseZeroX;[533, 534, 535, 536, 1046, 1047, 1048, 1049];[533, 534, 535, 536, 1046, 1047, 1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testPositiveInfinity;[528, 549, 550, 551, 1042, 1044];[528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testSimpleNoDecimals;[528, 549, 550, 551, 1042, 1044];[528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testSimpleWithDecimals;[528, 549, 550, 551, 1042, 1044];[528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormatTest.testSimpleWithDecimalsTrunc;[528, 549, 550, 551, 1042, 1044];[528, 549, 550, 551, 1042, 1044];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testAccurateCrossProduct;[12, 549, 550, 551, 554, 555, 1052];[12, 549, 550, 551, 554, 555, 1052];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testAccurateDotProduct;[549, 550, 551, 556];[549, 550, 551, 556];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testAdd;[549, 550, 551, 553];[549, 550, 551, 553];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testAngle;[8, 9, 12, 13, 26, 70, 71, 554, 555, 556, 1063];[8, 9, 12, 13, 26, 70, 71, 554, 555, 556, 1063];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testAngular;[8, 9, 12, 26, 40, 77, 78, 80, 81, 554, 1154, 1169];[8, 9, 12, 26, 40, 77, 78, 80, 81, 554, 1154, 1169];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testAngularSeparation;[8, 9, 12, 13, 76, 77, 78, 79, 80, 81, 552, 553, 554, 556, 1057, 1063, 1149];[8, 9, 12, 13, 76, 77, 78, 79, 80, 81, 552, 553, 554, 556, 1057, 1063, 1149];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testConstructors;[12, 76, 77, 78, 79, 80, 81, 549, 550, 551];[12, 76, 77, 78, 79, 80, 81, 549, 550, 551];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testCoordinates;[549, 550, 551, 1059];[549, 550, 551, 1059];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testCrossProduct;[12, 105, 106, 107, 108, 554, 555, 1052];[12, 105, 106, 107, 108, 554, 555, 1052];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testCrossProductCancellation;[549, 550, 551, 555];[549, 550, 551, 555];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testDistance;[12, 554, 557, 1052];[12, 554, 557, 1052];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testDistance1;[557, 1170, 1171];[557, 1170, 1171];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testDistanceInf;[557, 1172, 1173];[557, 1172, 1173];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testDistanceSq;[12, 1052, 1174];[12, 1052, 1174];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testDotProduct;[105, 106, 107, 108, 556];[105, 106, 107, 108, 556];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testEquals;[1048, 1049];[1048, 1049];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testHash;[98, 1049, 1175];[98, 1049, 1175];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testInfinite;[1049, 1176];[1049, 1176];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNaN;[1049];[1049];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNegate;[549, 550, 551, 1061];[549, 550, 551, 1061];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNorm;[12, 554];[12, 554];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNorm1;[1171];[1171];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNormalize;[12, 70, 71, 552, 554, 1149];[12, 70, 71, 552, 554, 1149];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNormInf;[1172];[1172];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNormSq;[1050];[1050];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testOrthogonal;[12, 70, 71, 554, 556, 1057];[12, 70, 71, 554, 556, 1057];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testScalarProduct;[549, 550, 551, 552];[549, 550, 551, 552];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testSpace;[1177, 1178, 1179, 1180, 1181, 1182, 1183];[1177, 1178, 1179, 1180, 1181, 1182, 1183];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testSubtract;[549, 550, 551, 557];[549, 550, 551, 557];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testToString;[332, 528, 549, 550, 551, 1041, 1042, 1044, 1184];[332, 528, 549, 550, 551, 1041, 1042, 1044, 1184];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testVectorialProducts;[549, 550, 551, 555, 556];[549, 550, 551, 555, 556];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testWrongDimension;[70, 71];[70, 71];0
org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testZero;[12, 554, 1185];[12, 554, 1185];0
org.apache.commons.math3.geometry.euclidean.twod.LineTest.testAbscissa;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 940, 1053, 1097, 1099, 1112];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 940, 1053, 1097, 1099, 1112];0
org.apache.commons.math3.geometry.euclidean.twod.LineTest.testContains;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 1053, 1055, 1097, 1099, 1103];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 1053, 1055, 1097, 1099, 1103];0
org.apache.commons.math3.geometry.euclidean.twod.LineTest.testDistance;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 1053, 1056, 1097, 1099, 1103];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 1053, 1056, 1097, 1099, 1103];0
org.apache.commons.math3.geometry.euclidean.twod.LineTest.testIntersection;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 1053, 1058, 1097, 1099];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 1053, 1058, 1097, 1099];0
org.apache.commons.math3.geometry.euclidean.twod.LineTest.testOffset;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 1053, 1097, 1099, 1103];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 1053, 1097, 1099, 1103];0
org.apache.commons.math3.geometry.euclidean.twod.LineTest.testOriginOffset;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 1053, 1097, 1099, 1186];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 1053, 1097, 1099, 1186];0
org.apache.commons.math3.geometry.euclidean.twod.LineTest.testParallel;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 1053, 1097, 1099, 1187];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 1053, 1097, 1099, 1187];0
org.apache.commons.math3.geometry.euclidean.twod.LineTest.testPointAt;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 940, 1053, 1068, 1097, 1099, 1103, 1112, 1188];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 940, 1053, 1068, 1097, 1099, 1103, 1112, 1188];0
org.apache.commons.math3.geometry.euclidean.twod.LineTest.testTransform;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 1053, 1097, 1099, 1119, 1139];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 1053, 1097, 1099, 1119, 1139];0
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testBug20040520;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 948, 950, 951, 952, 953, 954, 956, 957, 960, 961, 962, 963, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1132, 1135];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 948, 950, 951, 952, 953, 954, 956, 957, 960, 961, 962, 963, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1132, 1135];0
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testBug20041003;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 948, 950, 951, 952, 953, 954, 956, 957, 960, 961, 962, 963, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1135];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 948, 950, 951, 952, 953, 954, 956, 957, 960, 961, 962, 963, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1135];0
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testChoppedHexagon;[12, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 970, 971, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1081, 1084, 1091, 1093, 1094, 1095, 1097, 1098, 1099, 1101, 1103, 1106, 1107, 1108, 1112, 1113, 1118, 1119, 1120, 1122, 1125, 1126, 1128, 1130, 1131];[12, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 970, 971, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1081, 1084, 1091, 1093, 1094, 1095, 1097, 1098, 1099, 1101, 1103, 1106, 1107, 1108, 1112, 1113, 1118, 1119, 1120, 1122, 1125, 1126, 1128, 1130, 1131];0
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testConcentric;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 944, 946, 947, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 970, 971, 973, 976, 977, 978, 981, 982, 984, 985, 986, 987, 1053, 1058, 1087, 1091, 1094, 1095, 1097, 1099, 1101, 1103, 1107, 1108, 1112, 1113, 1118, 1119, 1125, 1126, 1130, 1131, 1132, 1142, 1144, 1189];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 944, 946, 947, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 970, 971, 973, 976, 977, 978, 981, 982, 984, 985, 986, 987, 1053, 1058, 1087, 1091, 1094, 1095, 1097, 1099, 1101, 1103, 1107, 1108, 1112, 1113, 1118, 1119, 1125, 1126, 1130, 1131, 1132, 1142, 1144, 1189];0
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testDifference;[12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1135, 1142, 1144, 1190];[12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1135, 1142, 1144, 1190];0
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testDisjointPolygons;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1135, 1142, 1144];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1135, 1142, 1144];0
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testEmptyDifference;[40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 944, 946, 947, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 970, 971, 973, 976, 977, 978, 981, 982, 984, 985, 986, 987, 1053, 1058, 1087, 1091, 1094, 1095, 1097, 1099, 1101, 1103, 1107, 1108, 1112, 1113, 1118, 1119, 1125, 1126, 1130, 1131, 1132, 1142, 1144, 1190];[40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 944, 946, 947, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 970, 971, 973, 976, 977, 978, 981, 982, 984, 985, 986, 987, 1053, 1058, 1087, 1091, 1094, 1095, 1097, 1099, 1101, 1103, 1107, 1108, 1112, 1113, 1118, 1119, 1125, 1126, 1130, 1131, 1132, 1142, 1144, 1190];0
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testHole;[12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1142, 1144];[12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1142, 1144];0
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testIntersection;[12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1142, 1144, 1190];[12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1142, 1144, 1190];0
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testIssue880Complete;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 944, 946, 948, 950, 952, 953, 954, 956, 957, 960, 961, 962, 963, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1132, 1135, 1142, 1190, 1191, 1192];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 944, 946, 948, 950, 952, 953, 954, 956, 957, 960, 961, 962, 963, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1132, 1135, 1142, 1190, 1191, 1192];0
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testIssue880Simplified;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 946, 950, 952, 953, 954, 956, 957, 961, 963, 965, 966, 970, 971, 973, 977, 978, 981, 984, 987, 1053, 1058, 1087, 1095, 1097, 1099, 1101, 1103, 1112, 1113, 1119, 1125, 1126, 1130, 1191, 1192];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 946, 950, 952, 953, 954, 956, 957, 961, 963, 965, 966, 970, 971, 973, 977, 978, 981, 984, 987, 1053, 1058, 1087, 1095, 1097, 1099, 1101, 1103, 1112, 1113, 1119, 1125, 1126, 1130, 1191, 1192];0
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testLineIntersection;[40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1087, 1091, 1094, 1095, 1097, 1099, 1101, 1103, 1107, 1108, 1112, 1113, 1118, 1119, 1125, 1126, 1130, 1131, 1142, 1144, 1193, 1194];[40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1087, 1091, 1094, 1095, 1097, 1099, 1101, 1103, 1107, 1108, 1112, 1113, 1118, 1119, 1125, 1126, 1130, 1131, 1142, 1144, 1193, 1194];0
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testOppositeHyperplanes;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1142, 1144];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1142, 1144];0
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testSimplyConnected;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1142, 1144];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1142, 1144];0
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testSingularPoint;[12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1135, 1142, 1144];[12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1135, 1142, 1144];0
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testSqueezedHexa;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 946, 950, 952, 953, 954, 956, 957, 961, 963, 965, 966, 970, 971, 973, 977, 978, 981, 984, 987, 1053, 1058, 1087, 1095, 1097, 1099, 1101, 1103, 1112, 1113, 1119, 1125, 1126, 1130, 1191, 1192];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 946, 950, 952, 953, 954, 956, 957, 961, 963, 965, 966, 970, 971, 973, 977, 978, 981, 984, 987, 1053, 1058, 1087, 1095, 1097, 1099, 1101, 1103, 1112, 1113, 1119, 1125, 1126, 1130, 1191, 1192];0
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testStair;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1133, 1142, 1144];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1133, 1142, 1144];0
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testUnion;[12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1142, 1144, 1190];[12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1142, 1144, 1190];0
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testUnlimitedSubHyperplane;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1142, 1144, 1190];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1142, 1144, 1190];0
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSetTest.testXor;[12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1135, 1142, 1144, 1190, 1195];[12, 40, 76, 77, 78, 79, 80, 81, 816, 939, 940, 941, 942, 944, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1058, 1068, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1103, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1135, 1142, 1144, 1190, 1195];0
org.apache.commons.math3.geometry.euclidean.twod.SegmentTest.testDistance;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 1053, 1092, 1097, 1099, 1196];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 1053, 1092, 1097, 1099, 1196];0
org.apache.commons.math3.geometry.euclidean.twod.SubLineTest.testEndPoints;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 940, 941, 942, 946, 950, 951, 952, 953, 954, 956, 957, 960, 962, 965, 966, 969, 972, 1053, 1068, 1086, 1092, 1097, 1099, 1112, 1113, 1127, 1143, 1164, 1166];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 940, 941, 942, 946, 950, 951, 952, 953, 954, 956, 957, 960, 962, 965, 966, 969, 972, 1053, 1068, 1086, 1092, 1097, 1099, 1112, 1113, 1127, 1143, 1164, 1166];0
org.apache.commons.math3.geometry.euclidean.twod.SubLineTest.testHalfInfiniteNeg;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 940, 941, 942, 946, 950, 951, 952, 953, 954, 956, 957, 960, 962, 965, 966, 969, 972, 1053, 1068, 1086, 1092, 1097, 1099, 1113, 1127, 1166];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 940, 941, 942, 946, 950, 951, 952, 953, 954, 956, 957, 960, 962, 965, 966, 969, 972, 1053, 1068, 1086, 1092, 1097, 1099, 1113, 1127, 1166];0
org.apache.commons.math3.geometry.euclidean.twod.SubLineTest.testHalfInfinitePos;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 940, 941, 942, 946, 950, 951, 952, 953, 954, 956, 957, 960, 962, 965, 966, 969, 972, 1053, 1068, 1086, 1092, 1097, 1099, 1113, 1127, 1166];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 940, 941, 942, 946, 950, 951, 952, 953, 954, 956, 957, 960, 962, 965, 966, 969, 972, 1053, 1068, 1086, 1092, 1097, 1099, 1113, 1127, 1166];0
org.apache.commons.math3.geometry.euclidean.twod.SubLineTest.testIntersectionBoundaryBoundary;[12, 40, 76, 77, 78, 79, 80, 81, 940, 941, 946, 950, 951, 952, 953, 956, 961, 965, 966, 1053, 1058, 1092, 1097, 1099, 1112, 1113, 1143, 1167];[12, 40, 76, 77, 78, 79, 80, 81, 940, 941, 946, 950, 951, 952, 953, 956, 961, 965, 966, 1053, 1058, 1092, 1097, 1099, 1112, 1113, 1143, 1167];0
org.apache.commons.math3.geometry.euclidean.twod.SubLineTest.testIntersectionBoundaryOutside;[40, 76, 77, 78, 79, 80, 81, 940, 941, 946, 950, 951, 952, 953, 956, 961, 965, 966, 1053, 1058, 1097, 1099, 1112, 1113, 1143, 1167];[40, 76, 77, 78, 79, 80, 81, 940, 941, 946, 950, 951, 952, 953, 956, 961, 965, 966, 1053, 1058, 1097, 1099, 1112, 1113, 1143, 1167];0
org.apache.commons.math3.geometry.euclidean.twod.SubLineTest.testIntersectionInsideBoundary;[12, 40, 76, 77, 78, 79, 80, 81, 940, 941, 946, 950, 951, 952, 953, 956, 961, 965, 966, 1053, 1058, 1092, 1097, 1099, 1112, 1113, 1143, 1167];[12, 40, 76, 77, 78, 79, 80, 81, 940, 941, 946, 950, 951, 952, 953, 956, 961, 965, 966, 1053, 1058, 1092, 1097, 1099, 1112, 1113, 1143, 1167];0
org.apache.commons.math3.geometry.euclidean.twod.SubLineTest.testIntersectionInsideInside;[12, 40, 76, 77, 78, 79, 80, 81, 940, 941, 946, 950, 951, 953, 956, 961, 965, 1053, 1058, 1092, 1097, 1099, 1112, 1113, 1143, 1167];[12, 40, 76, 77, 78, 79, 80, 81, 940, 941, 946, 950, 951, 953, 956, 961, 965, 1053, 1058, 1092, 1097, 1099, 1112, 1113, 1143, 1167];0
org.apache.commons.math3.geometry.euclidean.twod.SubLineTest.testIntersectionInsideOutside;[40, 76, 77, 78, 79, 80, 81, 940, 941, 946, 950, 951, 953, 956, 961, 965, 1053, 1058, 1097, 1099, 1112, 1113, 1143, 1167];[40, 76, 77, 78, 79, 80, 81, 940, 941, 946, 950, 951, 953, 956, 961, 965, 1053, 1058, 1097, 1099, 1112, 1113, 1143, 1167];0
org.apache.commons.math3.geometry.euclidean.twod.SubLineTest.testIntersectionOutsideOutside;[40, 76, 77, 78, 79, 80, 81, 940, 941, 946, 950, 951, 953, 956, 961, 965, 1053, 1058, 1097, 1099, 1112, 1113, 1143, 1167];[40, 76, 77, 78, 79, 80, 81, 940, 941, 946, 950, 951, 953, 956, 961, 965, 1053, 1058, 1097, 1099, 1112, 1113, 1143, 1167];0
org.apache.commons.math3.geometry.euclidean.twod.SubLineTest.testNoEndPoints;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 940, 941, 942, 950, 956, 957, 962, 969, 972, 1053, 1068, 1086, 1097, 1099, 1101, 1113, 1127, 1166];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 940, 941, 942, 950, 956, 957, 962, 969, 972, 1053, 1068, 1086, 1097, 1099, 1101, 1113, 1127, 1166];0
org.apache.commons.math3.geometry.euclidean.twod.SubLineTest.testNoSegments;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 941, 942, 944, 945, 948, 950, 956, 957, 962, 1053, 1097, 1099, 1113, 1166];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 941, 942, 944, 945, 948, 950, 956, 957, 962, 1053, 1097, 1099, 1113, 1166];0
org.apache.commons.math3.geometry.euclidean.twod.SubLineTest.testSeveralSegments;[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 939, 940, 941, 942, 946, 948, 950, 951, 952, 953, 954, 956, 957, 960, 961, 962, 963, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1068, 1097, 1099, 1113, 1166];[8, 9, 12, 40, 76, 77, 78, 79, 80, 81, 939, 940, 941, 942, 946, 948, 950, 951, 952, 953, 954, 956, 957, 960, 961, 962, 963, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 987, 1053, 1068, 1097, 1099, 1113, 1166];0
org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest.testDelete1;[1114, 1115, 1197, 1198];[1114, 1115, 1197, 1198];0
org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest.testInsert;[1082, 1114, 1115, 1198];[1082, 1114, 1115, 1198];0
org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest.testNavigation;[1082, 1114, 1199];[1082, 1114, 1199];0
org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest.testRepetition;[1082, 1114, 1115, 1198, 1200];[1082, 1114, 1115, 1198, 1200];0
org.apache.commons.math3.geometry.partitioning.utilities.AVLTreeTest.testSearch;[1082, 1114, 1115, 1200];[1082, 1114, 1115, 1200];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testAdd;[61, 390, 392, 396, 425, 704, 706, 715, 1201];[61, 390, 392, 396, 425, 704, 706, 715, 1201];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testAddFail;[61, 70, 71, 390, 392, 396, 425, 704, 1201];[61, 70, 71, 390, 392, 396, 425, 704, 1201];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testCopyFunctions;[61, 373, 384, 390, 392, 396, 402, 405, 425, 706, 715, 732];[61, 373, 384, 390, 392, 396, 402, 405, 425, 706, 715, 732];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testCopySubMatrix;[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425, 679, 685, 725, 732, 1202, 1203];[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425, 679, 685, 725, 732, 1202, 1203];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testDimensions;[61, 390, 392, 396, 425, 672];[61, 390, 392, 396, 425, 672];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testEqualsAndHashCode;[61, 98, 373, 384, 390, 392, 396, 402, 405, 425, 677, 679, 685, 695, 706, 709, 724, 725, 731, 732, 1204];[61, 98, 373, 384, 390, 392, 396, 402, 405, 425, 677, 679, 685, 695, 706, 709, 724, 725, 731, 732, 1204];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testExamples;[61, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 695, 706, 715, 720, 786, 819];[61, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 695, 706, 715, 720, 786, 819];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testFrobeniusNorm;[12, 61, 390, 392, 396, 425, 685, 725, 1205];[12, 61, 390, 392, 396, 425, 685, 725, 1205];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testGetColumn;[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425, 1206];[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425, 1206];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testGetColumnMatrix;[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425, 677, 695, 732, 1207];[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425, 677, 695, 732, 1207];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testGetColumnVector;[61, 70, 71, 331, 344, 347, 349, 373, 384, 390, 392, 396, 402, 405, 425, 1206, 1208];[61, 70, 71, 331, 344, 347, 349, 373, 384, 390, 392, 396, 402, 405, 425, 1206, 1208];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testGetEntry;[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425];[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testGetRow;[61, 70, 71, 373, 376, 384, 390, 392, 396, 402, 405, 425];[61, 70, 71, 373, 376, 384, 390, 392, 396, 402, 405, 425];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testGetRowMatrix;[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425, 677, 695, 732, 1209];[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425, 677, 695, 732, 1209];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testGetRowVector;[61, 70, 71, 331, 344, 347, 349, 373, 376, 384, 390, 392, 396, 402, 405, 425, 1210];[61, 70, 71, 331, 344, 347, 349, 373, 376, 384, 390, 392, 396, 402, 405, 425, 1210];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testGetSubMatrix;[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425, 677, 685, 695, 725, 732, 1203, 1211, 1212, 1213];[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425, 677, 685, 695, 725, 732, 1203, 1211, 1212, 1213];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testGetVectors;[61, 70, 71, 93, 117, 373, 376, 384, 390, 392, 396, 402, 405, 425, 1206];[61, 70, 71, 93, 117, 373, 376, 384, 390, 392, 396, 402, 405, 425, 1206];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testMath209;[392, 396, 750];[392, 396, 750];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testMultiply;[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 417, 425, 677, 695, 792, 805, 1214, 1215, 1216];[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 417, 425, 677, 695, 792, 805, 1214, 1215, 1216];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testMultiply2;[61, 373, 384, 390, 392, 396, 402, 405, 417, 425, 677, 695, 720, 792, 805, 1215, 1216];[61, 373, 384, 390, 392, 396, 402, 405, 417, 425, 677, 695, 720, 792, 805, 1215, 1216];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testNorm;[61, 390, 392, 396, 425, 1215, 1216];[61, 390, 392, 396, 425, 1215, 1216];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testOperate;[61, 70, 71, 93, 117, 358, 390, 392, 396, 418, 424, 425, 750];[61, 70, 71, 93, 117, 358, 390, 392, 396, 418, 424, 425, 750];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testPlusMinus;[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425, 677, 689, 695, 704, 727, 792, 805, 1215, 1216, 1217];[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425, 677, 689, 695, 704, 727, 792, 805, 1215, 1216, 1217];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testPower;[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 695, 706, 720, 731, 742, 786, 792, 805, 1215, 1216];[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 695, 706, 720, 731, 742, 786, 792, 805, 1215, 1216];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testPremultiply;[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 417, 425, 677, 695, 720, 792, 805, 1215, 1216, 1218];[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 417, 425, 677, 695, 720, 792, 805, 1215, 1216, 1218];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testPremultiplyVector;[61, 70, 71, 93, 117, 390, 392, 396, 424, 425, 682];[61, 70, 71, 93, 117, 390, 392, 396, 424, 425, 682];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testScalarAdd;[61, 373, 384, 390, 392, 396, 402, 405, 425, 677, 695, 792, 805, 1215, 1216, 1219];[61, 373, 384, 390, 392, 396, 402, 405, 425, 677, 695, 792, 805, 1215, 1216, 1219];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testSerial;[61, 373, 384, 390, 392, 396, 402, 405, 425, 732];[61, 373, 384, 390, 392, 396, 402, 405, 425, 732];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testSetColumn;[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425, 695, 700, 1206];[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425, 695, 700, 1206];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testSetColumnMatrix;[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425, 677, 695, 732, 1207, 1220];[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425, 677, 695, 732, 1207, 1220];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testSetColumnVector;[61, 70, 71, 331, 344, 347, 349, 373, 384, 390, 392, 396, 402, 405, 425, 695, 1206, 1208, 1221];[61, 70, 71, 331, 344, 347, 349, 373, 384, 390, 392, 396, 402, 405, 425, 695, 1206, 1208, 1221];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testSetRow;[61, 70, 71, 373, 376, 384, 390, 392, 396, 402, 405, 425, 695, 1222];[61, 70, 71, 373, 376, 384, 390, 392, 396, 402, 405, 425, 695, 1222];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testSetRowMatrix;[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425, 677, 695, 732, 1209, 1223];[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425, 677, 695, 732, 1209, 1223];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testSetRowVector;[61, 70, 71, 331, 344, 347, 349, 373, 376, 384, 390, 392, 396, 402, 405, 425, 677, 695, 1209, 1210, 1224];[61, 70, 71, 331, 344, 347, 349, 373, 376, 384, 390, 392, 396, 402, 405, 425, 677, 695, 1209, 1210, 1224];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testSetSubMatrix;[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 410, 425, 695, 732, 1225];[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 410, 425, 695, 732, 1225];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testToString;[61, 373, 384, 390, 392, 396, 402, 405, 425, 528, 1226, 1227];[61, 373, 384, 390, 392, 396, 402, 405, 425, 528, 1226, 1227];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testTrace;[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425, 1228];[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 425, 1228];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testTranspose;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 679, 685, 695, 706, 709, 715, 724, 725, 786, 792, 805, 819, 1215, 1216];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 679, 685, 695, 706, 709, 715, 724, 725, 786, 792, 805, 819, 1215, 1216];0
org.apache.commons.math3.linear.Array2DRowRealMatrixTest.testWalk;[373, 384, 392, 396, 402, 405, 679, 685, 709, 725, 1203, 1211, 1212, 1216];[373, 384, 392, 396, 402, 405, 679, 685, 709, 725, 1203, 1211, 1212, 1216];0
org.apache.commons.math3.linear.ArrayFieldVectorTest.testBasicFunctions;[61, 734, 737, 739, 741, 748, 853, 854, 857, 872, 873, 874, 876, 881, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240];[61, 734, 737, 739, 741, 748, 853, 854, 857, 872, 873, 874, 876, 881, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240];0
org.apache.commons.math3.linear.ArrayFieldVectorTest.testConstructors;[61, 70, 71, 853, 854, 857, 1239, 1241, 1242, 1243, 1244];[61, 70, 71, 853, 854, 857, 1239, 1241, 1242, 1243, 1244];0
org.apache.commons.math3.linear.ArrayFieldVectorTest.testDataInOut;[61, 70, 71, 853, 854, 857, 1236, 1239, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253];[61, 70, 71, 853, 854, 857, 1236, 1239, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253];0
org.apache.commons.math3.linear.ArrayFieldVectorTest.testMapFunctions;[61, 853, 854, 855, 857, 872, 873, 874, 876, 881, 1229, 1236, 1239, 1242, 1250, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262];[61, 853, 854, 855, 857, 872, 873, 874, 876, 881, 1229, 1236, 1239, 1242, 1250, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262];0
org.apache.commons.math3.linear.ArrayFieldVectorTest.testMisc;[61, 70, 71, 853, 877, 1238, 1241, 1263];[61, 70, 71, 853, 877, 1238, 1241, 1263];0
org.apache.commons.math3.linear.ArrayFieldVectorTest.testOuterProduct;[61, 734, 737, 739, 741, 748, 853, 857, 869, 1232, 1237, 1239];[61, 734, 737, 739, 741, 748, 853, 857, 869, 1232, 1237, 1239];0
org.apache.commons.math3.linear.ArrayFieldVectorTest.testSerial;[61, 853, 854, 856, 1241, 1243, 1247];[61, 853, 854, 856, 1241, 1243, 1247];0
org.apache.commons.math3.linear.ArrayFieldVectorTest.testZeroVectors;[61, 70, 71, 853, 1241];[61, 70, 71, 853, 1241];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testAddDimensionMismatch;[70, 71, 329, 800];[70, 71, 329, 800];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testAddMixedTypes;[329, 349, 800, 1264, 1265];[329, 349, 800, 1264, 1265];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testAddSameType;[329, 349, 800];[329, 349, 800];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testAddToEntry;[331, 349, 802, 1266];[331, 349, 802, 1266];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testAddToEntryInvalidIndex1;[70, 71, 1266];[70, 71, 1266];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testAddToEntryInvalidIndex2;[70, 71, 1266];[70, 71, 1266];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testAppendScalar;[331, 349, 1267];[331, 349, 1267];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testAppendVector;[331, 349, 1265, 1267];[331, 349, 1265, 1267];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testCombineDimensionMismatchMixedTypes;[70, 71, 329, 697, 1268, 1269];[70, 71, 329, 697, 1268, 1269];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testCombineDimensionMismatchSameType;[70, 71, 329, 697, 1268, 1269];[70, 71, 329, 697, 1268, 1269];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testCombineMixedTypes;[329, 331, 349, 697, 1265, 1268, 1269];[329, 331, 349, 697, 1265, 1268, 1269];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testCombineSameType;[329, 331, 349, 697, 1268, 1269];[329, 331, 349, 697, 1268, 1269];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testCombineToSelfDimensionMismatchMixedTypes;[70, 71, 329, 1268];[70, 71, 329, 1268];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testCombineToSelfDimensionMismatchSameType;[70, 71, 329, 1268];[70, 71, 329, 1268];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testCombineToSelfMixedTypes;[329, 331, 349, 697, 1265, 1268];[329, 331, 349, 697, 1265, 1268];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testCombineToSelfSameType;[329, 331, 349, 697, 1268];[329, 331, 349, 697, 1268];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testConstructors;[70, 71, 331, 349, 358, 424, 1265];[70, 71, 331, 349, 358, 424, 1265];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testCopy;[331, 349, 697];[331, 349, 697];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testCosineDimensionMismatch;[12, 70, 71, 329, 330, 337, 1270];[12, 70, 71, 329, 330, 337, 1270];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testCosineLeftNullVector;[12, 70, 71, 337, 1270];[12, 70, 71, 337, 1270];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testCosineMixedTypes;[12, 329, 330, 331, 337, 349, 1264, 1265, 1270, 1271, 1272];[12, 329, 330, 331, 337, 349, 1264, 1265, 1270, 1271, 1272];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testCosineRightNullVector;[12, 70, 71, 337, 1270];[12, 70, 71, 337, 1270];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testCosineSameType;[12, 329, 330, 337, 1270];[12, 329, 330, 337, 1270];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testDotProductDimensionMismatchMixedTypes;[70, 71, 329, 330, 1272];[70, 71, 329, 330, 1272];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testDotProductDimensionMismatchSameType;[70, 71, 329, 330];[70, 71, 329, 330];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testDotProductMixedTypes;[329, 330, 331, 349, 1265, 1272];[329, 330, 331, 349, 1265, 1272];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testDotProductSameType;[329, 330];[329, 330];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testEquals;[331, 344, 347, 349, 697, 1273];[331, 344, 347, 349, 697, 1273];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetDataRef;[349, 358];[349, 358];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetDimension;[331];[331];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetDistanceDimensionMismatch;[70, 71, 329, 1274];[70, 71, 329, 1274];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetDistanceMixedTypes;[12, 329, 1265, 1274];[12, 329, 1265, 1274];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetDistanceSameType;[12, 329, 1274];[12, 329, 1274];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetEntry;[349];[349];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetEntryInvalidIndex1;[70, 71, 331, 349];[70, 71, 331, 349];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetEntryInvalidIndex2;[70, 71, 331, 349];[70, 71, 331, 349];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetL1DistanceDimensionMismatch;[70, 71, 329, 1275];[70, 71, 329, 1275];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetL1DistanceMixedTypes;[329, 1265, 1275];[329, 1265, 1275];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetL1DistanceSameType;[329, 1275];[329, 1275];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetL1Norm;[1276];[1276];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetLInfDistanceDimensionMismatch;[70, 71, 329, 1277];[70, 71, 329, 1277];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetLInfDistanceMixedTypes;[329, 1265, 1277];[329, 1265, 1277];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetLInfDistanceSameType;[329, 1277];[329, 1277];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetLInfNorm;[1278];[1278];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetNorm;[12, 337];[12, 337];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetSubVector;[331, 349, 1273];[331, 349, 1273];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetSubVectorInvalidIndex1;[70, 71, 331, 1265, 1273];[70, 71, 331, 1265, 1273];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetSubVectorInvalidIndex2;[70, 71, 331, 1265, 1273];[70, 71, 331, 1265, 1273];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetSubVectorInvalidIndex3;[70, 71, 331, 1265, 1273];[70, 71, 331, 1265, 1273];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testGetSubVectorInvalidIndex4;[70, 71, 1273];[70, 71, 1273];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testIsInfinite;[347, 802, 1279];[347, 802, 1279];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testIsNaN;[347, 802];[347, 802];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testIterator;[70, 71, 331, 349, 1264];[70, 71, 331, 349, 1264];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testMap;[9, 12, 13, 18, 26, 46, 53, 76, 77, 78, 79, 80, 81, 83, 85, 86, 112, 115, 122, 131, 134, 136, 147, 202, 206, 216, 217, 222, 223, 292, 331, 349, 697, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297];[9, 12, 13, 18, 26, 46, 53, 76, 77, 78, 79, 80, 81, 83, 85, 86, 112, 115, 122, 131, 134, 136, 147, 202, 206, 216, 217, 222, 223, 292, 331, 349, 697, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testMapAdd;[331, 349, 697, 1298, 1299];[331, 349, 697, 1298, 1299];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testMapAddToSelf;[331, 349, 1298];[331, 349, 1298];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testMapDivide;[331, 349, 697, 1300, 1301];[331, 349, 697, 1300, 1301];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testMapDivideToSelf;[331, 349, 1300];[331, 349, 1300];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testMapMultiply;[331, 349, 697, 806, 807];[331, 349, 697, 806, 807];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testMapMultiplyToSelf;[331, 349, 806];[331, 349, 806];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testMapSubtract;[331, 349, 697, 1302, 1303];[331, 349, 697, 1302, 1303];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testMapSubtractToSelf;[331, 349, 1303];[331, 349, 1303];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testMapToSelf;[9, 12, 13, 18, 26, 46, 53, 76, 77, 78, 79, 80, 81, 83, 85, 86, 112, 115, 122, 131, 134, 136, 147, 202, 206, 216, 217, 222, 223, 292, 331, 349, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297];[9, 12, 13, 18, 26, 46, 53, 76, 77, 78, 79, 80, 81, 83, 85, 86, 112, 115, 122, 131, 134, 136, 147, 202, 206, 216, 217, 222, 223, 292, 331, 349, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testMinMax;[331, 349, 1264, 1304, 1305, 1306, 1307];[331, 349, 1264, 1304, 1305, 1306, 1307];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testOuterProductMixedTypes;[373, 384, 392, 396, 402, 405, 410, 695, 1265, 1308];[373, 384, 392, 396, 402, 405, 410, 695, 1265, 1308];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testOuterProductSameType;[373, 384, 392, 396, 402, 405, 410, 695, 1308];[373, 384, 392, 396, 402, 405, 410, 695, 1308];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testPredicates;[98, 345, 347];[98, 345, 347];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testProjectionDimensionMismatch;[70, 71, 329, 330, 1309, 1310];[70, 71, 329, 330, 1309, 1310];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testProjectionMixedTypes;[210, 219, 329, 330, 331, 349, 807, 1264, 1265, 1272, 1310, 1311, 1312, 1313];[210, 219, 329, 330, 331, 349, 807, 1264, 1265, 1272, 1310, 1311, 1312, 1313];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testProjectionNullVector;[70, 71, 329, 330, 1310];[70, 71, 329, 330, 1310];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testProjectionSameType;[329, 330, 331, 349, 697, 806, 807, 1310];[329, 330, 331, 349, 697, 806, 807, 1310];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testSerial;[331, 344, 347, 349];[331, 344, 347, 349];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testSet;[349, 1309];[349, 1309];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testSetEntry;[331, 349, 802];[331, 349, 802];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testSetEntryInvalidIndex1;[70, 71, 331, 802, 1265];[70, 71, 331, 802, 1265];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testSetEntryInvalidIndex2;[70, 71, 331, 802, 1265];[70, 71, 331, 802, 1265];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testSetSubVectorInvalidIndex1;[70, 71, 331, 1265, 1314];[70, 71, 331, 1265, 1314];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testSetSubVectorInvalidIndex2;[70, 71, 331, 1265, 1314];[70, 71, 331, 1265, 1314];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testSetSubVectorInvalidIndex3;[70, 71, 331, 1265, 1314];[70, 71, 331, 1265, 1314];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testSetSubVectorMixedType;[331, 349, 1265, 1314];[331, 349, 1265, 1314];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testSetSubVectorSameType;[331, 349, 1314];[331, 349, 1314];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testSubtractDimensionMismatch;[70, 71, 329, 341];[70, 71, 329, 341];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testSubtractMixedTypes;[329, 341, 349, 1264, 1265];[329, 341, 349, 1264, 1265];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testSubtractSameType;[329, 341, 349];[329, 341, 349];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testToArray;[424];[424];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testUnitize;[12, 331, 337, 349, 1300, 1315];[12, 331, 337, 349, 1300, 1315];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testUnitizeNullVector;[12, 70, 71, 337, 1315];[12, 70, 71, 337, 1315];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testUnitVector;[12, 331, 337, 349, 697, 1300, 1301, 1316];[12, 331, 337, 349, 697, 1300, 1301, 1316];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testUnitVectorNullVector;[12, 70, 71, 337, 1316];[12, 70, 71, 337, 1316];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testWalkInDefaultOrderChangingVisitor1;[349, 1317];[349, 1317];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testWalkInDefaultOrderChangingVisitor2;[70, 71, 331, 1317, 1318];[70, 71, 331, 1317, 1318];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testWalkInDefaultOrderChangingVisitor3;[331, 349, 1317, 1318];[331, 349, 1317, 1318];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testWalkInDefaultOrderPreservingVisitor1;[1317];[1317];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testWalkInDefaultOrderPreservingVisitor2;[70, 71, 331, 1317, 1318];[70, 71, 331, 1317, 1318];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testWalkInDefaultOrderPreservingVisitor3;[331, 1317, 1318];[331, 1317, 1318];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testWalkInOptimizedOrderChangingVisitor1;[349, 1317, 1319];[349, 1317, 1319];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testWalkInOptimizedOrderChangingVisitor2;[70, 71, 331, 1317, 1318, 1319];[70, 71, 331, 1317, 1318, 1319];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testWalkInOptimizedOrderChangingVisitor3;[331, 349, 1317, 1318, 1319];[331, 349, 1317, 1318, 1319];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testWalkInOptimizedOrderPreservingVisitor1;[1317, 1319];[1317, 1319];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testWalkInOptimizedOrderPreservingVisitor2;[70, 71, 331, 1317, 1318, 1319];[70, 71, 331, 1317, 1318, 1319];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testWalkInOptimizedOrderPreservingVisitor3;[331, 1317, 1318, 1319];[331, 1317, 1318, 1319];0
org.apache.commons.math3.linear.ArrayRealVectorTest.testZeroVectors;[331];[331];0
org.apache.commons.math3.linear.BiDiagonalTransformerTest.testAEqualUSVt;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1320, 1321, 1322, 1323, 1324];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1320, 1321, 1322, 1323, 1324];0
org.apache.commons.math3.linear.BiDiagonalTransformerTest.testBBiDiagonal;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1320, 1321, 1322];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1320, 1321, 1322];0
org.apache.commons.math3.linear.BiDiagonalTransformerTest.testDimensions;[12, 61, 373, 390, 392, 396, 402, 405, 410, 425, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1320, 1321, 1322, 1323, 1324];[12, 61, 373, 390, 392, 396, 402, 405, 410, 425, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1320, 1321, 1322, 1323, 1324];0
org.apache.commons.math3.linear.BiDiagonalTransformerTest.testMatricesValues;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 677, 695, 706, 715, 792, 805, 1215, 1216, 1320, 1321, 1323, 1324];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 677, 695, 706, 715, 792, 805, 1215, 1216, 1320, 1321, 1323, 1324];0
org.apache.commons.math3.linear.BiDiagonalTransformerTest.testSingularMatrix;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 677, 695, 706, 715, 792, 805, 1215, 1216, 1320, 1321, 1323, 1324];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 677, 695, 706, 715, 792, 805, 1215, 1216, 1320, 1321, 1323, 1324];0
org.apache.commons.math3.linear.BiDiagonalTransformerTest.testUOrthogonal;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1215, 1216, 1321, 1322, 1323];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1215, 1216, 1321, 1322, 1323];0
org.apache.commons.math3.linear.BiDiagonalTransformerTest.testUpperOrLower;[12, 61, 373, 390, 392, 396, 402, 405, 410, 425, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1321, 1322, 1325];[12, 61, 373, 390, 392, 396, 402, 405, 410, 425, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1321, 1322, 1325];0
org.apache.commons.math3.linear.BiDiagonalTransformerTest.testVOrthogonal;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1215, 1216, 1321, 1322, 1324];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1215, 1216, 1321, 1322, 1324];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testAdd;[747, 853, 854, 857, 872, 873, 874, 1239, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335];[747, 853, 854, 857, 872, 873, 874, 1239, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testAddFail;[70, 71, 853, 857, 1239, 1326, 1328, 1329, 1330, 1332, 1333, 1334, 1335];[70, 71, 853, 857, 1239, 1326, 1328, 1329, 1330, 1332, 1333, 1334, 1335];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopyFunctions;[734, 737, 747, 853, 854, 857, 1239, 1326, 1327, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338];[734, 737, 747, 853, 854, 857, 1239, 1326, 1327, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testCopySubMatrix;[70, 71, 734, 737, 853, 854, 857, 1239, 1326, 1329, 1330, 1332, 1334, 1335, 1337, 1338, 1339, 1340, 1341, 1342];[70, 71, 734, 737, 853, 854, 857, 1239, 1326, 1329, 1330, 1332, 1334, 1335, 1337, 1338, 1339, 1340, 1341, 1342];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testDimensions;[853, 857, 1239, 1326, 1329, 1330, 1332, 1334, 1335, 1343];[853, 857, 1239, 1326, 1329, 1330, 1332, 1334, 1335, 1343];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testEqualsAndHashCode;[734, 737, 747, 853, 854, 857, 877, 1239, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1337, 1338, 1344, 1345, 1346];[734, 737, 747, 853, 854, 857, 877, 1239, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1337, 1338, 1344, 1345, 1346];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testExamples;[61, 734, 737, 739, 741, 747, 748, 853, 854, 855, 857, 870, 872, 873, 874, 876, 881, 1232, 1239, 1241, 1243, 1248, 1326, 1327, 1329, 1330, 1331, 1332, 1334, 1335, 1343, 1347, 1348, 1349];[61, 734, 737, 739, 741, 747, 748, 853, 854, 855, 857, 870, 872, 873, 874, 876, 881, 1232, 1239, 1241, 1243, 1248, 1326, 1327, 1329, 1330, 1331, 1332, 1334, 1335, 1343, 1347, 1348, 1349];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetColumn;[70, 71, 734, 747, 853, 854, 857, 1239, 1329, 1330, 1332, 1334, 1335, 1350];[70, 71, 734, 747, 853, 854, 857, 1239, 1329, 1330, 1332, 1334, 1335, 1350];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetColumnMatrix;[70, 71, 734, 737, 747, 853, 854, 857, 1239, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1337, 1338, 1351];[70, 71, 734, 737, 747, 853, 854, 857, 1239, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1337, 1338, 1351];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetColumnVector;[61, 70, 71, 734, 747, 853, 854, 857, 1239, 1241, 1243, 1247, 1329, 1330, 1332, 1334, 1335, 1352];[61, 70, 71, 734, 747, 853, 854, 857, 1239, 1241, 1243, 1247, 1329, 1330, 1332, 1334, 1335, 1352];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetEntry;[70, 71, 734, 737, 853, 854, 857, 1239, 1326, 1329, 1330, 1332, 1334, 1335, 1338];[70, 71, 734, 737, 853, 854, 857, 1239, 1326, 1329, 1330, 1332, 1334, 1335, 1338];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRow;[70, 71, 737, 747, 853, 854, 857, 1239, 1326, 1329, 1330, 1332, 1334, 1353];[70, 71, 737, 747, 853, 854, 857, 1239, 1326, 1329, 1330, 1332, 1334, 1353];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRowMatrix;[70, 71, 734, 737, 747, 853, 854, 857, 1239, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1337, 1338, 1354];[70, 71, 734, 737, 747, 853, 854, 857, 1239, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1337, 1338, 1354];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetRowVector;[61, 70, 71, 737, 747, 853, 854, 857, 1239, 1241, 1243, 1247, 1326, 1329, 1330, 1332, 1334, 1355];[61, 70, 71, 737, 747, 853, 854, 857, 1239, 1241, 1243, 1247, 1326, 1329, 1330, 1332, 1334, 1355];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetColumnLarge;[734, 737, 747, 853, 854, 857, 1239, 1326, 1330, 1331, 1334, 1335, 1338, 1350, 1356];[734, 737, 747, 853, 854, 857, 1239, 1326, 1330, 1331, 1334, 1335, 1338, 1350, 1356];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetColumnMatrixLarge;[734, 737, 747, 853, 854, 857, 873, 874, 1239, 1326, 1330, 1331, 1334, 1335, 1337, 1338, 1351, 1357, 1358];[734, 737, 747, 853, 854, 857, 873, 874, 1239, 1326, 1330, 1331, 1334, 1335, 1337, 1338, 1351, 1357, 1358];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetColumnVectorLarge;[61, 734, 737, 747, 853, 854, 857, 1239, 1241, 1243, 1244, 1247, 1326, 1330, 1331, 1334, 1335, 1338, 1352, 1356, 1359];[61, 734, 737, 747, 853, 854, 857, 1239, 1241, 1243, 1244, 1247, 1326, 1330, 1331, 1334, 1335, 1338, 1352, 1356, 1359];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetMatrixLarge;[61, 734, 737, 747, 853, 854, 857, 873, 874, 1239, 1326, 1327, 1330, 1331, 1334, 1335, 1337, 1338, 1342, 1357, 1360, 1361, 1362];[61, 734, 737, 747, 853, 854, 857, 873, 874, 1239, 1326, 1327, 1330, 1331, 1334, 1335, 1337, 1338, 1342, 1357, 1360, 1361, 1362];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowLarge;[734, 737, 747, 853, 854, 857, 1239, 1326, 1331, 1334, 1335, 1338, 1353, 1363];[734, 737, 747, 853, 854, 857, 1239, 1326, 1331, 1334, 1335, 1338, 1353, 1363];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowMatrixLarge;[734, 737, 747, 853, 854, 857, 873, 874, 1239, 1326, 1331, 1334, 1335, 1337, 1338, 1354, 1357, 1364];[734, 737, 747, 853, 854, 857, 873, 874, 1239, 1326, 1331, 1334, 1335, 1337, 1338, 1354, 1357, 1364];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSetRowVectorLarge;[61, 734, 737, 747, 853, 854, 857, 1239, 1241, 1243, 1244, 1247, 1326, 1331, 1334, 1335, 1338, 1355, 1363, 1365];[61, 734, 737, 747, 853, 854, 857, 1239, 1241, 1243, 1244, 1247, 1326, 1331, 1334, 1335, 1338, 1355, 1363, 1365];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetSubMatrix;[70, 71, 734, 737, 747, 853, 854, 857, 1239, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1337, 1338, 1341, 1342, 1360, 1361, 1366, 1367, 1368, 1369];[70, 71, 734, 737, 747, 853, 854, 857, 1239, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1337, 1338, 1341, 1342, 1360, 1361, 1366, 1367, 1368, 1369];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testGetVectors;[70, 71, 734, 737, 747, 853, 854, 857, 1239, 1326, 1329, 1330, 1332, 1334, 1335, 1350, 1353];[70, 71, 734, 737, 747, 853, 854, 857, 1239, 1326, 1329, 1330, 1332, 1334, 1335, 1350, 1353];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testMath209;[747, 853, 854, 857, 872, 873, 874, 1239, 1326, 1329, 1330, 1332, 1334, 1370];[747, 853, 854, 857, 872, 873, 874, 1239, 1326, 1329, 1330, 1332, 1334, 1370];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testMultiply;[70, 71, 734, 737, 747, 853, 854, 857, 872, 873, 874, 1239, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1338, 1347, 1349];[70, 71, 734, 737, 747, 853, 854, 857, 872, 873, 874, 1239, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1338, 1347, 1349];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testMultiply2;[734, 737, 747, 853, 854, 857, 872, 873, 874, 1239, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1338, 1347, 1349];[734, 737, 747, 853, 854, 857, 872, 873, 874, 1239, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1338, 1347, 1349];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperate;[61, 70, 71, 747, 853, 854, 857, 873, 874, 1236, 1239, 1244, 1329, 1330, 1332, 1334, 1370, 1371];[61, 70, 71, 747, 853, 854, 857, 873, 874, 1236, 1239, 1244, 1329, 1330, 1332, 1334, 1370, 1371];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperateLarge;[734, 737, 747, 853, 854, 857, 872, 873, 874, 1239, 1326, 1330, 1331, 1334, 1335, 1336, 1347, 1349, 1350, 1370];[734, 737, 747, 853, 854, 857, 872, 873, 874, 1239, 1326, 1330, 1331, 1334, 1335, 1336, 1347, 1349, 1350, 1370];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testOperatePremultiplyLarge;[734, 737, 747, 853, 854, 857, 872, 873, 874, 1239, 1326, 1331, 1334, 1335, 1336, 1347, 1349, 1353, 1372];[734, 737, 747, 853, 854, 857, 872, 873, 874, 1239, 1326, 1331, 1334, 1335, 1336, 1347, 1349, 1353, 1372];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testPlusMinus;[70, 71, 734, 737, 747, 853, 854, 857, 870, 872, 873, 874, 881, 1239, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1338, 1373, 1374, 1375];[70, 71, 734, 737, 747, 853, 854, 857, 870, 872, 873, 874, 881, 1239, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1338, 1373, 1374, 1375];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiply;[70, 71, 734, 737, 747, 853, 854, 857, 872, 873, 874, 1239, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1338, 1347, 1349, 1376];[70, 71, 734, 737, 747, 853, 854, 857, 872, 873, 874, 1239, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1338, 1347, 1349, 1376];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testPremultiplyVector;[61, 70, 71, 747, 853, 854, 857, 872, 873, 874, 1236, 1239, 1329, 1330, 1332, 1334, 1372];[61, 70, 71, 747, 853, 854, 857, 872, 873, 874, 1236, 1239, 1329, 1330, 1332, 1334, 1372];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testScalarAdd;[734, 737, 747, 853, 854, 857, 872, 873, 874, 1239, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1338, 1357];[734, 737, 747, 853, 854, 857, 872, 873, 874, 1239, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1338, 1357];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testSerial;[734, 737, 853, 854, 857, 1239, 1326, 1329, 1330, 1332, 1334, 1335, 1337, 1338];[734, 737, 853, 854, 857, 1239, 1326, 1329, 1330, 1332, 1334, 1335, 1337, 1338];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumn;[70, 71, 734, 747, 853, 854, 857, 1239, 1326, 1329, 1330, 1332, 1334, 1335, 1350, 1356];[70, 71, 734, 747, 853, 854, 857, 1239, 1326, 1329, 1330, 1332, 1334, 1335, 1350, 1356];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnMatrix;[70, 71, 734, 737, 747, 853, 854, 857, 1239, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1337, 1338, 1351, 1358];[70, 71, 734, 737, 747, 853, 854, 857, 1239, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1337, 1338, 1351, 1358];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetColumnVector;[61, 70, 71, 734, 747, 853, 854, 857, 1239, 1241, 1243, 1244, 1247, 1326, 1329, 1330, 1332, 1334, 1335, 1352, 1356, 1359];[61, 70, 71, 734, 747, 853, 854, 857, 1239, 1241, 1243, 1244, 1247, 1326, 1329, 1330, 1332, 1334, 1335, 1352, 1356, 1359];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRow;[70, 71, 737, 747, 853, 854, 857, 1239, 1326, 1329, 1330, 1332, 1334, 1335, 1353, 1363];[70, 71, 737, 747, 853, 854, 857, 1239, 1326, 1329, 1330, 1332, 1334, 1335, 1353, 1363];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRowMatrix;[70, 71, 734, 737, 747, 853, 854, 857, 1239, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1337, 1338, 1354, 1364];[70, 71, 734, 737, 747, 853, 854, 857, 1239, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1337, 1338, 1354, 1364];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetRowVector;[61, 70, 71, 737, 747, 853, 854, 857, 1239, 1241, 1243, 1244, 1247, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1354, 1355, 1363, 1365];[61, 70, 71, 737, 747, 853, 854, 857, 1239, 1241, 1243, 1244, 1247, 1326, 1329, 1330, 1331, 1332, 1334, 1335, 1354, 1355, 1363, 1365];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testSetSubMatrix;[61, 70, 71, 734, 737, 853, 854, 857, 1239, 1326, 1329, 1330, 1332, 1334, 1335, 1337, 1338, 1342, 1362];[61, 70, 71, 734, 737, 853, 854, 857, 1239, 1326, 1329, 1330, 1332, 1334, 1335, 1337, 1338, 1342, 1362];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testSeveralBlocks;[734, 737, 747, 853, 854, 857, 870, 872, 873, 874, 881, 1239, 1326, 1328, 1330, 1331, 1333, 1334, 1335, 1336, 1338, 1342, 1344, 1347, 1349, 1360, 1361, 1373, 1375];[734, 737, 747, 853, 854, 857, 870, 872, 873, 874, 881, 1239, 1326, 1328, 1330, 1331, 1333, 1334, 1335, 1336, 1338, 1342, 1344, 1347, 1349, 1360, 1361, 1373, 1375];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testToString;[734, 737, 853, 857, 1239, 1326, 1329, 1330, 1332, 1334, 1335, 1338, 1377];[734, 737, 853, 857, 1239, 1326, 1329, 1330, 1332, 1334, 1335, 1338, 1377];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testTrace;[70, 71, 734, 737, 853, 854, 857, 872, 873, 874, 1239, 1326, 1329, 1330, 1332, 1334, 1335, 1338, 1378];[70, 71, 734, 737, 853, 854, 857, 872, 873, 874, 1239, 1326, 1329, 1330, 1332, 1334, 1335, 1338, 1378];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testTranspose;[61, 734, 737, 739, 741, 747, 748, 853, 854, 855, 857, 870, 873, 876, 881, 1232, 1239, 1326, 1327, 1329, 1330, 1331, 1332, 1334, 1335, 1338, 1340, 1343, 1344, 1348, 1379, 1380, 1381, 1382, 1383];[61, 734, 737, 739, 741, 747, 748, 853, 854, 855, 857, 870, 873, 876, 881, 1232, 1239, 1326, 1327, 1329, 1330, 1331, 1332, 1334, 1335, 1338, 1340, 1343, 1344, 1348, 1379, 1380, 1381, 1382, 1383];0
org.apache.commons.math3.linear.BlockFieldMatrixTest.testWalk;[734, 737, 853, 854, 857, 1239, 1326, 1331, 1334, 1335, 1336, 1338, 1340, 1341, 1342, 1367, 1368, 1382, 1384, 1385];[734, 737, 853, 854, 857, 1239, 1326, 1331, 1334, 1335, 1336, 1338, 1340, 1341, 1342, 1367, 1368, 1382, 1384, 1385];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testAdd;[378, 383, 404, 414, 420, 422, 431, 704, 1386];[378, 383, 404, 414, 420, 422, 431, 704, 1386];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testAddFail;[70, 71, 383, 404, 414, 422, 431, 704, 1386];[70, 71, 383, 404, 414, 422, 431, 704, 1386];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testCopyFunctions;[373, 378, 383, 402, 404, 405, 414, 420, 422, 431, 676, 732, 818];[373, 378, 383, 402, 404, 405, 414, 420, 422, 431, 676, 732, 818];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testCopySubMatrix;[70, 71, 373, 383, 402, 404, 405, 414, 422, 431, 679, 732, 818, 1202, 1203, 1387];[70, 71, 373, 383, 402, 404, 405, 414, 422, 431, 679, 732, 818, 1202, 1203, 1387];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testDimensions;[383, 404, 414, 422, 431, 672];[383, 404, 414, 422, 431, 672];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testEqualsAndHashCode;[98, 372, 373, 378, 383, 402, 404, 405, 414, 422, 431, 732, 818, 1204, 1388];[98, 372, 373, 378, 383, 402, 404, 405, 414, 422, 431, 732, 818, 1204, 1388];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testExamples;[331, 349, 373, 378, 383, 384, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 431, 672, 695, 786, 819, 1389];[331, 349, 373, 378, 383, 384, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 431, 672, 695, 786, 819, 1389];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testFrobeniusNorm;[12, 414, 422, 431, 1390];[12, 414, 422, 431, 1390];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumn;[70, 71, 373, 383, 414, 422, 431, 687];[70, 71, 373, 383, 414, 422, 431, 687];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnMatrix;[70, 71, 373, 378, 383, 402, 404, 405, 414, 422, 431, 732, 818, 1391];[70, 71, 373, 378, 383, 402, 404, 405, 414, 422, 431, 732, 818, 1391];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testGetColumnVector;[70, 71, 331, 344, 347, 349, 373, 383, 414, 422, 431, 1392];[70, 71, 331, 344, 347, 349, 373, 383, 414, 422, 431, 1392];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testGetEntry;[70, 71, 373, 383, 402, 404, 405, 414, 422, 431, 818];[70, 71, 373, 383, 402, 404, 405, 414, 422, 431, 818];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRow;[70, 71, 402, 404, 414, 422, 431, 1393];[70, 71, 402, 404, 414, 422, 431, 1393];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRowMatrix;[70, 71, 373, 378, 383, 402, 404, 405, 414, 422, 431, 732, 818, 1394];[70, 71, 373, 378, 383, 402, 404, 405, 414, 422, 431, 732, 818, 1394];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testGetRowVector;[70, 71, 331, 344, 347, 349, 402, 404, 414, 422, 431, 1395];[70, 71, 331, 344, 347, 349, 402, 404, 414, 422, 431, 1395];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetColumnLarge;[373, 378, 383, 402, 404, 405, 422, 431, 687, 818, 1396];[373, 378, 383, 402, 404, 405, 422, 431, 687, 818, 1396];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetColumnMatrixLarge;[373, 378, 383, 402, 404, 405, 422, 431, 732, 818, 1391, 1397, 1398];[373, 378, 383, 402, 404, 405, 422, 431, 732, 818, 1391, 1397, 1398];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetColumnVectorLarge;[331, 344, 347, 349, 358, 373, 378, 383, 402, 404, 405, 422, 431, 818, 1392, 1396, 1399];[331, 344, 347, 349, 358, 373, 378, 383, 402, 404, 405, 422, 431, 818, 1392, 1396, 1399];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetMatrixLarge;[61, 373, 378, 383, 402, 404, 405, 420, 422, 431, 732, 818, 1203, 1397, 1400, 1401, 1402];[61, 373, 378, 383, 402, 404, 405, 420, 422, 431, 732, 818, 1203, 1397, 1400, 1401, 1402];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowLarge;[373, 378, 383, 402, 404, 405, 431, 818, 1393, 1403];[373, 378, 383, 402, 404, 405, 431, 818, 1393, 1403];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowMatrixLarge;[373, 378, 383, 402, 404, 405, 431, 732, 818, 1394, 1397, 1404];[373, 378, 383, 402, 404, 405, 431, 732, 818, 1394, 1397, 1404];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSetRowVectorLarge;[331, 344, 347, 349, 358, 373, 378, 383, 402, 404, 405, 431, 818, 1395, 1403, 1405];[331, 344, 347, 349, 358, 373, 378, 383, 402, 404, 405, 431, 818, 1395, 1403, 1405];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testGetSubMatrix;[70, 71, 373, 378, 383, 402, 404, 405, 414, 422, 431, 732, 818, 1203, 1211, 1212, 1213, 1387, 1400, 1401, 1406];[70, 71, 373, 378, 383, 402, 404, 405, 414, 422, 431, 732, 818, 1203, 1211, 1212, 1213, 1387, 1400, 1401, 1406];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testGetVectors;[70, 71, 373, 383, 402, 404, 414, 422, 431, 687, 1393];[70, 71, 373, 383, 402, 404, 414, 422, 431, 687, 1393];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testMath209;[404, 414, 422, 431, 1407];[404, 414, 422, 431, 1407];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply;[70, 71, 378, 383, 404, 414, 417, 422, 431, 805, 1389, 1408, 1409];[70, 71, 378, 383, 404, 414, 417, 422, 431, 805, 1389, 1408, 1409];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testMultiply2;[378, 383, 404, 414, 417, 422, 431, 805, 1389, 1408, 1409];[378, 383, 404, 414, 417, 422, 431, 805, 1389, 1408, 1409];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testNorm;[414, 422, 431, 1409];[414, 422, 431, 1409];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testOperate;[70, 71, 358, 414, 418, 422, 424, 431, 1407];[70, 71, 358, 414, 418, 422, 424, 431, 1407];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testOperateLarge;[373, 378, 383, 402, 404, 405, 417, 422, 431, 676, 687, 1389, 1407];[373, 378, 383, 402, 404, 405, 417, 422, 431, 676, 687, 1389, 1407];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testOperatePremultiplyLarge;[373, 378, 383, 402, 404, 405, 417, 431, 676, 1389, 1393, 1410];[373, 378, 383, 402, 404, 405, 417, 431, 676, 1389, 1393, 1410];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testPlusMinus;[70, 71, 378, 383, 404, 414, 422, 431, 704, 805, 1386, 1408, 1409, 1411];[70, 71, 378, 383, 404, 414, 422, 431, 704, 805, 1386, 1408, 1409, 1411];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiply;[70, 71, 378, 383, 404, 414, 417, 422, 431, 805, 1218, 1389, 1408, 1409];[70, 71, 378, 383, 404, 414, 417, 422, 431, 805, 1218, 1389, 1408, 1409];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testPremultiplyVector;[70, 71, 414, 422, 424, 431, 1410];[70, 71, 414, 422, 424, 431, 1410];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testScalarAdd;[378, 383, 404, 414, 422, 431, 805, 1397, 1408, 1409];[378, 383, 404, 414, 422, 431, 805, 1397, 1408, 1409];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testSerial;[373, 383, 402, 404, 405, 414, 422, 431, 732, 818];[373, 383, 402, 404, 405, 414, 422, 431, 732, 818];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumn;[70, 71, 373, 383, 404, 414, 422, 431, 687, 1396];[70, 71, 373, 383, 404, 414, 422, 431, 687, 1396];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumnMatrix;[70, 71, 373, 378, 383, 402, 404, 405, 414, 422, 431, 732, 818, 1391, 1398];[70, 71, 373, 378, 383, 402, 404, 405, 414, 422, 431, 732, 818, 1391, 1398];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testSetColumnVector;[70, 71, 331, 344, 347, 349, 358, 373, 383, 404, 414, 422, 431, 1392, 1396, 1399];[70, 71, 331, 344, 347, 349, 358, 373, 383, 404, 414, 422, 431, 1392, 1396, 1399];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRow;[70, 71, 383, 402, 404, 414, 422, 431, 1393, 1403];[70, 71, 383, 402, 404, 414, 422, 431, 1393, 1403];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRowMatrix;[70, 71, 373, 378, 383, 402, 404, 405, 414, 422, 431, 732, 818, 1394, 1404];[70, 71, 373, 378, 383, 402, 404, 405, 414, 422, 431, 732, 818, 1394, 1404];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testSetRowVector;[70, 71, 331, 344, 347, 349, 358, 378, 383, 402, 404, 414, 422, 431, 1394, 1395, 1403, 1405];[70, 71, 331, 344, 347, 349, 358, 378, 383, 402, 404, 414, 422, 431, 1394, 1395, 1403, 1405];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testSetSubMatrix;[61, 70, 71, 373, 383, 402, 404, 405, 414, 422, 431, 732, 818, 1203, 1402];[61, 70, 71, 373, 383, 402, 404, 405, 414, 422, 431, 732, 818, 1203, 1402];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testSeveralBlocks;[372, 373, 378, 383, 402, 404, 405, 417, 422, 431, 676, 704, 805, 818, 1203, 1386, 1389, 1400, 1401, 1408];[372, 373, 378, 383, 402, 404, 405, 417, 422, 431, 676, 704, 805, 818, 1203, 1386, 1389, 1400, 1401, 1408];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testToString;[373, 383, 402, 404, 405, 414, 422, 431, 528, 818, 1226, 1227];[373, 383, 402, 404, 405, 414, 422, 431, 528, 818, 1226, 1227];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testTrace;[70, 71, 373, 383, 402, 404, 405, 414, 422, 431, 818, 1228];[70, 71, 373, 383, 402, 404, 405, 414, 422, 431, 818, 1228];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testTranspose;[372, 373, 378, 383, 384, 392, 396, 402, 404, 405, 410, 414, 420, 422, 431, 672, 677, 679, 685, 695, 709, 724, 725, 786, 792, 805, 819, 1215, 1216, 1408, 1409];[372, 373, 378, 383, 384, 392, 396, 402, 404, 405, 410, 414, 420, 422, 431, 672, 677, 679, 685, 695, 709, 724, 725, 786, 792, 805, 819, 1215, 1216, 1408, 1409];0
org.apache.commons.math3.linear.BlockRealMatrixTest.testWalk;[373, 378, 383, 402, 404, 405, 431, 676, 679, 709, 818, 1203, 1211, 1212, 1387, 1412, 1413];[373, 378, 383, 402, 404, 405, 431, 676, 679, 709, 818, 1203, 1211, 1212, 1387, 1412, 1413];0
org.apache.commons.math3.linear.CholeskyDecompositionTest.testAEqualLLT;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1414, 1415];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1414, 1415];0
org.apache.commons.math3.linear.CholeskyDecompositionTest.testDimensions;[12, 61, 373, 390, 392, 396, 402, 405, 410, 425, 672, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1414, 1415];[12, 61, 373, 390, 392, 396, 402, 405, 410, 425, 672, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1414, 1415];0
org.apache.commons.math3.linear.CholeskyDecompositionTest.testLLowerTriangular;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1414, 1415];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1414, 1415];0
org.apache.commons.math3.linear.CholeskyDecompositionTest.testLTTransposed;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 679, 685, 695, 706, 709, 715, 724, 725, 792, 805, 1215, 1216, 1414, 1415];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 679, 685, 695, 706, 709, 715, 724, 725, 792, 805, 1215, 1216, 1414, 1415];0
org.apache.commons.math3.linear.CholeskyDecompositionTest.testMath274;[12, 61, 70, 71, 390, 392, 396, 410, 425, 672, 706, 715, 1416];[12, 61, 70, 71, 390, 392, 396, 410, 425, 672, 706, 715, 1416];0
org.apache.commons.math3.linear.CholeskyDecompositionTest.testMatricesValues;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 679, 685, 695, 706, 709, 715, 724, 725, 792, 805, 1215, 1216, 1414, 1415];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 679, 685, 695, 706, 709, 715, 724, 725, 792, 805, 1215, 1216, 1414, 1415];0
org.apache.commons.math3.linear.CholeskyDecompositionTest.testNonSquare;[61, 70, 71, 390, 392, 396, 410, 425, 672];[61, 70, 71, 390, 392, 396, 410, 425, 672];0
org.apache.commons.math3.linear.CholeskyDecompositionTest.testNotPositiveDefinite;[12, 61, 70, 71, 390, 392, 396, 410, 425, 672, 706, 715, 1416];[12, 61, 70, 71, 390, 392, 396, 410, 425, 672, 706, 715, 1416];0
org.apache.commons.math3.linear.CholeskyDecompositionTest.testNotSymmetricMatrixException;[61, 70, 71, 390, 392, 396, 410, 425, 672, 706, 715];[61, 70, 71, 390, 392, 396, 410, 425, 672, 706, 715];0
org.apache.commons.math3.linear.CholeskySolverTest.testDeterminant;[12, 61, 390, 392, 396, 410, 425, 672, 706, 715, 1417];[12, 61, 390, 392, 396, 410, 425, 672, 706, 715, 1417];0
org.apache.commons.math3.linear.CholeskySolverTest.testSolve;[12, 61, 329, 331, 337, 341, 373, 384, 390, 392, 396, 402, 405, 410, 424, 425, 672, 677, 695, 706, 715, 792, 797, 805, 1206, 1208, 1215, 1216, 1265, 1418];[12, 61, 329, 331, 337, 341, 373, 384, 390, 392, 396, 402, 405, 410, 424, 425, 672, 677, 695, 706, 715, 792, 797, 805, 1206, 1208, 1215, 1216, 1265, 1418];0
org.apache.commons.math3.linear.CholeskySolverTest.testSolveDimensionErrors;[12, 61, 70, 71, 331, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 706, 715, 797, 1206, 1208];[12, 61, 70, 71, 331, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 706, 715, 797, 1206, 1208];0
org.apache.commons.math3.linear.ConjugateGradientTest.testDimensionMismatchRightHandSide;[61, 70, 71, 331, 392, 396, 697, 1419, 1420, 1421, 1422];[61, 70, 71, 331, 392, 396, 697, 1419, 1420, 1421, 1422];0
org.apache.commons.math3.linear.ConjugateGradientTest.testDimensionMismatchSolution;[61, 70, 71, 331, 392, 396, 697, 1419, 1420, 1421, 1422];[61, 70, 71, 331, 392, 396, 697, 1419, 1420, 1421, 1422];0
org.apache.commons.math3.linear.ConjugateGradientTest.testEventManagement;[12, 61, 70, 71, 247, 250, 255, 329, 330, 331, 337, 349, 697, 802, 1268, 1269, 1309, 1314, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436];[12, 61, 70, 71, 247, 250, 255, 329, 330, 331, 337, 349, 697, 802, 1268, 1269, 1309, 1314, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436];0
org.apache.commons.math3.linear.ConjugateGradientTest.testMismatchedOperatorDimensions;[61, 70, 71, 331, 392, 396, 1419, 1420, 1421, 1422];[61, 70, 71, 331, 392, 396, 1419, 1420, 1421, 1422];0
org.apache.commons.math3.linear.ConjugateGradientTest.testNonPositiveDefiniteLinearOperator;[12, 61, 70, 71, 247, 250, 255, 329, 330, 331, 337, 358, 373, 392, 396, 402, 405, 418, 695, 697, 750, 777, 802, 1268, 1269, 1314, 1416, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1434];[12, 61, 70, 71, 247, 250, 255, 329, 330, 331, 337, 358, 373, 392, 396, 402, 405, 418, 695, 697, 750, 777, 802, 1268, 1269, 1314, 1416, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1434];0
org.apache.commons.math3.linear.ConjugateGradientTest.testNonPositiveDefinitePreconditioner;[12, 61, 70, 71, 247, 250, 255, 329, 330, 331, 337, 349, 358, 373, 392, 396, 402, 405, 418, 695, 697, 750, 777, 802, 1268, 1269, 1416, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1431, 1432, 1434];[12, 61, 70, 71, 247, 250, 255, 329, 330, 331, 337, 349, 358, 373, 392, 396, 402, 405, 418, 695, 697, 750, 777, 802, 1268, 1269, 1416, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1431, 1432, 1434];0
org.apache.commons.math3.linear.ConjugateGradientTest.testNonSquareOperator;[61, 70, 71, 392, 396, 697, 1419, 1420, 1421, 1422];[61, 70, 71, 392, 396, 697, 1419, 1420, 1421, 1422];0
org.apache.commons.math3.linear.ConjugateGradientTest.testNonSquarePreconditioner;[61, 70, 71, 331, 392, 396, 1419, 1420, 1421, 1422];[61, 70, 71, 331, 392, 396, 1419, 1420, 1421, 1422];0
org.apache.commons.math3.linear.ConjugateGradientTest.testPreconditionedNormOfResidual;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 424, 697, 802, 1268, 1269, 1309, 1314, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1442];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 424, 697, 802, 1268, 1269, 1309, 1314, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1442];0
org.apache.commons.math3.linear.ConjugateGradientTest.testPreconditionedResidual;[12, 61, 70, 71, 247, 250, 255, 262, 329, 330, 331, 337, 349, 424, 697, 802, 1268, 1269, 1309, 1314, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1442];[12, 61, 70, 71, 247, 250, 255, 262, 329, 330, 331, 337, 349, 424, 697, 802, 1268, 1269, 1309, 1314, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1442];0
org.apache.commons.math3.linear.ConjugateGradientTest.testPreconditionedSolution;[12, 61, 141, 247, 250, 255, 329, 330, 331, 337, 349, 424, 697, 802, 1268, 1269, 1309, 1314, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1434, 1438, 1439, 1440, 1441, 1442];[12, 61, 141, 247, 250, 255, 329, 330, 331, 337, 349, 424, 697, 802, 1268, 1269, 1309, 1314, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1434, 1438, 1439, 1440, 1441, 1442];0
org.apache.commons.math3.linear.ConjugateGradientTest.testPreconditionedSolution2;[12, 61, 247, 250, 255, 329, 330, 331, 337, 349, 358, 373, 384, 392, 396, 402, 405, 418, 424, 695, 697, 750, 802, 1268, 1269, 1309, 1314, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1434, 1438, 1439, 1440, 1441, 1442];[12, 61, 247, 250, 255, 329, 330, 331, 337, 349, 358, 373, 384, 392, 396, 402, 405, 418, 424, 695, 697, 750, 802, 1268, 1269, 1309, 1314, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1434, 1438, 1439, 1440, 1441, 1442];0
org.apache.commons.math3.linear.ConjugateGradientTest.testUnpreconditionedInPlaceSolutionWithInitialGuess;[12, 61, 141, 247, 250, 255, 329, 330, 331, 337, 349, 697, 802, 1268, 1269, 1309, 1314, 1419, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1434, 1443];[12, 61, 141, 247, 250, 255, 329, 330, 331, 337, 349, 697, 802, 1268, 1269, 1309, 1314, 1419, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1434, 1443];0
org.apache.commons.math3.linear.ConjugateGradientTest.testUnpreconditionedNormOfResidual;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 1268, 1269, 1309, 1314, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 1268, 1269, 1309, 1314, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437];0
org.apache.commons.math3.linear.ConjugateGradientTest.testUnpreconditionedResidual;[12, 61, 70, 71, 247, 250, 255, 262, 329, 330, 331, 337, 349, 697, 802, 1268, 1269, 1309, 1314, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1434, 1435, 1436];[12, 61, 70, 71, 247, 250, 255, 262, 329, 330, 331, 337, 349, 697, 802, 1268, 1269, 1309, 1314, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1434, 1435, 1436];0
org.apache.commons.math3.linear.ConjugateGradientTest.testUnpreconditionedSolution;[12, 61, 141, 247, 250, 255, 329, 330, 331, 337, 349, 697, 802, 1268, 1269, 1309, 1314, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1434];[12, 61, 141, 247, 250, 255, 329, 330, 331, 337, 349, 697, 802, 1268, 1269, 1309, 1314, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1434];0
org.apache.commons.math3.linear.ConjugateGradientTest.testUnpreconditionedSolutionWithInitialGuess;[12, 61, 141, 247, 250, 255, 329, 330, 331, 337, 349, 697, 802, 1268, 1269, 1309, 1314, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1434];[12, 61, 141, 247, 250, 255, 329, 330, 331, 337, 349, 697, 802, 1268, 1269, 1309, 1314, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1434];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testAdd;[61, 356, 369, 373, 402, 405, 423, 704, 1444];[61, 356, 369, 373, 402, 405, 423, 704, 1444];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testAddNonDiagonalEntry;[70, 71, 93, 1445, 1446];[70, 71, 93, 1445, 1446];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testAddNonDiagonalZero;[93, 356, 369, 373, 402, 405, 423, 1445, 1446];[93, 356, 369, 373, 402, 405, 423, 1445, 1446];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testAddToEntry;[61, 356, 369, 373, 402, 405, 423, 1445];[61, 356, 369, 373, 402, 405, 423, 1445];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testConstructor1;[356, 369];[356, 369];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testConstructor2;[61, 356, 369, 373, 402, 405, 423];[61, 356, 369, 373, 402, 405, 423];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testConstructor3;[61, 356, 369, 373, 402, 405, 423];[61, 356, 369, 373, 402, 405, 423];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testCopy;[61, 356, 363, 369, 373, 402, 405, 423];[61, 356, 363, 369, 373, 402, 405, 423];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testCreate;[61, 356, 369, 1447];[61, 356, 369, 1447];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testCreateError;[61, 70, 71, 1447];[61, 70, 71, 1447];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testGetData;[369, 370, 402, 1448];[369, 370, 402, 1448];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testMultiply1;[61, 356, 361, 369, 373, 402, 405, 417, 423];[61, 356, 361, 369, 373, 402, 405, 417, 423];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testMultiply2;[61, 356, 361, 369, 373, 384, 390, 392, 396, 402, 405, 417, 425, 677, 695, 720, 1448];[61, 356, 361, 369, 373, 384, 390, 392, 396, 402, 405, 417, 425, 677, 695, 720, 1448];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testMultiplyEntry;[61, 356, 369, 373, 402, 405, 423, 1449];[61, 356, 369, 373, 402, 405, 423, 1449];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testMultiplyNonDiagonalEntry;[356, 369, 373, 402, 405, 423, 1449];[356, 369, 373, 402, 405, 423, 1449];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testMultiplyNonDiagonalZero;[356, 369, 373, 402, 405, 423, 1449];[356, 369, 373, 402, 405, 423, 1449];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testNull;[61, 70, 71];[61, 70, 71];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testOperate;[61, 93, 117, 356, 361, 369, 382, 385, 390, 392, 396, 417, 425, 750, 1448];[61, 93, 117, 356, 361, 369, 382, 385, 390, 392, 396, 417, 425, 750, 1448];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testPreMultiply;[61, 93, 117, 356, 361, 369, 382, 385, 390, 392, 396, 417, 425, 682, 1448, 1450];[61, 93, 117, 356, 361, 369, 382, 385, 390, 392, 396, 417, 425, 682, 1448, 1450];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testSetEntryOutOfRange;[70, 71, 369, 370, 402];[70, 71, 369, 370, 402];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testSetNonDiagonalEntry;[70, 71, 93, 370, 1446];[70, 71, 93, 370, 1446];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testSetNonDiagonalZero;[93, 356, 369, 370, 373, 402, 405, 423, 1446];[93, 356, 369, 370, 373, 402, 405, 423, 1446];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testSetSubMatrix;[61, 93, 356, 369, 370, 373, 402, 405, 423, 1225, 1446];[61, 93, 356, 369, 370, 373, 402, 405, 423, 1225, 1446];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testSetSubMatrixError;[61, 70, 71, 93, 356, 369, 370, 373, 402, 1225, 1446];[61, 70, 71, 93, 356, 369, 370, 373, 402, 1225, 1446];0
org.apache.commons.math3.linear.DiagonalMatrixTest.testSubtract;[61, 356, 369, 373, 402, 405, 423, 805, 1451];[61, 356, 369, 373, 402, 405, 423, 805, 1451];0
org.apache.commons.math3.linear.EigenDecompositionTest.testAEqualVDVt;[12, 61, 93, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 792, 803, 805, 1215, 1216, 1221, 1224, 1452, 1453, 1454, 1455];[12, 61, 93, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 792, 803, 805, 1215, 1216, 1221, 1224, 1452, 1453, 1454, 1455];0
org.apache.commons.math3.linear.EigenDecompositionTest.testBigMatrix;[12, 61, 372, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 425, 431, 672, 676, 677, 678, 679, 683, 685, 695, 699, 703, 709, 712, 716, 717, 719, 720, 722, 723, 724, 725, 818, 1389, 1455];[12, 61, 372, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 425, 431, 672, 676, 677, 678, 679, 683, 685, 695, 699, 703, 709, 712, 716, 717, 719, 720, 722, 723, 724, 725, 818, 1389, 1455];0
org.apache.commons.math3.linear.EigenDecompositionTest.testDiagonal;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1455, 1456];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1455, 1456];0
org.apache.commons.math3.linear.EigenDecompositionTest.testDimension1;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1455, 1456];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1455, 1456];0
org.apache.commons.math3.linear.EigenDecompositionTest.testDimension2;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1455, 1456];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1455, 1456];0
org.apache.commons.math3.linear.EigenDecompositionTest.testDimension3;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1455, 1456];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1455, 1456];0
org.apache.commons.math3.linear.EigenDecompositionTest.testDimension3MultipleRoot;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1455, 1456];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1455, 1456];0
org.apache.commons.math3.linear.EigenDecompositionTest.testDimension4WithoutSplit;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1455, 1456];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1455, 1456];0
org.apache.commons.math3.linear.EigenDecompositionTest.testDimension4WithSplit;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1455, 1456];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1455, 1456];0
org.apache.commons.math3.linear.EigenDecompositionTest.testDimensions;[12, 61, 93, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 803, 1221, 1224, 1452, 1453, 1454, 1455];[12, 61, 93, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 803, 1221, 1224, 1452, 1453, 1454, 1455];0
org.apache.commons.math3.linear.EigenDecompositionTest.testDistinctEigenvalues;[12, 61, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 723, 724, 725, 1221, 1452, 1455];[12, 61, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 723, 724, 725, 1221, 1452, 1455];0
org.apache.commons.math3.linear.EigenDecompositionTest.testEigenvalues;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 723, 724, 725, 1455];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 723, 724, 725, 1455];0
org.apache.commons.math3.linear.EigenDecompositionTest.testEigenvectors;[12, 61, 329, 337, 341, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 418, 425, 672, 677, 678, 679, 683, 685, 695, 697, 698, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 750, 806, 1455, 1456];[12, 61, 329, 337, 341, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 418, 425, 672, 677, 678, 679, 683, 685, 695, 697, 698, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 750, 806, 1455, 1456];0
org.apache.commons.math3.linear.EigenDecompositionTest.testMath308;[12, 61, 329, 337, 341, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 697, 698, 709, 712, 720, 723, 724, 725, 1455];[12, 61, 329, 337, 341, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 697, 698, 709, 712, 720, 723, 724, 725, 1455];0
org.apache.commons.math3.linear.EigenDecompositionTest.testMath848;[12, 61, 93, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 507, 528, 672, 677, 678, 679, 685, 695, 703, 706, 709, 715, 720, 724, 725, 786, 792, 803, 805, 819, 1215, 1216, 1221, 1226, 1227, 1452, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470];[12, 61, 93, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 507, 528, 672, 677, 678, 679, 685, 695, 703, 706, 709, 715, 720, 724, 725, 786, 792, 803, 805, 819, 1215, 1216, 1221, 1226, 1227, 1452, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470];0
org.apache.commons.math3.linear.EigenDecompositionTest.testMathpbx02;[12, 61, 329, 330, 337, 341, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 697, 698, 709, 712, 720, 723, 724, 725, 800, 1455];[12, 61, 329, 330, 337, 341, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 697, 698, 709, 712, 720, 723, 724, 725, 800, 1455];0
org.apache.commons.math3.linear.EigenDecompositionTest.testMathpbx03;[12, 61, 329, 330, 337, 341, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 697, 698, 709, 712, 720, 723, 724, 725, 800, 1455];[12, 61, 329, 330, 337, 341, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 697, 698, 709, 712, 720, 723, 724, 725, 800, 1455];0
org.apache.commons.math3.linear.EigenDecompositionTest.testRepeatedEigenvalue;[12, 61, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 723, 724, 725, 1221, 1452, 1455];[12, 61, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 723, 724, 725, 1221, 1452, 1455];0
org.apache.commons.math3.linear.EigenDecompositionTest.testSquareRoot;[12, 61, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1221, 1224, 1452, 1453, 1455, 1471];[12, 61, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1221, 1224, 1452, 1453, 1455, 1471];0
org.apache.commons.math3.linear.EigenDecompositionTest.testSquareRootNonPositiveDefinite;[12, 61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1455, 1471];[12, 61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1455, 1471];0
org.apache.commons.math3.linear.EigenDecompositionTest.testSquareRootNonSymmetric;[12, 61, 70, 71, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 685, 695, 703, 706, 709, 715, 720, 724, 725, 803, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471];[12, 61, 70, 71, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 685, 695, 703, 706, 709, 715, 720, 724, 725, 803, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471];0
org.apache.commons.math3.linear.EigenDecompositionTest.testSymmetric;[12, 61, 93, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 792, 803, 805, 1215, 1216, 1221, 1224, 1452, 1453, 1454, 1455];[12, 61, 93, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 792, 803, 805, 1215, 1216, 1221, 1224, 1452, 1453, 1454, 1455];0
org.apache.commons.math3.linear.EigenDecompositionTest.testTridiagonal;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 683, 685, 695, 706, 709, 712, 715, 716, 720, 722, 723, 724, 725, 1455];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 683, 685, 695, 706, 709, 712, 715, 716, 720, 722, 723, 724, 725, 1455];0
org.apache.commons.math3.linear.EigenDecompositionTest.testUnsymmetric;[12, 61, 93, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 507, 528, 672, 677, 678, 679, 685, 695, 703, 706, 709, 715, 720, 724, 725, 786, 792, 803, 805, 819, 1215, 1216, 1221, 1226, 1227, 1452, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470];[12, 61, 93, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 507, 528, 672, 677, 678, 679, 685, 695, 703, 706, 709, 715, 720, 724, 725, 786, 792, 803, 805, 819, 1215, 1216, 1221, 1226, 1227, 1452, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470];0
org.apache.commons.math3.linear.EigenDecompositionTest.testVOrthogonal;[12, 61, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 786, 792, 805, 1215, 1216, 1221, 1452, 1455];[12, 61, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 786, 792, 805, 1215, 1216, 1221, 1452, 1455];0
org.apache.commons.math3.linear.EigenDecompositionTest.testZeroDivide;[12, 61, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 723, 724, 725, 1221, 1452, 1455];[12, 61, 331, 349, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 709, 712, 715, 716, 717, 719, 720, 722, 723, 724, 725, 1221, 1452, 1455];0
org.apache.commons.math3.linear.EigenSolverTest.testInvertible;[12, 61, 93, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 708, 709, 710, 712, 715, 716, 717, 719, 720, 722, 724, 725, 786, 792, 805, 1215, 1216, 1455];[12, 61, 93, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 708, 709, 710, 712, 715, 716, 717, 719, 720, 722, 724, 725, 786, 792, 805, 1215, 1216, 1455];0
org.apache.commons.math3.linear.EigenSolverTest.testNonInvertible;[12, 61, 70, 71, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 708, 709, 710, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1455];[12, 61, 70, 71, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 708, 709, 710, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1455];0
org.apache.commons.math3.linear.EigenSolverTest.testSolve;[12, 61, 93, 329, 330, 331, 337, 341, 349, 358, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 708, 709, 710, 712, 715, 716, 717, 719, 722, 724, 725, 792, 805, 1206, 1208, 1215, 1216, 1265, 1272];[12, 61, 93, 329, 330, 331, 337, 341, 349, 358, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 708, 709, 710, 712, 715, 716, 717, 719, 722, 724, 725, 792, 805, 1206, 1208, 1215, 1216, 1265, 1272];0
org.apache.commons.math3.linear.EigenSolverTest.testSolveDimensionErrors;[12, 61, 70, 71, 93, 331, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 708, 709, 710, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1206, 1208, 1455];[12, 61, 70, 71, 93, 331, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 678, 679, 683, 685, 695, 699, 703, 706, 708, 709, 710, 712, 715, 716, 717, 719, 720, 722, 724, 725, 1206, 1208, 1455];0
org.apache.commons.math3.linear.FieldLUDecompositionTest.testDimensions;[734, 737, 741, 744, 745, 747, 748, 853, 854, 855, 857, 870, 873, 876, 881, 1232, 1239, 1343, 1472, 1473, 1474, 1475, 1476];[734, 737, 741, 744, 745, 747, 748, 853, 854, 855, 857, 870, 873, 876, 881, 1232, 1239, 1343, 1472, 1473, 1474, 1475, 1476];0
org.apache.commons.math3.linear.FieldLUDecompositionTest.testLLowerTriangular;[734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 855, 857, 870, 873, 876, 881, 1232, 1239, 1343, 1474, 1475, 1476];[734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 855, 857, 870, 873, 876, 881, 1232, 1239, 1343, 1474, 1475, 1476];0
org.apache.commons.math3.linear.FieldLUDecompositionTest.testMatricesValues1;[734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 855, 857, 870, 873, 876, 881, 1232, 1239, 1343, 1472, 1473, 1474, 1475, 1476, 1477];[734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 855, 857, 870, 873, 876, 881, 1232, 1239, 1343, 1472, 1473, 1474, 1475, 1476, 1477];0
org.apache.commons.math3.linear.FieldLUDecompositionTest.testMatricesValues2;[734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 855, 857, 873, 876, 881, 1232, 1239, 1343, 1472, 1473, 1474, 1475, 1476, 1477];[734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 855, 857, 873, 876, 881, 1232, 1239, 1343, 1472, 1473, 1474, 1475, 1476, 1477];0
org.apache.commons.math3.linear.FieldLUDecompositionTest.testNonSquare;[70, 71, 741, 744, 745, 747, 748, 853, 857, 1239, 1332, 1343];[70, 71, 741, 744, 745, 747, 748, 853, 857, 1239, 1332, 1343];0
org.apache.commons.math3.linear.FieldLUDecompositionTest.testPAEqualLU;[734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 855, 857, 870, 872, 873, 874, 876, 881, 1232, 1239, 1343, 1347, 1348, 1381, 1472, 1473, 1474, 1475, 1476, 1478];[734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 855, 857, 870, 872, 873, 874, 876, 881, 1232, 1239, 1343, 1347, 1348, 1381, 1472, 1473, 1474, 1475, 1476, 1478];0
org.apache.commons.math3.linear.FieldLUDecompositionTest.testPPermutation;[734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 855, 857, 870, 873, 874, 876, 881, 1232, 1239, 1340, 1343, 1347, 1379, 1380, 1381, 1382, 1383, 1473, 1474, 1475, 1478];[734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 855, 857, 870, 873, 874, 876, 881, 1232, 1239, 1340, 1343, 1347, 1379, 1380, 1381, 1382, 1383, 1473, 1474, 1475, 1478];0
org.apache.commons.math3.linear.FieldLUDecompositionTest.testSingular;[741, 744, 745, 747, 748, 853, 854, 857, 870, 873, 876, 881, 1239, 1343, 1348, 1474, 1475];[741, 744, 745, 747, 748, 853, 854, 857, 870, 873, 876, 881, 1239, 1343, 1348, 1474, 1475];0
org.apache.commons.math3.linear.FieldLUDecompositionTest.testUUpperTriangular;[734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 870, 873, 876, 881, 1232, 1239, 1343, 1472, 1474, 1475];[734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 870, 873, 876, 881, 1232, 1239, 1343, 1472, 1474, 1475];0
org.apache.commons.math3.linear.FieldLUSolverTest.testDeterminant;[734, 737, 741, 747, 748, 853, 854, 855, 857, 869, 870, 873, 876, 881, 1232, 1239, 1343, 1474, 1475, 1479];[734, 737, 741, 747, 748, 853, 854, 855, 857, 869, 870, 873, 876, 881, 1232, 1239, 1343, 1474, 1475, 1479];0
org.apache.commons.math3.linear.FieldLUSolverTest.testSingular;[734, 737, 741, 747, 748, 853, 854, 857, 870, 873, 876, 881, 1232, 1239, 1343, 1348, 1474, 1475];[734, 737, 741, 747, 748, 853, 854, 857, 870, 873, 876, 881, 1232, 1239, 1343, 1348, 1474, 1475];0
org.apache.commons.math3.linear.FieldLUSolverTest.testSolve;[61, 734, 737, 739, 741, 747, 748, 853, 854, 857, 870, 873, 876, 881, 1232, 1239, 1241, 1243, 1343, 1348, 1474, 1475, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492];[61, 734, 737, 739, 741, 747, 748, 853, 854, 857, 870, 873, 876, 881, 1232, 1239, 1241, 1243, 1343, 1348, 1474, 1475, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492];0
org.apache.commons.math3.linear.FieldLUSolverTest.testSolveDimensionErrors;[61, 70, 71, 734, 737, 739, 741, 747, 748, 853, 854, 857, 870, 873, 876, 881, 1232, 1239, 1241, 1343, 1348, 1474, 1475, 1480, 1483];[61, 70, 71, 734, 737, 739, 741, 747, 748, 853, 854, 857, 870, 873, 876, 881, 1232, 1239, 1241, 1343, 1348, 1474, 1475, 1480, 1483];0
org.apache.commons.math3.linear.FieldLUSolverTest.testSolveSingularityErrors;[61, 70, 71, 734, 737, 739, 741, 747, 748, 853, 854, 857, 873, 876, 881, 1232, 1239, 1241, 1343, 1348, 1474, 1475, 1480, 1483];[61, 70, 71, 734, 737, 739, 741, 747, 748, 853, 854, 857, 873, 876, 881, 1232, 1239, 1241, 1343, 1348, 1474, 1475, 1480, 1483];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testAdd;[61, 741, 744, 745, 747, 748, 853, 854, 857, 872, 873, 874, 1239, 1332, 1333, 1474, 1475, 1493];[61, 741, 744, 745, 747, 748, 853, 854, 857, 872, 873, 874, 1239, 1332, 1333, 1474, 1475, 1493];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testAddFail;[70, 71, 741, 744, 745, 747, 748, 853, 857, 1239, 1332, 1333, 1493];[70, 71, 741, 744, 745, 747, 748, 853, 857, 1239, 1332, 1333, 1493];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testCopyFunctions;[61, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1239, 1332, 1337, 1474, 1475];[61, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1239, 1332, 1337, 1474, 1475];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testCopySubMatrix;[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1239, 1332, 1337, 1339, 1340, 1342, 1380, 1383];[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1239, 1332, 1337, 1339, 1340, 1342, 1380, 1383];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testDimensions;[741, 744, 745, 747, 748, 853, 857, 1239, 1332, 1343];[741, 744, 745, 747, 748, 853, 857, 1239, 1332, 1343];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testEqualsAndHashCode;[61, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 877, 1232, 1239, 1332, 1337, 1340, 1346, 1379, 1380, 1381, 1382, 1383, 1475, 1494];[61, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 877, 1232, 1239, 1332, 1337, 1340, 1346, 1379, 1380, 1381, 1382, 1383, 1475, 1494];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testExamples;[61, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 855, 857, 870, 872, 873, 874, 876, 881, 1232, 1239, 1241, 1243, 1248, 1332, 1343, 1347, 1348, 1381, 1474, 1475, 1478];[61, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 855, 857, 870, 872, 873, 874, 876, 881, 1232, 1239, 1241, 1243, 1248, 1332, 1343, 1347, 1348, 1381, 1474, 1475, 1478];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testGetColumn;[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1239, 1332, 1483];[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1239, 1332, 1483];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testGetColumnMatrix;[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1332, 1337, 1381, 1495];[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1332, 1337, 1381, 1495];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testGetColumnVector;[61, 70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1239, 1241, 1243, 1247, 1332, 1480, 1483];[61, 70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1239, 1241, 1243, 1247, 1332, 1480, 1483];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testGetEntry;[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1239, 1332];[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1239, 1332];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testGetRow;[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1239, 1332, 1496];[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1239, 1332, 1496];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testGetRowMatrix;[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1332, 1337, 1381, 1497];[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1332, 1337, 1381, 1497];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testGetRowVector;[61, 70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1239, 1241, 1243, 1247, 1332, 1496, 1498];[61, 70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1239, 1241, 1243, 1247, 1332, 1496, 1498];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testGetSubMatrix;[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1332, 1337, 1342, 1366, 1367, 1368, 1380, 1381, 1383];[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1332, 1337, 1342, 1366, 1367, 1368, 1380, 1381, 1383];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testGetVectors;[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1239, 1332, 1483, 1496];[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1239, 1332, 1483, 1496];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testMath209;[61, 741, 747, 748, 853, 854, 857, 872, 873, 874, 1239, 1332, 1499];[61, 741, 747, 748, 853, 854, 857, 872, 873, 874, 1239, 1332, 1499];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testMultiply;[61, 70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 872, 873, 874, 1239, 1332, 1347, 1500];[61, 70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 872, 873, 874, 1239, 1332, 1347, 1500];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testMultiply2;[734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 872, 873, 874, 1232, 1239, 1332, 1347, 1381, 1478];[734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 872, 873, 874, 1232, 1239, 1332, 1347, 1381, 1478];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testOperate;[61, 70, 71, 741, 744, 745, 747, 748, 853, 854, 857, 873, 874, 1236, 1239, 1244, 1332, 1371, 1499];[61, 70, 71, 741, 744, 745, 747, 748, 853, 854, 857, 873, 874, 1236, 1239, 1244, 1332, 1371, 1499];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testPlusMinus;[61, 70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 870, 872, 873, 874, 881, 1232, 1239, 1332, 1333, 1375, 1381, 1501, 1502, 1503];[61, 70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 870, 872, 873, 874, 881, 1232, 1239, 1332, 1333, 1375, 1381, 1501, 1502, 1503];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testPower;[61, 70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 855, 857, 872, 873, 874, 1232, 1239, 1332, 1343, 1347, 1381, 1475, 1478, 1494, 1504, 1505];[61, 70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 855, 857, 872, 873, 874, 1232, 1239, 1332, 1343, 1347, 1381, 1475, 1478, 1494, 1504, 1505];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testPremultiply;[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 872, 873, 874, 1232, 1239, 1332, 1347, 1376, 1381, 1478];[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 872, 873, 874, 1232, 1239, 1332, 1347, 1376, 1381, 1478];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testPremultiplyVector;[61, 70, 71, 741, 744, 745, 747, 748, 853, 854, 857, 872, 873, 874, 1236, 1239, 1332, 1506];[61, 70, 71, 741, 744, 745, 747, 748, 853, 854, 857, 872, 873, 874, 1236, 1239, 1332, 1506];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testScalarAdd;[734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 872, 873, 874, 1232, 1239, 1332, 1381, 1507];[734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 872, 873, 874, 1232, 1239, 1332, 1381, 1507];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testSerial;[734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1239, 1332, 1337];[734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1239, 1332, 1337];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testSetColumn;[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1332, 1483, 1508];[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1332, 1483, 1508];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testSetColumnMatrix;[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1332, 1337, 1381, 1495, 1509];[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1332, 1337, 1381, 1495, 1509];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testSetColumnVector;[61, 70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1241, 1243, 1247, 1332, 1480, 1483, 1510];[61, 70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1241, 1243, 1247, 1332, 1480, 1483, 1510];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testSetRow;[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1332, 1496, 1511];[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1332, 1496, 1511];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testSetRowMatrix;[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1332, 1337, 1381, 1497, 1512];[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1332, 1337, 1381, 1497, 1512];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testSetRowVector;[61, 70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1241, 1243, 1247, 1332, 1381, 1496, 1497, 1498, 1513];[61, 70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1241, 1243, 1247, 1332, 1381, 1496, 1497, 1498, 1513];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testSetSubMatrix;[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1332, 1337, 1514];[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1332, 1337, 1514];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testToString;[734, 737, 739, 741, 744, 745, 747, 748, 853, 857, 1239, 1332, 1377];[734, 737, 739, 741, 744, 745, 747, 748, 853, 857, 1239, 1332, 1377];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testTrace;[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 872, 873, 874, 1239, 1332, 1378];[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 872, 873, 874, 1239, 1332, 1378];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testTranspose;[61, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 855, 857, 870, 873, 876, 881, 1232, 1239, 1332, 1340, 1343, 1348, 1379, 1380, 1381, 1382, 1383, 1474, 1475];[61, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 855, 857, 870, 873, 876, 881, 1232, 1239, 1332, 1340, 1343, 1348, 1379, 1380, 1381, 1382, 1383, 1474, 1475];0
org.apache.commons.math3.linear.FieldMatrixImplTest.testWalk;[734, 737, 739, 741, 748, 853, 854, 857, 1239, 1340, 1342, 1367, 1368, 1380, 1382, 1383, 1515];[734, 737, 739, 741, 748, 853, 854, 857, 1239, 1340, 1342, 1367, 1368, 1380, 1382, 1383, 1515];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.tesNegativeInfinity;[331, 349, 528, 1516];[331, 349, 528, 1516];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testConstructorSingleFormat;[1517];[1517];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testDefaultFormatRealVectorImpl;[331, 332, 349, 528, 1516];[331, 332, 349, 528, 1516];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testForgottenPrefix;[332, 533, 534, 535, 1518];[332, 533, 534, 535, 1518];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testForgottenSeparator;[332, 533, 534, 535, 536, 1518];[332, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testForgottenSuffix;[332, 533, 534, 535, 536, 1518];[332, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testNan;[331, 349, 528, 1516];[331, 349, 528, 1516];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testNegativeX;[331, 349, 528, 1516];[331, 349, 528, 1516];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testNegativeY;[331, 349, 528, 1516];[331, 349, 528, 1516];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testNegativeZ;[331, 349, 528, 1516];[331, 349, 528, 1516];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testNonDefaultSetting;[331, 349, 528, 1516];[331, 349, 528, 1516];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testParseIgnoredWhitespace;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testParseManyComponents;[331, 533, 534, 535, 536, 1518];[331, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testParseNan;[331, 344, 347, 533, 534, 535, 536, 1518];[331, 344, 347, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testParseNegativeAll;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testParseNegativeInfinity;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testParseNegativeX;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testParseNegativeY;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testParseNegativeZ;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testParseNoComponents;[70, 71, 262, 533, 534, 535, 536, 1518];[70, 71, 262, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testParseNonDefaultSetting;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testParsePositiveInfinity;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testParseSimpleNoDecimals;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testParseSimpleWithDecimals;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testParseSimpleWithDecimalsTrunc;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testParseZeroX;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testPositiveInfinity;[331, 349, 528, 1516];[331, 349, 528, 1516];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testSimpleNoDecimals;[331, 349, 528, 1516];[331, 349, 528, 1516];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testSimpleWithDecimals;[331, 349, 528, 1516];[331, 349, 528, 1516];0
org.apache.commons.math3.linear.FrenchRealVectorFormatTest.testSimpleWithDecimalsTrunc;[331, 349, 528, 1516];[331, 349, 528, 1516];0
org.apache.commons.math3.linear.HessenbergTransformerTest.testAEqualPHPt;[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1460, 1464, 1465, 1519];[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1460, 1464, 1465, 1519];0
org.apache.commons.math3.linear.HessenbergTransformerTest.testHessenbergForm;[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 706, 715, 1460, 1465];[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 706, 715, 1460, 1465];0
org.apache.commons.math3.linear.HessenbergTransformerTest.testMatricesValues3;[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 695, 706, 715, 792, 805, 1215, 1216, 1460, 1464, 1465];[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 695, 706, 715, 792, 805, 1215, 1216, 1460, 1464, 1465];0
org.apache.commons.math3.linear.HessenbergTransformerTest.testMatricesValues5;[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 695, 706, 715, 792, 805, 1215, 1216, 1460, 1464, 1465];[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 695, 706, 715, 792, 805, 1215, 1216, 1460, 1464, 1465];0
org.apache.commons.math3.linear.HessenbergTransformerTest.testNonSquare;[61, 70, 71, 390, 392, 396, 410, 425, 672];[61, 70, 71, 390, 392, 396, 410, 425, 672];0
org.apache.commons.math3.linear.HessenbergTransformerTest.testPOrthogonal;[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1215, 1216, 1460, 1464];[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1215, 1216, 1460, 1464];0
org.apache.commons.math3.linear.HessenbergTransformerTest.testPTOrthogonal;[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1215, 1216, 1460, 1464, 1519];[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1215, 1216, 1460, 1464, 1519];0
org.apache.commons.math3.linear.HessenbergTransformerTest.testRandomData;[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1460, 1464, 1465, 1519];[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1460, 1464, 1465, 1519];0
org.apache.commons.math3.linear.HessenbergTransformerTest.testRandomDataNormalDistribution;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 108, 340, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 647, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1460, 1464, 1465, 1519];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 108, 340, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 647, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1460, 1464, 1465, 1519];0
org.apache.commons.math3.linear.LUDecompositionTest.testDimensions;[61, 373, 390, 392, 396, 402, 405, 410, 425, 672, 695, 706, 715, 1520, 1521, 1522];[61, 373, 390, 392, 396, 402, 405, 410, 425, 672, 695, 706, 715, 1520, 1521, 1522];0
org.apache.commons.math3.linear.LUDecompositionTest.testLLowerTriangular;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 695, 706, 715, 1520];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 695, 706, 715, 1520];0
org.apache.commons.math3.linear.LUDecompositionTest.testMatricesValues1;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 695, 706, 715, 792, 805, 1215, 1216, 1520, 1521, 1522, 1523];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 695, 706, 715, 792, 805, 1215, 1216, 1520, 1521, 1522, 1523];0
org.apache.commons.math3.linear.LUDecompositionTest.testMatricesValues2;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 695, 706, 715, 792, 805, 1215, 1216, 1520, 1521, 1522, 1523];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 695, 706, 715, 792, 805, 1215, 1216, 1520, 1521, 1522, 1523];0
org.apache.commons.math3.linear.LUDecompositionTest.testNonSquare;[61, 70, 71, 390, 392, 396, 410, 425, 672];[61, 70, 71, 390, 392, 396, 410, 425, 672];0
org.apache.commons.math3.linear.LUDecompositionTest.testPAEqualLU;[61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 695, 706, 715, 720, 786, 792, 805, 819, 1215, 1216, 1520, 1521, 1522];[61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 695, 706, 715, 720, 786, 792, 805, 819, 1215, 1216, 1520, 1521, 1522];0
org.apache.commons.math3.linear.LUDecompositionTest.testPPermutation;[61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1215, 1216, 1521];[61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1215, 1216, 1521];0
org.apache.commons.math3.linear.LUDecompositionTest.testSingular;[61, 390, 392, 396, 410, 425, 672, 706, 715, 819];[61, 390, 392, 396, 410, 425, 672, 706, 715, 819];0
org.apache.commons.math3.linear.LUDecompositionTest.testUUpperTriangular;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 695, 706, 715, 1522];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 695, 706, 715, 1522];0
org.apache.commons.math3.linear.LUSolverTest.testDeterminant;[61, 390, 392, 396, 410, 425, 672, 706, 715, 1524];[61, 390, 392, 396, 410, 425, 672, 706, 715, 1524];0
org.apache.commons.math3.linear.LUSolverTest.testSingular;[61, 390, 392, 396, 410, 425, 672, 706, 715, 819];[61, 390, 392, 396, 410, 425, 672, 706, 715, 819];0
org.apache.commons.math3.linear.LUSolverTest.testSolve;[12, 61, 329, 331, 337, 341, 349, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 695, 706, 715, 792, 805, 819, 1206, 1208, 1215, 1216, 1265];[12, 61, 329, 331, 337, 341, 349, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 695, 706, 715, 792, 805, 819, 1206, 1208, 1215, 1216, 1265];0
org.apache.commons.math3.linear.LUSolverTest.testSolveDimensionErrors;[61, 70, 71, 331, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 706, 715, 819, 1206, 1208];[61, 70, 71, 331, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 706, 715, 819, 1206, 1208];0
org.apache.commons.math3.linear.LUSolverTest.testSolveSingularityErrors;[61, 70, 71, 331, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 706, 715, 819, 1206, 1208];[61, 70, 71, 331, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 706, 715, 819, 1206, 1208];0
org.apache.commons.math3.linear.LUSolverTest.testThreshold;[61, 390, 392, 396, 410, 425, 672, 706, 715, 819];[61, 390, 392, 396, 410, 425, 672, 706, 715, 819];0
org.apache.commons.math3.linear.MatrixDimensionMismatchExceptionTest.testAccessors;[70, 71, 1525, 1526, 1527, 1528, 1529, 1530];[70, 71, 1525, 1526, 1527, 1528, 1529, 1530];0
org.apache.commons.math3.linear.MatrixUtilsTest.testBigFractionConverter;[61, 295, 298, 308, 373, 384, 392, 396, 402, 405, 677, 695, 741, 748, 792, 805, 1215, 1216, 1332, 1340, 1380, 1383, 1531];[61, 295, 298, 308, 373, 384, 392, 396, 402, 405, 677, 695, 741, 748, 792, 805, 1215, 1216, 1332, 1340, 1380, 1383, 1531];0
org.apache.commons.math3.linear.MatrixUtilsTest.testBlockInverse;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 727, 792, 805, 1203, 1213, 1225, 1532, 1533, 1534, 1535, 1536, 1537];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 727, 792, 805, 1203, 1213, 1225, 1532, 1533, 1534, 1535, 1536, 1537];0
org.apache.commons.math3.linear.MatrixUtilsTest.testCheckSymmetric1;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 678, 1538];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 678, 1538];0
org.apache.commons.math3.linear.MatrixUtilsTest.testCheckSymmetric2;[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 410, 425, 678, 1538];[61, 70, 71, 373, 384, 390, 392, 396, 402, 405, 410, 425, 678, 1538];0
org.apache.commons.math3.linear.MatrixUtilsTest.testCreateColumnFieldMatrix;[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1332, 1337, 1539, 1540];[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1332, 1337, 1539, 1540];0
org.apache.commons.math3.linear.MatrixUtilsTest.testCreateColumnRealMatrix;[70, 71, 373, 383, 384, 392, 396, 402, 404, 405, 410, 414, 422, 431, 695, 732, 818, 1541];[70, 71, 373, 383, 384, 392, 396, 402, 404, 405, 410, 414, 422, 431, 695, 732, 818, 1541];0
org.apache.commons.math3.linear.MatrixUtilsTest.testcreateFieldIdentityMatrix;[61, 70, 71, 410, 734, 737, 739, 741, 748, 786, 853, 854, 855, 857, 1239, 1504];[61, 70, 71, 410, 734, 737, 739, 741, 748, 786, 853, 854, 855, 857, 1239, 1504];0
org.apache.commons.math3.linear.MatrixUtilsTest.testcreateFieldMatrix;[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1239, 1332, 1337, 1540];[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1239, 1332, 1337, 1540];0
org.apache.commons.math3.linear.MatrixUtilsTest.testCreateIdentityMatrix;[70, 71, 373, 384, 392, 396, 402, 405, 410, 695, 786];[70, 71, 373, 384, 392, 396, 402, 405, 410, 695, 786];0
org.apache.commons.math3.linear.MatrixUtilsTest.testCreateRealMatrix;[61, 70, 71, 373, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 422, 425, 431, 732, 818];[61, 70, 71, 373, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 422, 425, 431, 732, 818];0
org.apache.commons.math3.linear.MatrixUtilsTest.testCreateRowFieldMatrix;[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1332, 1337, 1540, 1542];[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 1232, 1239, 1332, 1337, 1540, 1542];0
org.apache.commons.math3.linear.MatrixUtilsTest.testCreateRowRealMatrix;[70, 71, 373, 383, 384, 392, 396, 402, 404, 405, 410, 414, 422, 431, 695, 732, 818, 1543];[70, 71, 373, 383, 384, 392, 396, 402, 404, 405, 410, 414, 422, 431, 695, 732, 818, 1543];0
org.apache.commons.math3.linear.MatrixUtilsTest.testFractionConverter;[61, 373, 384, 392, 396, 402, 405, 677, 695, 741, 748, 792, 805, 853, 869, 1215, 1216, 1332, 1340, 1380, 1383, 1544];[61, 373, 384, 392, 396, 402, 405, 677, 695, 741, 748, 792, 805, 853, 869, 1215, 1216, 1332, 1340, 1380, 1383, 1544];0
org.apache.commons.math3.linear.MatrixUtilsTest.testIsSymmetric;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 678, 703];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 678, 703];0
org.apache.commons.math3.linear.MatrixUtilsTest.testIsSymmetricTolerance;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 678, 703];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 678, 703];0
org.apache.commons.math3.linear.MatrixUtilsTest.testSolveLowerTriangularSystem;[93, 117, 331, 349, 373, 384, 392, 396, 402, 405, 424, 802, 1545];[93, 117, 331, 349, 373, 384, 392, 396, 402, 405, 424, 802, 1545];0
org.apache.commons.math3.linear.MatrixUtilsTest.testSolveUpperTriangularSystem;[93, 117, 331, 349, 373, 384, 392, 396, 402, 405, 424, 802, 1546];[93, 117, 331, 349, 373, 384, 392, 396, 402, 405, 424, 802, 1546];0
org.apache.commons.math3.linear.OpenMapRealMatrixTest.testMath679;[70, 71];[70, 71];0
org.apache.commons.math3.linear.QRDecompositionTest.testAEqualQR;[12, 61, 355, 372, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1211, 1212, 1215, 1216, 1387, 1389, 1408, 1409, 1547, 1548, 1549];[12, 61, 355, 372, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1211, 1212, 1215, 1216, 1387, 1389, 1408, 1409, 1547, 1548, 1549];0
org.apache.commons.math3.linear.QRDecompositionTest.testDimensions;[12, 61, 355, 372, 373, 378, 383, 390, 392, 396, 402, 404, 405, 410, 414, 420, 422, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1211, 1212, 1387, 1547, 1548, 1549];[12, 61, 355, 372, 373, 378, 383, 390, 392, 396, 402, 404, 405, 410, 414, 420, 422, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1211, 1212, 1387, 1547, 1548, 1549];0
org.apache.commons.math3.linear.QRDecompositionTest.testHTrapezoidal;[12, 61, 355, 372, 373, 378, 383, 390, 392, 396, 402, 404, 405, 410, 414, 420, 422, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1211, 1212, 1387, 1550];[12, 61, 355, 372, 373, 378, 383, 390, 392, 396, 402, 404, 405, 410, 414, 420, 422, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1211, 1212, 1387, 1550];0
org.apache.commons.math3.linear.QRDecompositionTest.testMatricesValues;[12, 61, 355, 373, 384, 390, 392, 396, 402, 405, 410, 425, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 792, 805, 1215, 1216, 1547, 1548, 1549, 1550];[12, 61, 355, 373, 384, 390, 392, 396, 402, 405, 410, 425, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 792, 805, 1215, 1216, 1547, 1548, 1549, 1550];0
org.apache.commons.math3.linear.QRDecompositionTest.testNonInvertible;[12, 61, 70, 71, 355, 373, 390, 392, 396, 401, 402, 405, 410, 425, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 786];[12, 61, 70, 71, 355, 373, 390, 392, 396, 401, 402, 405, 410, 425, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 786];0
org.apache.commons.math3.linear.QRDecompositionTest.testQOrthogonal;[12, 61, 355, 372, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 425, 430, 431, 676, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1211, 1212, 1215, 1216, 1387, 1389, 1408, 1409, 1548, 1549];[12, 61, 355, 372, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 425, 430, 431, 676, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1211, 1212, 1215, 1216, 1387, 1389, 1408, 1409, 1548, 1549];0
org.apache.commons.math3.linear.QRDecompositionTest.testRUpperTriangular;[12, 61, 355, 372, 373, 378, 383, 390, 392, 396, 402, 404, 405, 410, 414, 420, 422, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1211, 1212, 1387, 1547];[12, 61, 355, 372, 373, 378, 383, 390, 392, 396, 402, 404, 405, 410, 414, 420, 422, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1211, 1212, 1387, 1547];0
org.apache.commons.math3.linear.QRSolverTest.testOverdetermined;[12, 355, 372, 373, 378, 383, 384, 392, 396, 401, 402, 404, 405, 410, 417, 420, 422, 430, 431, 679, 685, 725, 805, 1202, 1203, 1211, 1212, 1387, 1389, 1408, 1409];[12, 355, 372, 373, 378, 383, 384, 392, 396, 401, 402, 404, 405, 410, 417, 420, 422, 430, 431, 679, 685, 725, 805, 1202, 1203, 1211, 1212, 1387, 1389, 1408, 1409];0
org.apache.commons.math3.linear.QRSolverTest.testRank;[12, 61, 355, 373, 390, 392, 396, 401, 402, 405, 410, 425, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725];[12, 61, 355, 373, 390, 392, 396, 401, 402, 405, 410, 425, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725];0
org.apache.commons.math3.linear.QRSolverTest.testSolve;[12, 61, 329, 331, 337, 341, 355, 373, 378, 383, 384, 390, 392, 396, 401, 402, 404, 405, 410, 422, 424, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 805, 1202, 1203, 1206, 1208, 1215, 1216, 1265, 1408, 1409, 1418];[12, 61, 329, 331, 337, 341, 355, 373, 378, 383, 384, 390, 392, 396, 401, 402, 404, 405, 410, 422, 424, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 805, 1202, 1203, 1206, 1208, 1215, 1216, 1265, 1408, 1409, 1418];0
org.apache.commons.math3.linear.QRSolverTest.testSolveDimensionErrors;[12, 61, 70, 71, 331, 355, 373, 384, 390, 392, 396, 401, 402, 405, 410, 425, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1206, 1208];[12, 61, 70, 71, 331, 355, 373, 384, 390, 392, 396, 401, 402, 405, 410, 425, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1206, 1208];0
org.apache.commons.math3.linear.QRSolverTest.testSolveRankErrors;[12, 61, 70, 71, 331, 355, 373, 384, 390, 392, 396, 401, 402, 405, 410, 425, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1206, 1208];[12, 61, 70, 71, 331, 355, 373, 384, 390, 392, 396, 401, 402, 405, 410, 425, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1206, 1208];0
org.apache.commons.math3.linear.QRSolverTest.testUnderdetermined;[12, 355, 372, 373, 378, 383, 401, 402, 404, 410, 417, 420, 422, 430, 431, 679, 805, 1202, 1203, 1211, 1212, 1387, 1389, 1400, 1401, 1408, 1409];[12, 355, 372, 373, 378, 383, 401, 402, 404, 410, 417, 420, 422, 430, 431, 679, 805, 1202, 1203, 1211, 1212, 1387, 1389, 1400, 1401, 1408, 1409];0
org.apache.commons.math3.linear.RealMatrixFormatTest.tesNegativeInfinity;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testConstructorSingleFormat;[438];[438];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testDefaultFormat;[61, 332, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];[61, 332, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testForgottenPrefix;[533, 534, 535, 1551];[533, 534, 535, 1551];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testForgottenSeparator;[533, 534, 535, 536, 1551];[533, 534, 535, 536, 1551];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testForgottenSuffix;[533, 534, 535, 536, 1551];[533, 534, 535, 536, 1551];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testNan;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testNegativeComponent;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testNegativeComponent2;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testNegativeSecondRow;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testNonDefaultSetting;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testParseIgnoredWhitespace;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 732, 1551];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 732, 1551];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testParseManyComponents;[61, 390, 392, 410, 425, 533, 534, 535, 536, 1551];[61, 390, 392, 410, 425, 533, 534, 535, 536, 1551];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testParseNan;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 1551];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 1551];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testParseNegativeAll;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 732, 1551];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 732, 1551];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testParseNegativeComponent;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 732, 1551];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 732, 1551];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testParseNegativeInfinity;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 732, 1551];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 732, 1551];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testParseNoComponents;[70, 71, 262, 533, 534, 535, 536, 1551];[70, 71, 262, 533, 534, 535, 536, 1551];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testParseNonDefaultSetting;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 732, 1551];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 732, 1551];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testParsePositiveInfinity;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 732, 1551];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 732, 1551];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testParseSimpleNoDecimals;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 732, 1551];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 732, 1551];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testParseSimpleWithDecimals;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 732, 1551];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 732, 1551];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testParseSimpleWithDecimalsTrunc;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 732, 1551];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 732, 1551];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testParseZeroComponent;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 732, 1551];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 533, 534, 535, 536, 732, 1551];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testPositiveInfinity;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testSimpleNoDecimals;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testSimpleWithDecimals;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];0
org.apache.commons.math3.linear.RealMatrixFormatTest.testSimpleWithDecimalsTrunc;[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];[61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 528, 1226];0
org.apache.commons.math3.linear.RealVectorFormatTest.tesNegativeInfinity;[331, 349, 528, 1516];[331, 349, 528, 1516];0
org.apache.commons.math3.linear.RealVectorFormatTest.testConstructorSingleFormat;[1517];[1517];0
org.apache.commons.math3.linear.RealVectorFormatTest.testDefaultFormatRealVectorImpl;[331, 332, 349, 528, 1516];[331, 332, 349, 528, 1516];0
org.apache.commons.math3.linear.RealVectorFormatTest.testForgottenPrefix;[332, 533, 534, 535, 1518];[332, 533, 534, 535, 1518];0
org.apache.commons.math3.linear.RealVectorFormatTest.testForgottenSeparator;[332, 533, 534, 535, 536, 1518];[332, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.RealVectorFormatTest.testForgottenSuffix;[332, 533, 534, 535, 536, 1518];[332, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.RealVectorFormatTest.testNan;[331, 349, 528, 1516];[331, 349, 528, 1516];0
org.apache.commons.math3.linear.RealVectorFormatTest.testNegativeX;[331, 349, 528, 1516];[331, 349, 528, 1516];0
org.apache.commons.math3.linear.RealVectorFormatTest.testNegativeY;[331, 349, 528, 1516];[331, 349, 528, 1516];0
org.apache.commons.math3.linear.RealVectorFormatTest.testNegativeZ;[331, 349, 528, 1516];[331, 349, 528, 1516];0
org.apache.commons.math3.linear.RealVectorFormatTest.testNonDefaultSetting;[331, 349, 528, 1516];[331, 349, 528, 1516];0
org.apache.commons.math3.linear.RealVectorFormatTest.testParseIgnoredWhitespace;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.RealVectorFormatTest.testParseManyComponents;[331, 533, 534, 535, 536, 1518];[331, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.RealVectorFormatTest.testParseNan;[331, 344, 347, 533, 534, 535, 536, 1518];[331, 344, 347, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.RealVectorFormatTest.testParseNegativeAll;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.RealVectorFormatTest.testParseNegativeInfinity;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.RealVectorFormatTest.testParseNegativeX;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.RealVectorFormatTest.testParseNegativeY;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.RealVectorFormatTest.testParseNegativeZ;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.RealVectorFormatTest.testParseNoComponents;[70, 71, 262, 533, 534, 535, 536, 1518];[70, 71, 262, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.RealVectorFormatTest.testParseNonDefaultSetting;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.RealVectorFormatTest.testParsePositiveInfinity;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.RealVectorFormatTest.testParseSimpleNoDecimals;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.RealVectorFormatTest.testParseSimpleWithDecimals;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.RealVectorFormatTest.testParseSimpleWithDecimalsTrunc;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.RealVectorFormatTest.testParseZeroX;[331, 344, 347, 349, 533, 534, 535, 536, 1518];[331, 344, 347, 349, 533, 534, 535, 536, 1518];0
org.apache.commons.math3.linear.RealVectorFormatTest.testPositiveInfinity;[331, 349, 528, 1516];[331, 349, 528, 1516];0
org.apache.commons.math3.linear.RealVectorFormatTest.testSimpleNoDecimals;[331, 349, 528, 1516];[331, 349, 528, 1516];0
org.apache.commons.math3.linear.RealVectorFormatTest.testSimpleWithDecimals;[331, 349, 528, 1516];[331, 349, 528, 1516];0
org.apache.commons.math3.linear.RealVectorFormatTest.testSimpleWithDecimalsTrunc;[331, 349, 528, 1516];[331, 349, 528, 1516];0
org.apache.commons.math3.linear.RealVectorTest.testAddDimensionMismatch;[70, 71, 1311, 1552];[70, 71, 1311, 1552];0
org.apache.commons.math3.linear.RealVectorTest.testAddMixedTypes;[1264, 1265, 1311, 1552];[1264, 1265, 1311, 1552];0
org.apache.commons.math3.linear.RealVectorTest.testAddSameType;[1264, 1265, 1311, 1552];[1264, 1265, 1311, 1552];0
org.apache.commons.math3.linear.RealVectorTest.testAddToEntry;[1265, 1553];[1265, 1553];0
org.apache.commons.math3.linear.RealVectorTest.testAddToEntryInvalidIndex1;[70, 71, 1265, 1553];[70, 71, 1265, 1553];0
org.apache.commons.math3.linear.RealVectorTest.testAddToEntryInvalidIndex2;[70, 71, 1265, 1553];[70, 71, 1265, 1553];0
org.apache.commons.math3.linear.RealVectorTest.testCombineDimensionMismatchMixedTypes;[70, 71, 1311, 1554, 1555];[70, 71, 1311, 1554, 1555];0
org.apache.commons.math3.linear.RealVectorTest.testCombineDimensionMismatchSameType;[70, 71, 1311, 1554, 1555];[70, 71, 1311, 1554, 1555];0
org.apache.commons.math3.linear.RealVectorTest.testCombineMixedTypes;[1265, 1311, 1554, 1555];[1265, 1311, 1554, 1555];0
org.apache.commons.math3.linear.RealVectorTest.testCombineSameType;[1265, 1311, 1554, 1555];[1265, 1311, 1554, 1555];0
org.apache.commons.math3.linear.RealVectorTest.testCombineToSelfDimensionMismatchMixedTypes;[70, 71, 1311, 1555];[70, 71, 1311, 1555];0
org.apache.commons.math3.linear.RealVectorTest.testCombineToSelfDimensionMismatchSameType;[70, 71, 1311, 1555];[70, 71, 1311, 1555];0
org.apache.commons.math3.linear.RealVectorTest.testCombineToSelfMixedTypes;[1265, 1311, 1555];[1265, 1311, 1555];0
org.apache.commons.math3.linear.RealVectorTest.testCombineToSelfSameType;[1265, 1311, 1555];[1265, 1311, 1555];0
org.apache.commons.math3.linear.RealVectorTest.testCopy;[1265];[1265];0
org.apache.commons.math3.linear.RealVectorTest.testCosineDimensionMismatch;[12, 70, 71, 1264, 1265, 1270, 1271, 1272, 1311];[12, 70, 71, 1264, 1265, 1270, 1271, 1272, 1311];0
org.apache.commons.math3.linear.RealVectorTest.testCosineLeftNullVector;[12, 70, 71, 1264, 1265, 1270, 1271];[12, 70, 71, 1264, 1265, 1270, 1271];0
org.apache.commons.math3.linear.RealVectorTest.testCosineMixedTypes;[12, 1264, 1265, 1270, 1271, 1272, 1311];[12, 1264, 1265, 1270, 1271, 1272, 1311];0
org.apache.commons.math3.linear.RealVectorTest.testCosineRightNullVector;[12, 70, 71, 1264, 1265, 1270, 1271];[12, 70, 71, 1264, 1265, 1270, 1271];0
org.apache.commons.math3.linear.RealVectorTest.testCosineSameType;[12, 1264, 1265, 1270, 1271, 1272, 1311];[12, 1264, 1265, 1270, 1271, 1272, 1311];0
org.apache.commons.math3.linear.RealVectorTest.testDotProductDimensionMismatchMixedTypes;[70, 71, 1272, 1311];[70, 71, 1272, 1311];0
org.apache.commons.math3.linear.RealVectorTest.testDotProductDimensionMismatchSameType;[70, 71, 1272, 1311];[70, 71, 1272, 1311];0
org.apache.commons.math3.linear.RealVectorTest.testDotProductMixedTypes;[1265, 1272, 1311];[1265, 1272, 1311];0
org.apache.commons.math3.linear.RealVectorTest.testDotProductSameType;[1265, 1272, 1311];[1265, 1272, 1311];0
org.apache.commons.math3.linear.RealVectorTest.testGetDistanceDimensionMismatch;[70, 71, 1311, 1556];[70, 71, 1311, 1556];0
org.apache.commons.math3.linear.RealVectorTest.testGetDistanceMixedTypes;[12, 1264, 1265, 1311, 1556];[12, 1264, 1265, 1311, 1556];0
org.apache.commons.math3.linear.RealVectorTest.testGetDistanceSameType;[12, 1264, 1265, 1311, 1556];[12, 1264, 1265, 1311, 1556];0
org.apache.commons.math3.linear.RealVectorTest.testGetEntry;[1265];[1265];0
org.apache.commons.math3.linear.RealVectorTest.testGetEntryInvalidIndex1;[70, 71, 1265];[70, 71, 1265];0
org.apache.commons.math3.linear.RealVectorTest.testGetEntryInvalidIndex2;[70, 71, 1265];[70, 71, 1265];0
org.apache.commons.math3.linear.RealVectorTest.testGetL1DistanceDimensionMismatch;[70, 71, 1311, 1557];[70, 71, 1311, 1557];0
org.apache.commons.math3.linear.RealVectorTest.testGetL1DistanceMixedTypes;[1264, 1265, 1311, 1557];[1264, 1265, 1311, 1557];0
org.apache.commons.math3.linear.RealVectorTest.testGetL1DistanceSameType;[1264, 1265, 1311, 1557];[1264, 1265, 1311, 1557];0
org.apache.commons.math3.linear.RealVectorTest.testGetLInfDistanceDimensionMismatch;[70, 71, 1311, 1558];[70, 71, 1311, 1558];0
org.apache.commons.math3.linear.RealVectorTest.testGetLInfDistanceMixedTypes;[1264, 1265, 1311, 1558];[1264, 1265, 1311, 1558];0
org.apache.commons.math3.linear.RealVectorTest.testGetLInfDistanceSameType;[1264, 1265, 1311, 1558];[1264, 1265, 1311, 1558];0
org.apache.commons.math3.linear.RealVectorTest.testGetNorm;[12, 1264, 1265, 1271];[12, 1264, 1265, 1271];0
org.apache.commons.math3.linear.RealVectorTest.testIterator;[70, 71, 1264, 1265];[70, 71, 1264, 1265];0
org.apache.commons.math3.linear.RealVectorTest.testMap;[9, 12, 13, 18, 26, 46, 53, 76, 77, 78, 79, 80, 81, 83, 85, 86, 112, 115, 122, 131, 134, 136, 147, 202, 206, 216, 217, 222, 223, 292, 1264, 1265, 1280, 1281, 1282, 1283, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1312, 1559];[9, 12, 13, 18, 26, 46, 53, 76, 77, 78, 79, 80, 81, 83, 85, 86, 112, 115, 122, 131, 134, 136, 147, 202, 206, 216, 217, 222, 223, 292, 1264, 1265, 1280, 1281, 1282, 1283, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1312, 1559];0
org.apache.commons.math3.linear.RealVectorTest.testMapAdd;[211, 219, 1264, 1265, 1299, 1312, 1560];[211, 219, 1264, 1265, 1299, 1312, 1560];0
org.apache.commons.math3.linear.RealVectorTest.testMapAddToSelf;[211, 219, 1264, 1265, 1312, 1560];[211, 219, 1264, 1265, 1312, 1560];0
org.apache.commons.math3.linear.RealVectorTest.testMapDivide;[219, 225, 1264, 1265, 1301, 1312, 1561];[219, 225, 1264, 1265, 1301, 1312, 1561];0
org.apache.commons.math3.linear.RealVectorTest.testMapDivideToSelf;[219, 225, 1264, 1265, 1312, 1561];[219, 225, 1264, 1265, 1312, 1561];0
org.apache.commons.math3.linear.RealVectorTest.testMapMultiply;[210, 219, 807, 1264, 1265, 1312, 1313];[210, 219, 807, 1264, 1265, 1312, 1313];0
org.apache.commons.math3.linear.RealVectorTest.testMapMultiplyToSelf;[210, 219, 1264, 1265, 1312, 1313];[210, 219, 1264, 1265, 1312, 1313];0
org.apache.commons.math3.linear.RealVectorTest.testMapSubtract;[211, 219, 1264, 1265, 1302, 1312, 1560, 1562];[211, 219, 1264, 1265, 1302, 1312, 1560, 1562];0
org.apache.commons.math3.linear.RealVectorTest.testMapSubtractToSelf;[211, 219, 1264, 1265, 1312, 1560, 1562];[211, 219, 1264, 1265, 1312, 1560, 1562];0
org.apache.commons.math3.linear.RealVectorTest.testMapToSelf;[9, 12, 13, 18, 26, 46, 53, 76, 77, 78, 79, 80, 81, 83, 85, 86, 112, 115, 122, 131, 134, 136, 147, 202, 206, 216, 217, 222, 223, 292, 1264, 1265, 1280, 1281, 1282, 1283, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1312];[9, 12, 13, 18, 26, 46, 53, 76, 77, 78, 79, 80, 81, 83, 85, 86, 112, 115, 122, 131, 134, 136, 147, 202, 206, 216, 217, 222, 223, 292, 1264, 1265, 1280, 1281, 1282, 1283, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1312];0
org.apache.commons.math3.linear.RealVectorTest.testMinMax;[1264, 1265, 1304, 1305, 1306, 1307];[1264, 1265, 1304, 1305, 1306, 1307];0
org.apache.commons.math3.linear.RealVectorTest.testOuterProductMixedTypes;[373, 384, 392, 396, 402, 405, 695, 1265, 1563];[373, 384, 392, 396, 402, 405, 695, 1265, 1563];0
org.apache.commons.math3.linear.RealVectorTest.testOuterProductSameType;[373, 384, 392, 396, 402, 405, 695, 1265, 1563];[373, 384, 392, 396, 402, 405, 695, 1265, 1563];0
org.apache.commons.math3.linear.RealVectorTest.testProjectionDimensionMismatch;[70, 71, 1264, 1265, 1272, 1310, 1311, 1564];[70, 71, 1264, 1265, 1272, 1310, 1311, 1564];0
org.apache.commons.math3.linear.RealVectorTest.testProjectionMixedTypes;[210, 219, 807, 1264, 1265, 1272, 1310, 1311, 1312, 1313];[210, 219, 807, 1264, 1265, 1272, 1310, 1311, 1312, 1313];0
org.apache.commons.math3.linear.RealVectorTest.testProjectionNullVector;[70, 71, 1265, 1272, 1310, 1311];[70, 71, 1265, 1272, 1310, 1311];0
org.apache.commons.math3.linear.RealVectorTest.testProjectionSameType;[210, 219, 807, 1264, 1265, 1272, 1310, 1311, 1312, 1313];[210, 219, 807, 1264, 1265, 1272, 1310, 1311, 1312, 1313];0
org.apache.commons.math3.linear.RealVectorTest.testSet;[1264, 1265, 1564];[1264, 1265, 1564];0
org.apache.commons.math3.linear.RealVectorTest.testSetEntry;[1265];[1265];0
org.apache.commons.math3.linear.RealVectorTest.testSetEntryInvalidIndex1;[70, 71, 1265];[70, 71, 1265];0
org.apache.commons.math3.linear.RealVectorTest.testSetEntryInvalidIndex2;[70, 71, 1265];[70, 71, 1265];0
org.apache.commons.math3.linear.RealVectorTest.testSparseIterator;[1265, 1565];[1265, 1565];0
org.apache.commons.math3.linear.RealVectorTest.testSubtractDimensionMismatch;[70, 71, 1311, 1566];[70, 71, 1311, 1566];0
org.apache.commons.math3.linear.RealVectorTest.testSubtractMixedTypes;[210, 219, 807, 1264, 1265, 1311, 1312, 1313, 1566];[210, 219, 807, 1264, 1265, 1311, 1312, 1313, 1566];0
org.apache.commons.math3.linear.RealVectorTest.testSubtractSameType;[210, 219, 807, 1264, 1265, 1311, 1312, 1313, 1566];[210, 219, 807, 1264, 1265, 1311, 1312, 1313, 1566];0
org.apache.commons.math3.linear.RealVectorTest.testToArray;[1265, 1418];[1265, 1418];0
org.apache.commons.math3.linear.RealVectorTest.testUnitize;[12, 219, 225, 1264, 1265, 1271, 1312, 1315, 1561];[12, 219, 225, 1264, 1265, 1271, 1312, 1315, 1561];0
org.apache.commons.math3.linear.RealVectorTest.testUnitizeNullVector;[12, 70, 71, 1264, 1265, 1271, 1315];[12, 70, 71, 1264, 1265, 1271, 1315];0
org.apache.commons.math3.linear.RealVectorTest.testUnitVector;[12, 219, 225, 1264, 1265, 1271, 1301, 1312, 1316, 1561];[12, 219, 225, 1264, 1265, 1271, 1301, 1312, 1316, 1561];0
org.apache.commons.math3.linear.RealVectorTest.testUnitVectorNullVector;[12, 70, 71, 1264, 1265, 1271, 1316];[12, 70, 71, 1264, 1265, 1271, 1316];0
org.apache.commons.math3.linear.RealVectorTest.testWalkInDefaultOrderChangingVisitor1;[1265, 1567];[1265, 1567];0
org.apache.commons.math3.linear.RealVectorTest.testWalkInDefaultOrderChangingVisitor2;[70, 71, 1318, 1567];[70, 71, 1318, 1567];0
org.apache.commons.math3.linear.RealVectorTest.testWalkInDefaultOrderChangingVisitor3;[1265, 1318, 1567];[1265, 1318, 1567];0
org.apache.commons.math3.linear.RealVectorTest.testWalkInDefaultOrderPreservingVisitor1;[1265, 1567];[1265, 1567];0
org.apache.commons.math3.linear.RealVectorTest.testWalkInDefaultOrderPreservingVisitor2;[70, 71, 1318, 1567];[70, 71, 1318, 1567];0
org.apache.commons.math3.linear.RealVectorTest.testWalkInDefaultOrderPreservingVisitor3;[1265, 1318, 1567];[1265, 1318, 1567];0
org.apache.commons.math3.linear.RealVectorTest.testWalkInOptimizedOrderChangingVisitor1;[1265, 1567, 1568];[1265, 1567, 1568];0
org.apache.commons.math3.linear.RealVectorTest.testWalkInOptimizedOrderChangingVisitor2;[70, 71, 1318, 1567, 1568];[70, 71, 1318, 1567, 1568];0
org.apache.commons.math3.linear.RealVectorTest.testWalkInOptimizedOrderChangingVisitor3;[1265, 1318, 1567, 1568];[1265, 1318, 1567, 1568];0
org.apache.commons.math3.linear.RealVectorTest.testWalkInOptimizedOrderPreservingVisitor1;[1265, 1567, 1568];[1265, 1567, 1568];0
org.apache.commons.math3.linear.RealVectorTest.testWalkInOptimizedOrderPreservingVisitor2;[70, 71, 1318, 1567, 1568];[70, 71, 1318, 1567, 1568];0
org.apache.commons.math3.linear.RealVectorTest.testWalkInOptimizedOrderPreservingVisitor3;[1265, 1318, 1567, 1568];[1265, 1318, 1567, 1568];0
org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testDecomposition3x3;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1569];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1569];0
org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testFullRank;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1569];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1569];0
org.apache.commons.math3.linear.RectangularCholeskyDecompositionTest.testMath789;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1569, 1570];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1569, 1570];0
org.apache.commons.math3.linear.RRQRDecompositionTest.testAPEqualQR;[12, 61, 355, 372, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 425, 430, 431, 676, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1211, 1212, 1215, 1216, 1387, 1389, 1408, 1409, 1547, 1548, 1549, 1571, 1572, 1573];[12, 61, 355, 372, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 425, 430, 431, 676, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1211, 1212, 1215, 1216, 1387, 1389, 1408, 1409, 1547, 1548, 1549, 1571, 1572, 1573];0
org.apache.commons.math3.linear.RRQRDecompositionTest.testDimensions;[12, 61, 355, 372, 373, 378, 383, 390, 392, 396, 402, 404, 405, 410, 414, 420, 422, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1211, 1212, 1387, 1547, 1548, 1549, 1571, 1573];[12, 61, 355, 372, 373, 378, 383, 390, 392, 396, 402, 404, 405, 410, 414, 420, 422, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1211, 1212, 1387, 1547, 1548, 1549, 1571, 1573];0
org.apache.commons.math3.linear.RRQRDecompositionTest.testHTrapezoidal;[12, 61, 355, 372, 373, 378, 383, 390, 392, 396, 402, 404, 405, 410, 414, 420, 422, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1211, 1212, 1387, 1550, 1571, 1573];[12, 61, 355, 372, 373, 378, 383, 390, 392, 396, 402, 404, 405, 410, 414, 420, 422, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1211, 1212, 1387, 1550, 1571, 1573];0
org.apache.commons.math3.linear.RRQRDecompositionTest.testNonInvertible;[12, 61, 70, 71, 355, 373, 390, 392, 396, 401, 402, 405, 410, 425, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 786, 1571, 1572, 1573];[12, 61, 70, 71, 355, 373, 390, 392, 396, 401, 402, 405, 410, 425, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 786, 1571, 1572, 1573];0
org.apache.commons.math3.linear.RRQRDecompositionTest.testQOrthogonal;[12, 61, 355, 372, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 425, 430, 431, 676, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1211, 1212, 1215, 1216, 1387, 1389, 1408, 1409, 1548, 1549, 1571, 1573];[12, 61, 355, 372, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 420, 422, 425, 430, 431, 676, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1211, 1212, 1215, 1216, 1387, 1389, 1408, 1409, 1548, 1549, 1571, 1573];0
org.apache.commons.math3.linear.RRQRDecompositionTest.testRank;[12, 61, 355, 373, 384, 390, 392, 396, 402, 405, 410, 425, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1203, 1205, 1213, 1547, 1571, 1573, 1574];[12, 61, 355, 373, 384, 390, 392, 396, 402, 405, 410, 425, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1203, 1205, 1213, 1547, 1571, 1573, 1574];0
org.apache.commons.math3.linear.RRQRDecompositionTest.testRUpperTriangular;[12, 61, 355, 372, 373, 378, 383, 390, 392, 396, 402, 404, 405, 410, 414, 420, 422, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1211, 1212, 1387, 1547, 1571, 1573];[12, 61, 355, 372, 373, 378, 383, 390, 392, 396, 402, 404, 405, 410, 414, 420, 422, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1211, 1212, 1387, 1547, 1571, 1573];0
org.apache.commons.math3.linear.RRQRSolverTest.testOverdetermined;[12, 355, 372, 373, 378, 383, 384, 392, 396, 401, 402, 404, 405, 410, 417, 420, 422, 430, 431, 676, 679, 685, 725, 805, 1202, 1203, 1211, 1212, 1387, 1389, 1408, 1409, 1571, 1572, 1573];[12, 355, 372, 373, 378, 383, 384, 392, 396, 401, 402, 404, 405, 410, 417, 420, 422, 430, 431, 676, 679, 685, 725, 805, 1202, 1203, 1211, 1212, 1387, 1389, 1408, 1409, 1571, 1572, 1573];0
org.apache.commons.math3.linear.RRQRSolverTest.testRank;[12, 61, 355, 373, 390, 392, 396, 401, 402, 405, 410, 425, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1571, 1572, 1573];[12, 61, 355, 373, 390, 392, 396, 401, 402, 405, 410, 425, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1571, 1572, 1573];0
org.apache.commons.math3.linear.RRQRSolverTest.testSolve;[12, 61, 329, 331, 337, 341, 355, 358, 373, 378, 383, 384, 390, 392, 396, 401, 402, 404, 405, 410, 417, 418, 422, 424, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 750, 792, 805, 818, 1202, 1203, 1206, 1208, 1215, 1216, 1265, 1418, 1571, 1572, 1573];[12, 61, 329, 331, 337, 341, 355, 358, 373, 378, 383, 384, 390, 392, 396, 401, 402, 404, 405, 410, 417, 418, 422, 424, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 750, 792, 805, 818, 1202, 1203, 1206, 1208, 1215, 1216, 1265, 1418, 1571, 1572, 1573];0
org.apache.commons.math3.linear.RRQRSolverTest.testSolveDimensionErrors;[12, 61, 70, 71, 331, 355, 373, 384, 390, 392, 396, 401, 402, 405, 410, 425, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1206, 1208, 1571, 1572, 1573];[12, 61, 70, 71, 331, 355, 373, 384, 390, 392, 396, 401, 402, 405, 410, 425, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1206, 1208, 1571, 1572, 1573];0
org.apache.commons.math3.linear.RRQRSolverTest.testSolveRankErrors;[12, 61, 70, 71, 331, 355, 373, 384, 390, 392, 396, 401, 402, 405, 410, 425, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1206, 1208, 1571, 1572, 1573];[12, 61, 70, 71, 331, 355, 373, 384, 390, 392, 396, 401, 402, 405, 410, 425, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1206, 1208, 1571, 1572, 1573];0
org.apache.commons.math3.linear.RRQRSolverTest.testUnderdetermined;[12, 355, 372, 373, 378, 383, 401, 402, 404, 405, 410, 417, 420, 422, 430, 431, 676, 679, 805, 1202, 1203, 1211, 1212, 1387, 1389, 1400, 1401, 1408, 1409, 1571, 1572, 1573];[12, 355, 372, 373, 378, 383, 401, 402, 404, 405, 410, 417, 420, 422, 430, 431, 676, 679, 805, 1202, 1203, 1211, 1212, 1387, 1389, 1400, 1401, 1408, 1409, 1571, 1572, 1573];0
org.apache.commons.math3.linear.SchurTransformerTest.testAEqualPTPt;[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1457, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1469, 1470, 1575];[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1457, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1469, 1470, 1575];0
org.apache.commons.math3.linear.SchurTransformerTest.testMath848;[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1457, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1469, 1470, 1575];[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1457, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1469, 1470, 1575];0
org.apache.commons.math3.linear.SchurTransformerTest.testNonSquare;[61, 70, 71, 390, 392, 396, 410, 425, 672];[61, 70, 71, 390, 392, 396, 410, 425, 672];0
org.apache.commons.math3.linear.SchurTransformerTest.testPOrthogonal;[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1215, 1216, 1457, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1469];[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1215, 1216, 1457, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1469];0
org.apache.commons.math3.linear.SchurTransformerTest.testPTOrthogonal;[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1215, 1216, 1457, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1469, 1575];[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1215, 1216, 1457, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1469, 1575];0
org.apache.commons.math3.linear.SchurTransformerTest.testRandomData;[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1457, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1469, 1470, 1575];[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1457, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1469, 1470, 1575];0
org.apache.commons.math3.linear.SchurTransformerTest.testRandomDataNormalDistribution;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 108, 340, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 647, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1457, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1469, 1470, 1575];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 108, 340, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 647, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1457, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1469, 1470, 1575];0
org.apache.commons.math3.linear.SchurTransformerTest.testSchurForm;[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 706, 715, 1457, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1470];[12, 61, 93, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 706, 715, 1457, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1468, 1470];0
org.apache.commons.math3.linear.SingularValueDecompositionTest.testAEqualUSVt;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1455, 1532, 1533, 1576];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1455, 1532, 1533, 1576];0
org.apache.commons.math3.linear.SingularValueDecompositionTest.testConditionNumber;[12, 61, 390, 392, 396, 410, 425, 706, 715, 1577];[12, 61, 390, 392, 396, 410, 425, 706, 715, 1577];0
org.apache.commons.math3.linear.SingularValueDecompositionTest.testDimensions;[12, 61, 373, 390, 392, 396, 402, 405, 410, 425, 695, 706, 715, 1455, 1532, 1533, 1576];[12, 61, 373, 390, 392, 396, 402, 405, 410, 425, 695, 706, 715, 1455, 1532, 1533, 1576];0
org.apache.commons.math3.linear.SingularValueDecompositionTest.testHadamard;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1203, 1215, 1216, 1532, 1578, 1579, 1580];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1203, 1215, 1216, 1532, 1578, 1579, 1580];0
org.apache.commons.math3.linear.SingularValueDecompositionTest.testInverseConditionNumber;[12, 61, 390, 392, 396, 410, 425, 706, 715, 1581];[12, 61, 390, 392, 396, 410, 425, 706, 715, 1581];0
org.apache.commons.math3.linear.SingularValueDecompositionTest.testIssue947;[12, 61, 390, 392, 396, 410, 425, 706, 715, 1578];[12, 61, 390, 392, 396, 410, 425, 706, 715, 1578];0
org.apache.commons.math3.linear.SingularValueDecompositionTest.testMoreColumns;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 1225, 1455, 1578];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 1225, 1455, 1578];0
org.apache.commons.math3.linear.SingularValueDecompositionTest.testMoreRows;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 695, 706, 715, 720, 1225, 1455, 1578];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 695, 706, 715, 720, 1225, 1455, 1578];0
org.apache.commons.math3.linear.SingularValueDecompositionTest.testRank;[12, 61, 390, 392, 396, 410, 425, 706, 715, 1537];[12, 61, 390, 392, 396, 410, 425, 706, 715, 1537];0
org.apache.commons.math3.linear.SingularValueDecompositionTest.testStability1;[12, 373, 392, 396, 402, 405, 410, 414, 422, 431, 695, 706, 715];[12, 373, 392, 396, 402, 405, 410, 414, 422, 431, 695, 706, 715];0
org.apache.commons.math3.linear.SingularValueDecompositionTest.testStability2;[12, 61, 373, 390, 392, 396, 402, 405, 410, 425, 677, 679, 685, 695, 706, 709, 715, 724, 725];[12, 61, 373, 390, 392, 396, 402, 405, 410, 425, 677, 679, 685, 695, 706, 709, 715, 724, 725];0
org.apache.commons.math3.linear.SingularValueDecompositionTest.testUOrthogonal;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1215, 1216, 1533];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1215, 1216, 1533];0
org.apache.commons.math3.linear.SingularValueDecompositionTest.testVOrthogonal;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1215, 1216, 1532];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 792, 805, 1215, 1216, 1532];0
org.apache.commons.math3.linear.SingularValueSolverTest.testConditionNumber;[12, 61, 390, 392, 396, 410, 425, 706, 715, 1577];[12, 61, 390, 392, 396, 410, 425, 706, 715, 1577];0
org.apache.commons.math3.linear.SingularValueSolverTest.testLeastSquareSolve;[12, 61, 349, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 418, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 750, 1206, 1208, 1265, 1532, 1533, 1534, 1535, 1537];[12, 61, 349, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 418, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 750, 1206, 1208, 1265, 1532, 1533, 1534, 1535, 1537];0
org.apache.commons.math3.linear.SingularValueSolverTest.testMath320B;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1455, 1532, 1533, 1576, 1580];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 792, 805, 1215, 1216, 1455, 1532, 1533, 1576, 1580];0
org.apache.commons.math3.linear.SingularValueSolverTest.testSolve;[12, 61, 329, 337, 341, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 418, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 750, 792, 805, 1206, 1208, 1215, 1216, 1265, 1532, 1533, 1534, 1535, 1537];[12, 61, 329, 337, 341, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 418, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 750, 792, 805, 1206, 1208, 1215, 1216, 1265, 1532, 1533, 1534, 1535, 1537];0
org.apache.commons.math3.linear.SingularValueSolverTest.testSolveDimensionErrors;[12, 61, 70, 71, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 418, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 750, 1206, 1208, 1532, 1533, 1534, 1535, 1537];[12, 61, 70, 71, 358, 373, 384, 390, 392, 396, 402, 405, 410, 417, 418, 425, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 750, 1206, 1208, 1532, 1533, 1534, 1535, 1537];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testAdd;[734, 737, 747, 854, 857, 869, 872, 873, 874, 1239, 1333, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1501, 1582, 1583, 1584, 1585, 1586, 1587, 1588];[734, 737, 747, 854, 857, 869, 872, 873, 874, 1239, 1333, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1501, 1582, 1583, 1584, 1585, 1586, 1587, 1588];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testAddFail;[70, 71, 734, 737, 747, 854, 857, 1239, 1333, 1481, 1484, 1485, 1487, 1489, 1490, 1492, 1501, 1582, 1583, 1585, 1587, 1588];[70, 71, 734, 737, 747, 854, 857, 1239, 1333, 1481, 1484, 1485, 1487, 1489, 1490, 1492, 1501, 1582, 1583, 1585, 1587, 1588];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testCopyFunctions;[734, 737, 747, 854, 857, 1239, 1337, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1585, 1586, 1587, 1588, 1589];[734, 737, 747, 854, 857, 1239, 1337, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1585, 1586, 1587, 1588, 1589];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testDimensions;[734, 737, 747, 854, 857, 1239, 1343, 1481, 1484, 1485, 1487, 1489, 1490, 1492, 1582, 1583, 1585, 1587, 1588];[734, 737, 747, 854, 857, 1239, 1343, 1481, 1484, 1485, 1487, 1489, 1490, 1492, 1582, 1583, 1585, 1587, 1588];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testEqualsAndHashCode;[734, 737, 747, 854, 857, 877, 1239, 1337, 1340, 1346, 1379, 1382, 1383, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590];[734, 737, 747, 854, 857, 877, 1239, 1337, 1340, 1346, 1379, 1382, 1383, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testExamples;[61, 734, 737, 739, 741, 747, 748, 853, 854, 855, 857, 869, 870, 872, 873, 874, 876, 881, 1232, 1239, 1241, 1243, 1248, 1343, 1347, 1348, 1478, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1584, 1585, 1586, 1588, 1591];[61, 734, 737, 739, 741, 747, 748, 853, 854, 855, 857, 869, 870, 872, 873, 874, 876, 881, 1232, 1239, 1241, 1243, 1248, 1343, 1347, 1348, 1478, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1584, 1585, 1586, 1588, 1591];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testGetColumnMatrix;[70, 71, 734, 737, 747, 854, 857, 1239, 1337, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1495, 1582, 1583, 1584, 1585, 1586, 1588];[70, 71, 734, 737, 747, 854, 857, 1239, 1337, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1495, 1582, 1583, 1584, 1585, 1586, 1588];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testGetColumnVector;[61, 70, 71, 734, 737, 747, 853, 854, 857, 1239, 1241, 1243, 1247, 1480, 1481, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1585, 1586, 1588];[61, 70, 71, 734, 737, 747, 853, 854, 857, 1239, 1241, 1243, 1247, 1480, 1481, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1585, 1586, 1588];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testGetEntry;[70, 71, 734, 737, 747, 854, 857, 869, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1585, 1586, 1587, 1588];[70, 71, 734, 737, 747, 854, 857, 869, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1585, 1586, 1587, 1588];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testGetRowMatrix;[70, 71, 734, 737, 747, 854, 857, 1239, 1337, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1497, 1582, 1583, 1584, 1585, 1586, 1588];[70, 71, 734, 737, 747, 854, 857, 1239, 1337, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1497, 1582, 1583, 1584, 1585, 1586, 1588];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testGetRowVector;[61, 70, 71, 734, 737, 747, 853, 854, 857, 1239, 1241, 1243, 1247, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1496, 1498, 1582, 1583, 1585, 1586, 1588];[61, 70, 71, 734, 737, 747, 853, 854, 857, 1239, 1241, 1243, 1247, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1496, 1498, 1582, 1583, 1585, 1586, 1588];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testGetVectors;[70, 71, 734, 737, 747, 854, 857, 869, 1239, 1481, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1496, 1582, 1583, 1585, 1586, 1587, 1588];[70, 71, 734, 737, 747, 854, 857, 869, 1239, 1481, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1496, 1582, 1583, 1585, 1586, 1587, 1588];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testMath209;[734, 737, 747, 854, 857, 869, 872, 873, 874, 1239, 1371, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1585, 1586, 1588];[734, 737, 747, 854, 857, 869, 872, 873, 874, 1239, 1371, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1585, 1586, 1588];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testMultiply;[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 869, 872, 873, 874, 1239, 1347, 1478, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1584, 1585, 1586, 1587, 1588];[70, 71, 734, 737, 739, 741, 744, 745, 747, 748, 853, 854, 857, 869, 872, 873, 874, 1239, 1347, 1478, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1584, 1585, 1586, 1587, 1588];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testMultiply2;[734, 737, 747, 854, 857, 869, 872, 873, 874, 1239, 1347, 1478, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1584, 1585, 1586, 1588];[734, 737, 747, 854, 857, 869, 872, 873, 874, 1239, 1347, 1478, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1584, 1585, 1586, 1588];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testOperate;[61, 70, 71, 734, 737, 747, 853, 854, 857, 869, 873, 874, 1236, 1239, 1244, 1371, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1585, 1586, 1587, 1588];[61, 70, 71, 734, 737, 747, 853, 854, 857, 869, 873, 874, 1236, 1239, 1244, 1371, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1585, 1586, 1587, 1588];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testPlusMinus;[70, 71, 734, 737, 747, 854, 857, 869, 870, 872, 873, 874, 881, 1239, 1333, 1375, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1501, 1503, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1592];[70, 71, 734, 737, 747, 854, 857, 869, 870, 872, 873, 874, 881, 1239, 1333, 1375, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1501, 1503, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1592];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testPremultiply;[70, 71, 734, 737, 747, 854, 857, 869, 872, 873, 874, 1239, 1347, 1376, 1478, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1584, 1585, 1586, 1587, 1588];[70, 71, 734, 737, 747, 854, 857, 869, 872, 873, 874, 1239, 1347, 1376, 1478, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1584, 1585, 1586, 1587, 1588];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testPremultiplyVector;[61, 70, 71, 734, 737, 747, 853, 854, 857, 869, 872, 873, 874, 1236, 1239, 1376, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1585, 1586, 1587, 1588];[61, 70, 71, 734, 737, 747, 853, 854, 857, 869, 872, 873, 874, 1236, 1239, 1376, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1585, 1586, 1587, 1588];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testScalarAdd;[734, 737, 747, 854, 857, 869, 872, 873, 874, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1507, 1582, 1583, 1584, 1585, 1586, 1587, 1588];[734, 737, 747, 854, 857, 869, 872, 873, 874, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1507, 1582, 1583, 1584, 1585, 1586, 1587, 1588];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testSetSubMatrix;[70, 71, 734, 737, 747, 854, 857, 1239, 1337, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1514, 1582, 1583, 1585, 1586, 1587, 1588, 1593];[70, 71, 734, 737, 747, 854, 857, 1239, 1337, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1514, 1582, 1583, 1585, 1586, 1587, 1588, 1593];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testSubMatrix;[70, 71, 734, 737, 747, 854, 857, 1239, 1337, 1342, 1366, 1367, 1368, 1383, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1584, 1585, 1586, 1588, 1590];[70, 71, 734, 737, 747, 854, 857, 1239, 1337, 1342, 1366, 1367, 1368, 1383, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1584, 1585, 1586, 1588, 1590];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testTrace;[70, 71, 734, 737, 747, 854, 857, 869, 872, 873, 874, 1239, 1378, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1585, 1586, 1587, 1588];[70, 71, 734, 737, 747, 854, 857, 869, 872, 873, 874, 1239, 1378, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1585, 1586, 1587, 1588];0
org.apache.commons.math3.linear.SparseFieldMatrixTest.testTranspose;[61, 734, 737, 739, 741, 747, 748, 854, 855, 857, 869, 870, 873, 876, 881, 1232, 1239, 1340, 1343, 1348, 1379, 1380, 1381, 1382, 1383, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1590, 1591];[61, 734, 737, 739, 741, 747, 748, 854, 855, 857, 869, 870, 873, 876, 881, 1232, 1239, 1340, 1343, 1348, 1379, 1380, 1381, 1382, 1383, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1590, 1591];0
org.apache.commons.math3.linear.SparseFieldVectorTest.testBasicFunctions;[61, 734, 737, 747, 853, 854, 857, 869, 872, 873, 874, 876, 881, 1239, 1481, 1482, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1582, 1583, 1585, 1586, 1588, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606];[61, 734, 737, 747, 853, 854, 857, 869, 872, 873, 874, 876, 881, 1239, 1481, 1482, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1582, 1583, 1585, 1586, 1588, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606];0
org.apache.commons.math3.linear.SparseFieldVectorTest.testMapFunctions;[61, 854, 855, 857, 870, 872, 873, 874, 876, 881, 1239, 1481, 1482, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1593, 1595, 1599, 1601, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616];[61, 854, 855, 857, 870, 872, 873, 874, 876, 881, 1239, 1481, 1482, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1593, 1595, 1599, 1601, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616];0
org.apache.commons.math3.linear.SparseFieldVectorTest.testMisc;[61, 70, 71, 857, 877, 1239, 1484, 1485, 1486, 1487, 1489, 1490, 1492, 1603, 1605, 1617];[61, 70, 71, 857, 877, 1239, 1484, 1485, 1486, 1487, 1489, 1490, 1492, 1603, 1605, 1617];0
org.apache.commons.math3.linear.SparseFieldVectorTest.testOuterProduct;[61, 734, 737, 747, 853, 854, 857, 869, 1239, 1481, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1585, 1586, 1588, 1596, 1605];[61, 734, 737, 747, 853, 854, 857, 869, 1239, 1481, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1582, 1583, 1585, 1586, 1588, 1596, 1605];0
org.apache.commons.math3.linear.SparseFieldVectorTest.testPredicates;[61, 854, 857, 1239, 1481, 1482, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1593, 1599, 1605, 1606, 1618];[61, 854, 857, 1239, 1481, 1482, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1593, 1599, 1605, 1606, 1618];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testAdd;[373, 402, 704, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637];[373, 402, 704, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testAddFail;[70, 71, 373, 402, 704, 1620, 1621, 1623, 1624, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1636];[70, 71, 373, 402, 704, 1620, 1621, 1623, 1624, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1636];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testCopyFunctions;[373, 402, 732, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1638];[373, 402, 732, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1638];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testDimensions;[373, 402, 672, 1620, 1621, 1623, 1624, 1627, 1629, 1630, 1631, 1632, 1633, 1636];[373, 402, 672, 1620, 1621, 1623, 1624, 1627, 1629, 1630, 1631, 1632, 1633, 1636];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testEqualsAndHashCode;[98, 373, 402, 679, 709, 724, 725, 732, 1204, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1638, 1639, 1640];[98, 373, 402, 679, 709, 724, 725, 732, 1204, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1638, 1639, 1640];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testExamples;[331, 349, 373, 384, 392, 396, 402, 405, 410, 417, 672, 695, 786, 819, 1619, 1620, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1637, 1641, 1642];[331, 349, 373, 384, 392, 396, 402, 405, 410, 417, 672, 695, 786, 819, 1619, 1620, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1637, 1641, 1642];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testGetColumnMatrix;[70, 71, 373, 402, 732, 1207, 1620, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1639];[70, 71, 373, 402, 732, 1207, 1620, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1639];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testGetColumnVector;[70, 71, 331, 344, 347, 349, 373, 402, 1206, 1208, 1620, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636];[70, 71, 331, 344, 347, 349, 373, 402, 1206, 1208, 1620, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testGetEntry;[70, 71, 373, 402, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636];[70, 71, 373, 402, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testGetRowMatrix;[70, 71, 373, 402, 732, 1209, 1620, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1639];[70, 71, 373, 402, 732, 1209, 1620, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1639];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testGetRowVector;[70, 71, 331, 344, 347, 349, 373, 376, 402, 1210, 1620, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636];[70, 71, 331, 344, 347, 349, 373, 376, 402, 1210, 1620, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testGetVectors;[70, 71, 373, 376, 402, 1206, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636];[70, 71, 373, 376, 402, 1206, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testMath209;[373, 402, 418, 1620, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636];[373, 402, 418, 1620, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testMultiply;[70, 71, 373, 378, 383, 402, 404, 405, 414, 417, 422, 431, 704, 805, 818, 1215, 1408, 1409, 1413, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1642, 1643, 1644];[70, 71, 373, 378, 383, 402, 404, 405, 414, 417, 422, 431, 704, 805, 818, 1215, 1408, 1409, 1413, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1642, 1643, 1644];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testMultiply2;[373, 402, 417, 704, 1215, 1413, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1642, 1644];[373, 402, 417, 704, 1215, 1413, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1642, 1644];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testNorm;[373, 402, 1215, 1413, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636];[373, 402, 1215, 1413, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testOperate;[70, 71, 358, 373, 402, 418, 424, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636];[70, 71, 358, 373, 402, 418, 424, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testPlusMinus;[70, 71, 373, 402, 689, 704, 727, 1215, 1413, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1639, 1644];[70, 71, 373, 402, 689, 704, 727, 1215, 1413, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1639, 1644];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testPremultiply;[70, 71, 373, 402, 417, 704, 1215, 1218, 1413, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1642, 1644];[70, 71, 373, 402, 417, 704, 1215, 1218, 1413, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1642, 1644];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testPremultiplyVector;[70, 71, 373, 402, 424, 1218, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636];[70, 71, 373, 402, 424, 1218, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testScalarAdd;[373, 402, 704, 1215, 1219, 1413, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1639, 1644];[373, 402, 704, 1215, 1219, 1413, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1639, 1644];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testSerial;[373, 402, 732, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1645];[373, 402, 732, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1645];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testSetSubMatrix;[61, 70, 71, 373, 402, 732, 1225, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1637];[61, 70, 71, 373, 402, 732, 1225, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1637];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testSubMatrix;[70, 71, 373, 402, 725, 732, 1203, 1211, 1212, 1213, 1620, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1639, 1640];[70, 71, 373, 402, 725, 732, 1203, 1211, 1212, 1213, 1620, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1639, 1640];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testToString;[373, 402, 528, 1226, 1227, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636];[373, 402, 528, 1226, 1227, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testTrace;[70, 71, 373, 402, 1228, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636];[70, 71, 373, 402, 1228, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636];0
org.apache.commons.math3.linear.SparseRealMatrixTest.testTranspose;[373, 384, 392, 396, 402, 405, 410, 672, 677, 679, 685, 695, 704, 709, 724, 725, 786, 792, 805, 819, 1215, 1216, 1413, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1639, 1640, 1641, 1644];[373, 384, 392, 396, 402, 405, 410, 672, 677, 679, 685, 695, 704, 709, 724, 725, 786, 792, 805, 819, 1215, 1216, 1413, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1639, 1640, 1641, 1644];0
org.apache.commons.math3.linear.SparseRealVectorTest.testAddDimensionMismatch;[70, 71, 1311, 1632, 1646, 1647, 1648];[70, 71, 1311, 1632, 1646, 1647, 1648];0
org.apache.commons.math3.linear.SparseRealVectorTest.testAddMixedTypes;[1264, 1265, 1311, 1552, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1646, 1647, 1648, 1649, 1650];[1264, 1265, 1311, 1552, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1646, 1647, 1648, 1649, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testAddSameType;[1265, 1311, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654];[1265, 1311, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654];0
org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntry;[1265, 1553, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1653];[1265, 1553, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1653];0
org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex1;[70, 71, 1265, 1553, 1632, 1647, 1648, 1650];[70, 71, 1265, 1553, 1632, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testAddToEntryInvalidIndex2;[70, 71, 1265, 1553, 1632, 1647, 1648, 1650];[70, 71, 1265, 1553, 1632, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testAppendScalar;[1265, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1653, 1655];[1265, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1653, 1655];0
org.apache.commons.math3.linear.SparseRealVectorTest.testAppendVector;[1265, 1619, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1653, 1655];[1265, 1619, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1653, 1655];0
org.apache.commons.math3.linear.SparseRealVectorTest.testCombineDimensionMismatchMixedTypes;[70, 71, 1311, 1554, 1555, 1632, 1647, 1648, 1651, 1654];[70, 71, 1311, 1554, 1555, 1632, 1647, 1648, 1651, 1654];0
org.apache.commons.math3.linear.SparseRealVectorTest.testCombineDimensionMismatchSameType;[70, 71, 1311, 1554, 1555, 1632, 1647, 1648, 1651, 1654];[70, 71, 1311, 1554, 1555, 1632, 1647, 1648, 1651, 1654];0
org.apache.commons.math3.linear.SparseRealVectorTest.testCombineMixedTypes;[1265, 1311, 1554, 1555, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1649, 1650, 1651, 1653, 1654];[1265, 1311, 1554, 1555, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1649, 1650, 1651, 1653, 1654];0
org.apache.commons.math3.linear.SparseRealVectorTest.testCombineSameType;[1265, 1311, 1554, 1555, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1649, 1650, 1651, 1653, 1654];[1265, 1311, 1554, 1555, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1649, 1650, 1651, 1653, 1654];0
org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfDimensionMismatchMixedTypes;[70, 71, 1311, 1555, 1632, 1647, 1648];[70, 71, 1311, 1555, 1632, 1647, 1648];0
org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfDimensionMismatchSameType;[70, 71, 1311, 1555, 1632, 1647, 1648];[70, 71, 1311, 1555, 1632, 1647, 1648];0
org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfMixedTypes;[1265, 1311, 1555, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1649, 1650, 1651, 1653, 1654];[1265, 1311, 1555, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1649, 1650, 1651, 1653, 1654];0
org.apache.commons.math3.linear.SparseRealVectorTest.testCombineToSelfSameType;[1265, 1311, 1555, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1649, 1650, 1651, 1653, 1654];[1265, 1311, 1555, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1649, 1650, 1651, 1653, 1654];0
org.apache.commons.math3.linear.SparseRealVectorTest.testConcurrentModification;[1265, 1311, 1619, 1620, 1621, 1624, 1625, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1651, 1653, 1656, 1657, 1658, 1659];[1265, 1311, 1619, 1620, 1621, 1624, 1625, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1651, 1653, 1656, 1657, 1658, 1659];0
org.apache.commons.math3.linear.SparseRealVectorTest.testConstructors;[1265, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1651];[1265, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1651];0
org.apache.commons.math3.linear.SparseRealVectorTest.testCopy;[1265, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1651, 1654];[1265, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1651, 1654];0
org.apache.commons.math3.linear.SparseRealVectorTest.testCosineDimensionMismatch;[12, 70, 71, 1264, 1265, 1270, 1271, 1272, 1311, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];[12, 70, 71, 1264, 1265, 1270, 1271, 1272, 1311, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testCosineLeftNullVector;[12, 70, 71, 1264, 1265, 1270, 1271, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];[12, 70, 71, 1264, 1265, 1270, 1271, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testCosineMixedTypes;[12, 1264, 1265, 1270, 1271, 1272, 1311, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];[12, 1264, 1265, 1270, 1271, 1272, 1311, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testCosineRightNullVector;[12, 70, 71, 1264, 1265, 1270, 1271, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];[12, 70, 71, 1264, 1265, 1270, 1271, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testCosineSameType;[12, 1264, 1265, 1270, 1271, 1272, 1311, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];[12, 1264, 1265, 1270, 1271, 1272, 1311, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testDotProductDimensionMismatchMixedTypes;[70, 71, 1272, 1311, 1632, 1647, 1648];[70, 71, 1272, 1311, 1632, 1647, 1648];0
org.apache.commons.math3.linear.SparseRealVectorTest.testDotProductDimensionMismatchSameType;[70, 71, 1272, 1311, 1632, 1647, 1648];[70, 71, 1272, 1311, 1632, 1647, 1648];0
org.apache.commons.math3.linear.SparseRealVectorTest.testDotProductMixedTypes;[1265, 1272, 1311, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];[1265, 1272, 1311, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testDotProductSameType;[1265, 1272, 1311, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];[1265, 1272, 1311, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testEquals;[1265, 1619, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1651, 1653, 1654, 1660, 1661];[1265, 1619, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1651, 1653, 1654, 1660, 1661];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetDimension;[1624, 1627, 1631, 1632, 1636, 1647, 1648];[1624, 1627, 1631, 1632, 1636, 1647, 1648];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetDistanceDimensionMismatch;[70, 71, 1311, 1632, 1647, 1648, 1662];[70, 71, 1311, 1632, 1647, 1648, 1662];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetDistanceMixedTypes;[12, 1264, 1265, 1311, 1556, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1662];[12, 1264, 1265, 1311, 1556, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1662];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetDistanceSameType;[12, 1265, 1311, 1619, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1651, 1662];[12, 1265, 1311, 1619, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1651, 1662];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntry;[1265, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];[1265, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex1;[70, 71, 1265, 1632, 1647, 1648, 1650];[70, 71, 1265, 1632, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetEntryInvalidIndex2;[70, 71, 1265, 1632, 1647, 1648, 1650];[70, 71, 1265, 1632, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetL1DistanceDimensionMismatch;[70, 71, 1311, 1632, 1647, 1648, 1663];[70, 71, 1311, 1632, 1647, 1648, 1663];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetL1DistanceMixedTypes;[1264, 1265, 1311, 1557, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1663];[1264, 1265, 1311, 1557, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1663];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetL1DistanceSameType;[1265, 1311, 1619, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1651, 1663];[1265, 1311, 1619, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1651, 1663];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetL1Norm;[1264, 1265, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1664];[1264, 1265, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1664];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetLInfDistanceDimensionMismatch;[70, 71, 1311, 1632, 1647, 1648, 1665];[70, 71, 1311, 1632, 1647, 1648, 1665];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetLInfDistanceMixedTypes;[1264, 1265, 1311, 1558, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1665];[1264, 1265, 1311, 1558, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1665];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetLInfDistanceSameType;[1265, 1311, 1619, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1651, 1665];[1265, 1311, 1619, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1651, 1665];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetLInfNorm;[1264, 1265, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1666];[1264, 1265, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1666];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetNorm;[12, 1264, 1265, 1271, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];[12, 1264, 1265, 1271, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVector;[1265, 1619, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1653, 1660];[1265, 1619, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1653, 1660];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex1;[70, 71, 1265, 1632, 1647, 1648, 1660];[70, 71, 1265, 1632, 1647, 1648, 1660];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex2;[70, 71, 1265, 1632, 1647, 1648, 1660];[70, 71, 1265, 1632, 1647, 1648, 1660];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex3;[70, 71, 1265, 1632, 1647, 1648, 1660];[70, 71, 1265, 1632, 1647, 1648, 1660];0
org.apache.commons.math3.linear.SparseRealVectorTest.testGetSubVectorInvalidIndex4;[70, 71, 1265, 1632, 1647, 1648, 1660];[70, 71, 1265, 1632, 1647, 1648, 1660];0
org.apache.commons.math3.linear.SparseRealVectorTest.testIsInfinite;[1265, 1619, 1624, 1627, 1631, 1632, 1636, 1637, 1647, 1648, 1653, 1656];[1265, 1619, 1624, 1627, 1631, 1632, 1636, 1637, 1647, 1648, 1653, 1656];0
org.apache.commons.math3.linear.SparseRealVectorTest.testIsNaN;[1265, 1619, 1624, 1627, 1631, 1632, 1636, 1637, 1647, 1648, 1653, 1657];[1265, 1619, 1624, 1627, 1631, 1632, 1636, 1637, 1647, 1648, 1653, 1657];0
org.apache.commons.math3.linear.SparseRealVectorTest.testIterator;[70, 71, 1264, 1265, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];[70, 71, 1264, 1265, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testMapAdd;[1265, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1651, 1653, 1654, 1667, 1668];[1265, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1651, 1653, 1654, 1667, 1668];0
org.apache.commons.math3.linear.SparseRealVectorTest.testMapAddToSelf;[1265, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1653, 1667];[1265, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1653, 1667];0
org.apache.commons.math3.linear.SparseRealVectorTest.testMapDivide;[219, 225, 1264, 1265, 1301, 1312, 1561, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1651, 1653, 1654];[219, 225, 1264, 1265, 1301, 1312, 1561, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1651, 1653, 1654];0
org.apache.commons.math3.linear.SparseRealVectorTest.testMapDivideToSelf;[219, 225, 1264, 1265, 1312, 1561, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1653];[219, 225, 1264, 1265, 1312, 1561, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1653];0
org.apache.commons.math3.linear.SparseRealVectorTest.testMapMultiply;[210, 219, 807, 1264, 1265, 1312, 1313, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1651, 1653, 1654];[210, 219, 807, 1264, 1265, 1312, 1313, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1651, 1653, 1654];0
org.apache.commons.math3.linear.SparseRealVectorTest.testMapMultiplyToSelf;[210, 219, 1264, 1265, 1312, 1313, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1653];[210, 219, 1264, 1265, 1312, 1313, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1653];0
org.apache.commons.math3.linear.SparseRealVectorTest.testMapSubtract;[1265, 1302, 1562, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1651, 1653, 1654, 1667];[1265, 1302, 1562, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1651, 1653, 1654, 1667];0
org.apache.commons.math3.linear.SparseRealVectorTest.testMapSubtractToSelf;[1265, 1562, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1653, 1667];[1265, 1562, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1653, 1667];0
org.apache.commons.math3.linear.SparseRealVectorTest.testMinMax;[1264, 1265, 1304, 1305, 1306, 1307, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];[1264, 1265, 1304, 1305, 1306, 1307, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testOuterProductMixedTypes;[373, 402, 1265, 1563, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1647, 1648, 1649, 1650];[373, 402, 1265, 1563, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1647, 1648, 1649, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testOuterProductSameType;[373, 402, 1265, 1563, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1647, 1648, 1649, 1650];[373, 402, 1265, 1563, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1647, 1648, 1649, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testProjectionDimensionMismatch;[70, 71, 1265, 1272, 1310, 1311, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1653, 1669];[70, 71, 1265, 1272, 1310, 1311, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650, 1653, 1669];0
org.apache.commons.math3.linear.SparseRealVectorTest.testProjectionMixedTypes;[210, 219, 807, 1264, 1265, 1272, 1310, 1311, 1312, 1313, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];[210, 219, 807, 1264, 1265, 1272, 1310, 1311, 1312, 1313, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testProjectionNullVector;[70, 71, 1265, 1272, 1310, 1311, 1620, 1625, 1632, 1636, 1647, 1648, 1650];[70, 71, 1265, 1272, 1310, 1311, 1620, 1625, 1632, 1636, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testProjectionSameType;[210, 219, 807, 1264, 1265, 1272, 1310, 1311, 1312, 1313, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1637, 1647, 1648, 1650, 1651, 1653, 1654];[210, 219, 807, 1264, 1265, 1272, 1310, 1311, 1312, 1313, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1637, 1647, 1648, 1650, 1651, 1653, 1654];0
org.apache.commons.math3.linear.SparseRealVectorTest.testSerial;[1265, 1619, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1645, 1647, 1648, 1650, 1651, 1661];[1265, 1619, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1645, 1647, 1648, 1650, 1651, 1661];0
org.apache.commons.math3.linear.SparseRealVectorTest.testSet;[1265, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1653, 1669];[1265, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1653, 1669];0
org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntry;[1265, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1653];[1265, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1653];0
org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex1;[70, 71, 1265, 1632, 1647, 1648, 1653];[70, 71, 1265, 1632, 1647, 1648, 1653];0
org.apache.commons.math3.linear.SparseRealVectorTest.testSetEntryInvalidIndex2;[70, 71, 1265, 1632, 1647, 1648, 1653];[70, 71, 1265, 1632, 1647, 1648, 1653];0
org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex1;[70, 71, 1265, 1632, 1647, 1648, 1670];[70, 71, 1265, 1632, 1647, 1648, 1670];0
org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex2;[70, 71, 1265, 1632, 1647, 1648, 1670];[70, 71, 1265, 1632, 1647, 1648, 1670];0
org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorInvalidIndex3;[70, 71, 1265, 1632, 1647, 1648, 1670];[70, 71, 1265, 1632, 1647, 1648, 1670];0
org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorMixedType;[1265, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1653, 1670];[1265, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1653, 1670];0
org.apache.commons.math3.linear.SparseRealVectorTest.testSetSubVectorSameType;[1265, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1653, 1670];[1265, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1650, 1653, 1670];0
org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractDimensionMismatch;[70, 71, 1311, 1632, 1647, 1648, 1671];[70, 71, 1311, 1632, 1647, 1648, 1671];0
org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractMixedTypes;[210, 219, 807, 1264, 1265, 1311, 1312, 1313, 1566, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1649, 1650, 1671];[210, 219, 807, 1264, 1265, 1311, 1312, 1313, 1566, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1649, 1650, 1671];0
org.apache.commons.math3.linear.SparseRealVectorTest.testSubtractSameType;[1265, 1311, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1649, 1650, 1651, 1653, 1654, 1671];[1265, 1311, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1647, 1648, 1649, 1650, 1651, 1653, 1654, 1671];0
org.apache.commons.math3.linear.SparseRealVectorTest.testToArray;[1619, 1624, 1627, 1631, 1632, 1636, 1647, 1672];[1619, 1624, 1627, 1631, 1632, 1636, 1647, 1672];0
org.apache.commons.math3.linear.SparseRealVectorTest.testUnitize;[12, 1264, 1265, 1271, 1619, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1637, 1647, 1648, 1650, 1673];[12, 1264, 1265, 1271, 1619, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1637, 1647, 1648, 1650, 1673];0
org.apache.commons.math3.linear.SparseRealVectorTest.testUnitizeNullVector;[12, 70, 71, 1264, 1265, 1271, 1620, 1625, 1632, 1636, 1647, 1648, 1650, 1673];[12, 70, 71, 1264, 1265, 1271, 1620, 1625, 1632, 1636, 1647, 1648, 1650, 1673];0
org.apache.commons.math3.linear.SparseRealVectorTest.testUnitVector;[12, 1264, 1265, 1271, 1619, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1637, 1647, 1648, 1650, 1651, 1654, 1673, 1674];[12, 1264, 1265, 1271, 1619, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1637, 1647, 1648, 1650, 1651, 1654, 1673, 1674];0
org.apache.commons.math3.linear.SparseRealVectorTest.testUnitVectorNullVector;[12, 70, 71, 1264, 1265, 1271, 1620, 1625, 1632, 1636, 1647, 1648, 1650, 1651, 1654, 1673, 1674];[12, 70, 71, 1264, 1265, 1271, 1620, 1625, 1632, 1636, 1647, 1648, 1650, 1651, 1654, 1673, 1674];0
org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor1;[1265, 1567, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1637, 1647, 1648, 1650, 1653];[1265, 1567, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1637, 1647, 1648, 1650, 1653];0
org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor2;[70, 71, 1318, 1567, 1632, 1647, 1648];[70, 71, 1318, 1567, 1632, 1647, 1648];0
org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderChangingVisitor3;[1265, 1318, 1567, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1637, 1647, 1648, 1650, 1653];[1265, 1318, 1567, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1637, 1647, 1648, 1650, 1653];0
org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor1;[1265, 1567, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];[1265, 1567, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor2;[70, 71, 1318, 1567, 1632, 1647, 1648];[70, 71, 1318, 1567, 1632, 1647, 1648];0
org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInDefaultOrderPreservingVisitor3;[1265, 1318, 1567, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];[1265, 1318, 1567, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor1;[1265, 1567, 1568, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1637, 1647, 1648, 1650, 1653];[1265, 1567, 1568, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1637, 1647, 1648, 1650, 1653];0
org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor2;[70, 71, 1318, 1567, 1568, 1632, 1647, 1648];[70, 71, 1318, 1567, 1568, 1632, 1647, 1648];0
org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderChangingVisitor3;[1265, 1318, 1567, 1568, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1637, 1647, 1648, 1650, 1653];[1265, 1318, 1567, 1568, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1637, 1647, 1648, 1650, 1653];0
org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor1;[1265, 1567, 1568, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];[1265, 1567, 1568, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor2;[70, 71, 1318, 1567, 1568, 1632, 1647, 1648];[70, 71, 1318, 1567, 1568, 1632, 1647, 1648];0
org.apache.commons.math3.linear.SparseRealVectorTest.testWalkInOptimizedOrderPreservingVisitor3;[1265, 1318, 1567, 1568, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];[1265, 1318, 1567, 1568, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1650];0
org.apache.commons.math3.linear.SymmLQTest.testDimensionMismatchRightHandSide;[61, 70, 71, 331, 392, 396, 1309, 1420, 1422];[61, 70, 71, 331, 392, 396, 1309, 1420, 1422];0
org.apache.commons.math3.linear.SymmLQTest.testDimensionMismatchSolution;[61, 70, 71, 331, 392, 396, 697, 1420, 1422];[61, 70, 71, 331, 392, 396, 697, 1420, 1422];0
org.apache.commons.math3.linear.SymmLQTest.testEventManagement;[12, 61, 247, 250, 255, 329, 330, 331, 349, 697, 802, 806, 807, 1309, 1314, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1435, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 349, 697, 802, 806, 807, 1309, 1314, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1435, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testMismatchedOperatorDimensions;[61, 70, 71, 331, 392, 396, 1420, 1422];[61, 70, 71, 331, 392, 396, 1420, 1422];0
org.apache.commons.math3.linear.SymmLQTest.testNonPositiveDefinitePreconditioner;[61, 70, 71, 250, 255, 329, 330, 331, 349, 373, 392, 396, 402, 405, 695, 697, 777, 802, 1309, 1416, 1420, 1422, 1424, 1427, 1431, 1678, 1685, 1686];[61, 70, 71, 250, 255, 329, 330, 331, 349, 373, 392, 396, 402, 405, 695, 697, 777, 802, 1309, 1416, 1420, 1422, 1424, 1427, 1431, 1678, 1685, 1686];0
org.apache.commons.math3.linear.SymmLQTest.testNonSelfAdjointOperator;[12, 61, 70, 71, 250, 255, 329, 330, 331, 358, 390, 392, 396, 418, 425, 697, 750, 777, 806, 807, 1309, 1416, 1420, 1422, 1424, 1427, 1431, 1678, 1685];[12, 61, 70, 71, 250, 255, 329, 330, 331, 358, 390, 392, 396, 418, 425, 697, 750, 777, 806, 807, 1309, 1416, 1420, 1422, 1424, 1427, 1431, 1678, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testNonSelfAdjointPreconditioner;[61, 70, 71, 250, 255, 329, 330, 331, 349, 390, 392, 396, 425, 672, 697, 706, 715, 777, 819, 1309, 1416, 1420, 1422, 1424, 1427, 1431, 1678, 1685];[61, 70, 71, 250, 255, 329, 330, 331, 349, 390, 392, 396, 425, 672, 697, 706, 715, 777, 819, 1309, 1416, 1420, 1422, 1424, 1427, 1431, 1678, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testNonSquareOperator;[61, 70, 71, 392, 396, 697, 1420, 1422];[61, 70, 71, 392, 396, 697, 1420, 1422];0
org.apache.commons.math3.linear.SymmLQTest.testNonSquarePreconditioner;[61, 70, 71, 331, 392, 396, 1420, 1422];[61, 70, 71, 331, 392, 396, 1420, 1422];0
org.apache.commons.math3.linear.SymmLQTest.testPreconditionedNormOfResidual;[12, 61, 202, 247, 250, 255, 329, 330, 331, 337, 341, 349, 424, 697, 802, 806, 807, 1284, 1286, 1309, 1314, 1420, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687];[12, 61, 202, 247, 250, 255, 329, 330, 331, 337, 341, 349, 424, 697, 802, 806, 807, 1284, 1286, 1309, 1314, 1420, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687];0
org.apache.commons.math3.linear.SymmLQTest.testPreconditionedSolution;[12, 61, 141, 247, 250, 255, 329, 330, 331, 349, 424, 697, 802, 806, 807, 1309, 1314, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1438, 1439, 1440, 1441, 1442, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];[12, 61, 141, 247, 250, 255, 329, 330, 331, 349, 424, 697, 802, 806, 807, 1309, 1314, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1438, 1439, 1440, 1441, 1442, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testPreconditionedSolution2;[12, 61, 247, 250, 255, 329, 330, 331, 349, 358, 373, 384, 392, 396, 402, 405, 418, 424, 695, 697, 750, 802, 806, 807, 1309, 1314, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1438, 1439, 1440, 1441, 1442, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 349, 358, 373, 384, 392, 396, 402, 405, 418, 424, 695, 697, 750, 802, 806, 807, 1309, 1314, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1438, 1439, 1440, 1441, 1442, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testSolveSaunders1;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1426, 1427, 1431, 1432, 1433, 1675, 1677, 1678, 1679, 1681, 1682, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1426, 1427, 1431, 1432, 1433, 1675, 1677, 1678, 1679, 1681, 1682, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testSolveSaunders10;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1314, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1314, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testSolveSaunders11;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1426, 1427, 1431, 1432, 1433, 1675, 1677, 1678, 1679, 1681, 1682, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1426, 1427, 1431, 1432, 1433, 1675, 1677, 1678, 1679, 1681, 1682, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testSolveSaunders12;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testSolveSaunders13;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1426, 1427, 1431, 1432, 1433, 1675, 1677, 1678, 1679, 1681, 1682, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1426, 1427, 1431, 1432, 1433, 1675, 1677, 1678, 1679, 1681, 1682, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testSolveSaunders14;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1426, 1427, 1431, 1432, 1433, 1675, 1677, 1678, 1679, 1681, 1682, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1426, 1427, 1431, 1432, 1433, 1675, 1677, 1678, 1679, 1681, 1682, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testSolveSaunders15;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1426, 1427, 1431, 1432, 1433, 1675, 1677, 1678, 1679, 1681, 1682, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1426, 1427, 1431, 1432, 1433, 1675, 1677, 1678, 1679, 1681, 1682, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testSolveSaunders16;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testSolveSaunders17;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testSolveSaunders18;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testSolveSaunders19;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testSolveSaunders2;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testSolveSaunders20;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testSolveSaunders3;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1426, 1427, 1431, 1432, 1433, 1675, 1677, 1678, 1679, 1681, 1682, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1426, 1427, 1431, 1432, 1433, 1675, 1677, 1678, 1679, 1681, 1682, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testSolveSaunders4;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1426, 1427, 1431, 1432, 1433, 1675, 1677, 1678, 1679, 1681, 1682, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1426, 1427, 1431, 1432, 1433, 1675, 1677, 1678, 1679, 1681, 1682, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testSolveSaunders5;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1426, 1427, 1431, 1432, 1433, 1675, 1677, 1678, 1679, 1681, 1682, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1426, 1427, 1431, 1432, 1433, 1675, 1677, 1678, 1679, 1681, 1682, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testSolveSaunders6;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testSolveSaunders7;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testSolveSaunders8;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1314, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1314, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testSolveSaunders9;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1268, 1309, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testUnpreconditionedInPlaceSolutionWithInitialGuess;[12, 61, 141, 247, 250, 255, 329, 330, 331, 349, 697, 802, 806, 807, 1309, 1314, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];[12, 61, 141, 247, 250, 255, 329, 330, 331, 349, 697, 802, 806, 807, 1309, 1314, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testUnpreconditionedNormOfResidual;[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1309, 1314, 1420, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1435, 1437, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];[12, 61, 247, 250, 255, 329, 330, 331, 337, 341, 349, 697, 802, 806, 807, 1309, 1314, 1420, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1435, 1437, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testUnpreconditionedSolution;[12, 61, 141, 247, 250, 255, 329, 330, 331, 349, 697, 802, 806, 807, 1309, 1314, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];[12, 61, 141, 247, 250, 255, 329, 330, 331, 349, 697, 802, 806, 807, 1309, 1314, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];0
org.apache.commons.math3.linear.SymmLQTest.testUnpreconditionedSolutionWithInitialGuess;[12, 61, 141, 247, 250, 255, 329, 330, 331, 349, 697, 802, 806, 807, 1309, 1314, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];[12, 61, 141, 247, 250, 255, 329, 330, 331, 349, 697, 802, 806, 807, 1309, 1314, 1420, 1422, 1424, 1425, 1426, 1427, 1429, 1431, 1432, 1433, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685];0
org.apache.commons.math3.linear.TriDiagonalTransformerTest.testAEqualQTQt;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 699, 706, 709, 715, 719, 720, 722, 724, 725, 792, 805, 1215, 1216, 1688];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 699, 706, 709, 715, 719, 720, 722, 724, 725, 792, 805, 1215, 1216, 1688];0
org.apache.commons.math3.linear.TriDiagonalTransformerTest.testMatricesValues3;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 679, 685, 695, 699, 706, 709, 715, 719, 722, 724, 725, 792, 805, 1215, 1216, 1688];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 679, 685, 695, 699, 706, 709, 715, 719, 722, 724, 725, 792, 805, 1215, 1216, 1688];0
org.apache.commons.math3.linear.TriDiagonalTransformerTest.testMatricesValues5;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 679, 685, 695, 699, 706, 709, 715, 719, 722, 724, 725, 792, 805, 1215, 1216, 1688];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 677, 679, 685, 695, 699, 706, 709, 715, 719, 722, 724, 725, 792, 805, 1215, 1216, 1688];0
org.apache.commons.math3.linear.TriDiagonalTransformerTest.testNoAccessBelowDiagonal;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 699, 706, 709, 715, 719, 720, 722, 724, 725, 792, 805, 1215, 1216, 1688];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 699, 706, 709, 715, 719, 720, 722, 724, 725, 792, 805, 1215, 1216, 1688];0
org.apache.commons.math3.linear.TriDiagonalTransformerTest.testNonSquare;[61, 70, 71, 390, 392, 396, 410, 425, 672];[61, 70, 71, 390, 392, 396, 410, 425, 672];0
org.apache.commons.math3.linear.TriDiagonalTransformerTest.testQOrthogonal;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 699, 706, 709, 715, 719, 720, 722, 724, 725, 786, 792, 805, 1215, 1216];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 699, 706, 709, 715, 719, 720, 722, 724, 725, 786, 792, 805, 1215, 1216];0
org.apache.commons.math3.linear.TriDiagonalTransformerTest.testQTOrthogonal;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 699, 706, 709, 715, 720, 722, 724, 725, 786, 792, 805, 1215, 1216];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 417, 425, 672, 677, 679, 685, 695, 699, 706, 709, 715, 720, 722, 724, 725, 786, 792, 805, 1215, 1216];0
org.apache.commons.math3.linear.TriDiagonalTransformerTest.testTTriDiagonal;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 706, 715, 722, 1688];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 672, 706, 715, 722, 1688];0
org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest.testAddToEntry;[70, 71, 802, 1434];[70, 71, 802, 1434];0
org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest.testAllButExcluded;[12, 70, 71, 77, 78, 80, 81, 147, 329, 330, 331, 337, 341, 347, 349, 373, 378, 383, 402, 404, 405, 410, 424, 431, 676, 697, 800, 802, 806, 807, 818, 1264, 1267, 1268, 1269, 1270, 1274, 1275, 1276, 1277, 1278, 1279, 1284, 1286, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1315, 1316, 1434];[12, 70, 71, 77, 78, 80, 81, 147, 329, 330, 331, 337, 341, 347, 349, 373, 378, 383, 402, 404, 405, 410, 424, 431, 676, 697, 800, 802, 806, 807, 818, 1264, 1267, 1268, 1269, 1270, 1274, 1275, 1276, 1277, 1278, 1279, 1284, 1286, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1315, 1316, 1434];0
org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest.testGetEntry;[349, 802, 1434];[349, 802, 1434];0
org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest.testGetSubVector;[331, 349, 802, 1273, 1434];[331, 349, 802, 1273, 1434];0
org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest.testIterator;[70, 71, 331, 349, 697, 802, 1264, 1434];[70, 71, 331, 349, 697, 802, 1264, 1434];0
org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest.testSetEntry;[70, 71, 802, 1434];[70, 71, 802, 1434];0
org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest.testSetSubVector;[70, 71, 802, 1434];[70, 71, 802, 1434];0
org.apache.commons.math3.linear.UnmodifiableArrayRealVectorTest.testSparseIterator;[70, 71, 331, 349, 697, 802, 1434, 1565];[70, 71, 331, 349, 697, 802, 1434, 1565];0
org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testAddToEntry;[70, 71, 1265, 1434, 1624, 1627, 1631, 1632, 1636, 1647, 1648, 1649, 1653];[70, 71, 1265, 1434, 1624, 1627, 1631, 1632, 1636, 1647, 1648, 1649, 1653];0
org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testAllButExcluded;[12, 70, 71, 77, 78, 80, 81, 147, 210, 219, 225, 373, 402, 807, 1264, 1265, 1270, 1271, 1272, 1301, 1302, 1304, 1305, 1306, 1307, 1310, 1311, 1312, 1313, 1434, 1554, 1555, 1559, 1561, 1562, 1563, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1637, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1671, 1672, 1673, 1674];[12, 70, 71, 77, 78, 80, 81, 147, 210, 219, 225, 373, 402, 807, 1264, 1265, 1270, 1271, 1272, 1301, 1302, 1304, 1305, 1306, 1307, 1310, 1311, 1312, 1313, 1434, 1554, 1555, 1559, 1561, 1562, 1563, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1637, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1671, 1672, 1673, 1674];0
org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testGetEntry;[1265, 1434, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1649, 1650, 1653];[1265, 1434, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1649, 1650, 1653];0
org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testGetSubVector;[1265, 1434, 1619, 1620, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1647, 1648, 1649, 1650, 1653, 1660];[1265, 1434, 1619, 1620, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1647, 1648, 1649, 1650, 1653, 1660];0
org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testIterator;[70, 71, 1264, 1265, 1434, 1620, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1647, 1648, 1649, 1650, 1651, 1653, 1654];[70, 71, 1264, 1265, 1434, 1620, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1647, 1648, 1649, 1650, 1651, 1653, 1654];0
org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSetEntry;[70, 71, 1265, 1434, 1622, 1624, 1626, 1627, 1631, 1632, 1636, 1647, 1648, 1649, 1653];[70, 71, 1265, 1434, 1622, 1624, 1626, 1627, 1631, 1632, 1636, 1647, 1648, 1649, 1653];0
org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSetSubVector;[70, 71, 1265, 1434, 1622, 1624, 1626, 1627, 1631, 1632, 1636, 1647, 1648, 1649, 1653];[70, 71, 1265, 1434, 1622, 1624, 1626, 1627, 1631, 1632, 1636, 1647, 1648, 1649, 1653];0
org.apache.commons.math3.linear.UnmodifiableOpenMapRealVectorTest.testSparseIterator;[70, 71, 1265, 1434, 1619, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1649, 1650, 1651, 1653, 1654, 1689];[70, 71, 1265, 1434, 1619, 1620, 1624, 1625, 1627, 1631, 1632, 1636, 1647, 1648, 1649, 1650, 1651, 1653, 1654, 1689];0
org.apache.commons.math3.ml.clustering.DBSCANClustererTest.testCluster;[12, 61, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701];[12, 61, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701];0
org.apache.commons.math3.ml.clustering.DBSCANClustererTest.testGetEps;[1702];[1702];0
org.apache.commons.math3.ml.clustering.DBSCANClustererTest.testGetMinPts;[1703];[1703];0
org.apache.commons.math3.ml.clustering.DBSCANClustererTest.testNegativeEps;[70, 71];[70, 71];0
org.apache.commons.math3.ml.clustering.DBSCANClustererTest.testNegativeMinPts;[70, 71];[70, 71];0
org.apache.commons.math3.ml.clustering.DBSCANClustererTest.testNullDataset;[61, 70, 71, 1695];[61, 70, 71, 1695];0
org.apache.commons.math3.ml.clustering.DBSCANClustererTest.testSingleLink;[12, 61, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701];[12, 61, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701];0
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClustererTest.testCertainSpace;[12, 61, 1692, 1694, 1697, 1698, 1699, 1700, 1704, 1705, 1706, 1707, 1708, 1709];[12, 61, 1692, 1694, 1697, 1698, 1699, 1700, 1704, 1705, 1706, 1707, 1708, 1709];0
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClustererTest.testPerformClusterAnalysisDegenerate;[12, 61, 1692, 1694, 1697, 1698, 1699, 1700, 1701, 1704, 1705, 1706, 1707, 1708, 1709];[12, 61, 1692, 1694, 1697, 1698, 1699, 1700, 1701, 1704, 1705, 1706, 1707, 1708, 1709];0
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClustererTest.testPerformClusterAnalysisToManyClusters;[61, 70, 71, 1709];[61, 70, 71, 1709];0
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClustererTest.testSmallDistances;[12, 61, 1692, 1697, 1698, 1699, 1700, 1701, 1705, 1706, 1707, 1708, 1709];[12, 61, 1692, 1697, 1698, 1699, 1700, 1701, 1705, 1706, 1707, 1708, 1709];0
org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClustererTest.dimension2;[12, 61, 1692, 1694, 1697, 1698, 1699, 1700, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715];[12, 61, 1692, 1694, 1697, 1698, 1699, 1700, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715];0
org.apache.commons.math3.ml.distance.CanberraDistanceTest.test;[1716];[1716];0
org.apache.commons.math3.ml.distance.CanberraDistanceTest.testZero;[1716];[1716];0
org.apache.commons.math3.ml.distance.CanberraDistanceTest.testZero2;[1716];[1716];0
org.apache.commons.math3.ml.distance.ChebyshevDistanceTest.test;[1717, 1718];[1717, 1718];0
org.apache.commons.math3.ml.distance.ChebyshevDistanceTest.testZero;[1717, 1718];[1717, 1718];0
org.apache.commons.math3.ml.distance.EuclideanDistanceTest.test;[12, 1692, 1700];[12, 1692, 1700];0
org.apache.commons.math3.ml.distance.EuclideanDistanceTest.testZero;[12, 1692, 1700];[12, 1692, 1700];0
org.apache.commons.math3.ml.distance.ManhattanDistanceTest.test;[1719, 1720];[1719, 1720];0
org.apache.commons.math3.ml.distance.ManhattanDistanceTest.testZero;[1719, 1720];[1719, 1720];0
org.apache.commons.math3.ode.ContinuousOutputModelTest.testBoundaries;[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777];[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777];0
org.apache.commons.math3.ode.ContinuousOutputModelTest.testErrorConditions;[12, 70, 71, 246, 255, 1721, 1729, 1740, 1741, 1745, 1746, 1747, 1748, 1752, 1756, 1757, 1758, 1760, 1761, 1765, 1766, 1767, 1770, 1771, 1773, 1776, 1778, 1779, 1780];[12, 70, 71, 246, 255, 1721, 1729, 1740, 1741, 1745, 1746, 1747, 1748, 1752, 1756, 1757, 1758, 1760, 1761, 1765, 1766, 1767, 1770, 1771, 1773, 1776, 1778, 1779, 1780];0
org.apache.commons.math3.ode.ContinuousOutputModelTest.testModelsMerging;[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790];[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790];0
org.apache.commons.math3.ode.ContinuousOutputModelTest.testRandomAccess;[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1780];[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1780];0
org.apache.commons.math3.ode.events.EventFilterTest.testDecreasingOnly;[12, 18, 46, 53, 61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806];[12, 18, 46, 53, 61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806];0
org.apache.commons.math3.ode.events.EventFilterTest.testHistoryDecreasingBackward;[76, 77, 78, 79, 80, 81, 105, 107, 108, 1792, 1793, 1804, 1806, 1807];[76, 77, 78, 79, 80, 81, 105, 107, 108, 1792, 1793, 1804, 1806, 1807];0
org.apache.commons.math3.ode.events.EventFilterTest.testHistoryDecreasingForward;[76, 77, 78, 79, 80, 81, 105, 107, 108, 1792, 1793, 1804, 1806, 1807];[76, 77, 78, 79, 80, 81, 105, 107, 108, 1792, 1793, 1804, 1806, 1807];0
org.apache.commons.math3.ode.events.EventFilterTest.testHistoryIncreasingBackward;[76, 77, 78, 79, 80, 81, 105, 107, 108, 1792, 1793, 1804, 1806, 1807];[76, 77, 78, 79, 80, 81, 105, 107, 108, 1792, 1793, 1804, 1806, 1807];0
org.apache.commons.math3.ode.events.EventFilterTest.testHistoryIncreasingForward;[76, 77, 78, 79, 80, 81, 105, 107, 108, 1792, 1793, 1804, 1806, 1807];[76, 77, 78, 79, 80, 81, 105, 107, 108, 1792, 1793, 1804, 1806, 1807];0
org.apache.commons.math3.ode.events.EventFilterTest.testIncreasingOnly;[12, 18, 46, 53, 61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806];[12, 18, 46, 53, 61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806];0
org.apache.commons.math3.ode.events.EventFilterTest.testTwoOppositeFilters;[12, 18, 46, 53, 61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806];[12, 18, 46, 53, 61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806];0
org.apache.commons.math3.ode.events.EventStateTest.closeEvents;[61, 93, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 493, 494, 495, 496, 497, 519, 1721, 1729, 1740, 1741, 1746, 1747, 1752, 1757, 1760, 1765, 1766, 1796, 1797, 1799, 1800];[61, 93, 246, 247, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 493, 494, 495, 496, 497, 519, 1721, 1729, 1740, 1741, 1746, 1747, 1752, 1757, 1760, 1765, 1766, 1796, 1797, 1799, 1800];0
org.apache.commons.math3.ode.events.EventStateTest.testIssue695;[12, 18, 46, 53, 61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1808];[12, 18, 46, 53, 61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1808];0
org.apache.commons.math3.ode.events.OverlappingEventsTest.testOverlappingEvents0;[12, 18, 46, 53, 61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1795, 1796, 1797, 1799, 1800, 1801, 1802, 1805];[12, 18, 46, 53, 61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1795, 1796, 1797, 1799, 1800, 1801, 1802, 1805];0
org.apache.commons.math3.ode.events.OverlappingEventsTest.testOverlappingEvents1;[12, 18, 46, 53, 61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1795, 1796, 1797, 1799, 1800, 1801, 1802, 1805];[12, 18, 46, 53, 61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 483, 486, 493, 494, 495, 496, 497, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1795, 1796, 1797, 1799, 1800, 1801, 1802, 1805];0
org.apache.commons.math3.ode.events.ReappearingEventTest.testDormandPrince;[12, 18, 46, 53, 93, 246, 250, 255, 474, 483, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1796, 1797, 1800, 1801, 1805];[12, 18, 46, 53, 93, 246, 250, 255, 474, 483, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1796, 1797, 1800, 1801, 1805];0
org.apache.commons.math3.ode.events.ReappearingEventTest.testGragg;[12, 18, 46, 53, 93, 112, 246, 250, 255, 474, 483, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1791, 1796, 1797, 1800, 1801, 1805, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822];[12, 18, 46, 53, 93, 112, 246, 250, 255, 474, 483, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1791, 1796, 1797, 1800, 1801, 1805, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822];0
org.apache.commons.math3.ode.FirstOrderConverterTest.testBigStep;[76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1739, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1823, 1824, 1825, 1826, 1827];[76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1739, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1823, 1824, 1825, 1826, 1827];0
org.apache.commons.math3.ode.FirstOrderConverterTest.testDecreasingSteps;[46, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1739, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1823, 1824, 1825, 1826, 1827];[46, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1739, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1823, 1824, 1825, 1826, 1827];0
org.apache.commons.math3.ode.FirstOrderConverterTest.testDoubleDimension;[1824];[1824];0
org.apache.commons.math3.ode.FirstOrderConverterTest.testSmallStep;[76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1739, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1823, 1824, 1825, 1826, 1827];[76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1739, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1823, 1824, 1825, 1826, 1827];0
org.apache.commons.math3.ode.JacobianMatricesTest.testAnalyticalDifferentiation;[12, 18, 46, 53, 93, 246, 250, 255, 1712, 1713, 1714, 1722, 1723, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853];[12, 18, 46, 53, 93, 246, 250, 255, 1712, 1713, 1714, 1722, 1723, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853];0
org.apache.commons.math3.ode.JacobianMatricesTest.testFinalResult;[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1831, 1832, 1833, 1836, 1837, 1839, 1840, 1841, 1843, 1844, 1846, 1848, 1850, 1854, 1855];[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1831, 1832, 1833, 1836, 1837, 1839, 1840, 1841, 1843, 1844, 1846, 1848, 1850, 1854, 1855];0
org.apache.commons.math3.ode.JacobianMatricesTest.testHighAccuracyExternalDifferentiation;[12, 18, 46, 53, 93, 246, 250, 255, 1712, 1713, 1714, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1828, 1829, 1830, 1834, 1835, 1838, 1840, 1842, 1845, 1847, 1849, 1851, 1852, 1853, 1854];[12, 18, 46, 53, 93, 246, 250, 255, 1712, 1713, 1714, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1828, 1829, 1830, 1834, 1835, 1838, 1840, 1842, 1845, 1847, 1849, 1851, 1852, 1853, 1854];0
org.apache.commons.math3.ode.JacobianMatricesTest.testInternalDifferentiation;[12, 18, 46, 53, 93, 246, 250, 255, 1712, 1713, 1714, 1722, 1723, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1828, 1829, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1856, 1857, 1858, 1859, 1860, 1861];[12, 18, 46, 53, 93, 246, 250, 255, 1712, 1713, 1714, 1722, 1723, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1828, 1829, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1856, 1857, 1858, 1859, 1860, 1861];0
org.apache.commons.math3.ode.JacobianMatricesTest.testLowAccuracyExternalDifferentiation;[12, 18, 46, 53, 93, 246, 250, 255, 1712, 1713, 1714, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1852, 1853];[12, 18, 46, 53, 93, 246, 250, 255, 1712, 1713, 1714, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1852, 1853];0
org.apache.commons.math3.ode.JacobianMatricesTest.testParameterizable;[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1832, 1833, 1836, 1837, 1839, 1840, 1841, 1843, 1844, 1846, 1848, 1850, 1855, 1856, 1857, 1858, 1859, 1860, 1861];[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1832, 1833, 1836, 1837, 1839, 1840, 1841, 1843, 1844, 1846, 1848, 1850, 1855, 1856, 1857, 1858, 1859, 1860, 1861];0
org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest.backward;[12, 18, 46, 53, 93, 246, 247, 250, 255, 355, 373, 378, 383, 384, 392, 396, 401, 402, 404, 405, 417, 420, 422, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1202, 1203, 1214, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886];[12, 18, 46, 53, 93, 246, 247, 250, 255, 355, 373, 378, 383, 384, 392, 396, 401, 402, 404, 405, 417, 420, 422, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1202, 1203, 1214, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886];0
org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest.dimensionCheck;[12, 18, 46, 53, 70, 71, 246, 255, 1739, 1745, 1747, 1756, 1761, 1767, 1771, 1787, 1862, 1867, 1874, 1878];[12, 18, 46, 53, 70, 71, 246, 255, 1739, 1745, 1747, 1756, 1761, 1767, 1771, 1787, 1862, 1867, 1874, 1878];0
org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest.exceedMaxEvaluations;[12, 18, 46, 53, 70, 71, 93, 246, 247, 250, 255, 262, 355, 373, 378, 383, 384, 392, 396, 401, 402, 404, 405, 417, 420, 422, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1202, 1203, 1214, 1721, 1723, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886];[12, 18, 46, 53, 70, 71, 93, 246, 247, 250, 255, 262, 355, 373, 378, 383, 384, 392, 396, 401, 402, 404, 405, 417, 420, 422, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1202, 1203, 1214, 1721, 1723, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886];0
org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest.polynomial;[12, 18, 46, 53, 61, 93, 246, 247, 250, 255, 294, 295, 296, 298, 302, 304, 305, 306, 307, 308, 355, 373, 378, 383, 384, 392, 396, 401, 402, 404, 405, 417, 420, 422, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 734, 737, 739, 741, 743, 747, 748, 1202, 1203, 1214, 1241, 1243, 1248, 1332, 1340, 1343, 1348, 1380, 1383, 1474, 1475, 1531, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887];[12, 18, 46, 53, 61, 93, 246, 247, 250, 255, 294, 295, 296, 298, 302, 304, 305, 306, 307, 308, 355, 373, 378, 383, 384, 392, 396, 401, 402, 404, 405, 417, 420, 422, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 734, 737, 739, 741, 743, 747, 748, 1202, 1203, 1214, 1241, 1243, 1248, 1332, 1340, 1343, 1348, 1380, 1383, 1474, 1475, 1531, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1887];0
org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest.testIncreasingTolerance;[12, 18, 46, 53, 93, 246, 247, 250, 255, 355, 373, 378, 383, 384, 392, 396, 401, 402, 404, 405, 417, 420, 422, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1202, 1203, 1214, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886];[12, 18, 46, 53, 93, 246, 247, 250, 255, 355, 373, 378, 383, 384, 392, 396, 401, 402, 404, 405, 417, 420, 422, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1202, 1203, 1214, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886];0
org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegratorTest.testMinStep;[12, 18, 46, 53, 70, 71, 246, 250, 255, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1783, 1786, 1787, 1788, 1789, 1790, 1862, 1865, 1866, 1867, 1872, 1874, 1875, 1878, 1884, 1885];[12, 18, 46, 53, 70, 71, 246, 250, 255, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1783, 1786, 1787, 1788, 1789, 1790, 1862, 1865, 1866, 1867, 1872, 1874, 1875, 1878, 1884, 1885];0
org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest.backward;[12, 18, 46, 53, 93, 246, 247, 250, 255, 355, 373, 378, 383, 392, 396, 401, 402, 404, 405, 417, 420, 422, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1202, 1203, 1214, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1888];[12, 18, 46, 53, 93, 246, 247, 250, 255, 355, 373, 378, 383, 392, 396, 401, 402, 404, 405, 417, 420, 422, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1202, 1203, 1214, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1888];0
org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest.dimensionCheck;[12, 18, 46, 53, 70, 71, 246, 255, 1739, 1745, 1747, 1756, 1761, 1767, 1771, 1787, 1862, 1867, 1874, 1878];[12, 18, 46, 53, 70, 71, 246, 255, 1739, 1745, 1747, 1756, 1761, 1767, 1771, 1787, 1862, 1867, 1874, 1878];0
org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest.exceedMaxEvaluations;[12, 18, 46, 53, 70, 71, 93, 246, 247, 250, 255, 262, 355, 373, 378, 383, 392, 396, 401, 402, 404, 405, 417, 420, 422, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1202, 1203, 1214, 1721, 1723, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1885, 1886, 1888];[12, 18, 46, 53, 70, 71, 93, 246, 247, 250, 255, 262, 355, 373, 378, 383, 392, 396, 401, 402, 404, 405, 417, 420, 422, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1202, 1203, 1214, 1721, 1723, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1885, 1886, 1888];0
org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest.polynomial;[12, 18, 46, 53, 93, 246, 247, 250, 255, 355, 373, 378, 383, 392, 396, 401, 402, 404, 405, 417, 420, 422, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1202, 1203, 1214, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1885, 1886, 1888];[12, 18, 46, 53, 93, 246, 247, 250, 255, 355, 373, 378, 383, 392, 396, 401, 402, 404, 405, 417, 420, 422, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1202, 1203, 1214, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1885, 1886, 1888];0
org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest.testIncreasingTolerance;[12, 18, 46, 53, 93, 246, 247, 250, 255, 355, 373, 378, 383, 392, 396, 401, 402, 404, 405, 417, 420, 422, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1202, 1203, 1214, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1885, 1886, 1888];[12, 18, 46, 53, 93, 246, 247, 250, 255, 355, 373, 378, 383, 392, 396, 401, 402, 404, 405, 417, 420, 422, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1202, 1203, 1214, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1885, 1886, 1888];0
org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegratorTest.testMinStep;[12, 18, 46, 53, 70, 71, 246, 250, 255, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1783, 1786, 1787, 1788, 1789, 1790, 1862, 1865, 1866, 1867, 1872, 1874, 1875, 1878, 1885, 1888];[12, 18, 46, 53, 70, 71, 246, 250, 255, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1783, 1786, 1787, 1788, 1789, 1790, 1862, 1865, 1866, 1867, 1872, 1874, 1875, 1878, 1885, 1888];0
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward;[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1823, 1826, 1827, 1873, 1880, 1889];[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1823, 1826, 1827, 1873, 1880, 1889];0
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep;[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1823, 1826, 1827, 1873, 1889];[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1823, 1826, 1827, 1873, 1889];0
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps;[12, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1823, 1826, 1827, 1865, 1873, 1889, 1890];[12, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1823, 1826, 1827, 1865, 1873, 1889, 1890];0
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler;[12, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1823, 1826, 1827];[12, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1823, 1826, 1827];0
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testMissedEndEvent;[53, 61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1823, 1826, 1827];[53, 61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1823, 1826, 1827];0
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSanityChecks;[70, 71, 246, 255, 1734, 1739, 1742, 1747, 1755, 1756, 1763, 1827];[70, 71, 246, 255, 1734, 1739, 1742, 1747, 1755, 1756, 1763, 1827];0
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep;[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1823, 1826, 1827, 1873, 1880, 1889];[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1823, 1826, 1827, 1873, 1880, 1889];0
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize;[93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1823, 1826, 1827];[93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1823, 1826, 1827];0
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.derivativesConsistency;[12, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1823, 1826, 1827, 1886];[12, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1823, 1826, 1827, 1886];0
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.serialization;[12, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1721, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1773, 1774, 1776, 1777, 1780, 1823, 1826, 1827, 1891, 1892, 1893, 1894];[12, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1721, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1773, 1774, 1776, 1777, 1780, 1823, 1826, 1827, 1891, 1892, 1893, 1894];0
org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest.testBackward;[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1873, 1880];[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1873, 1880];0
org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest.testDimensionCheck;[12, 70, 71, 246, 255, 1739, 1745, 1747, 1748, 1756, 1761, 1767, 1771];[12, 70, 71, 246, 255, 1739, 1745, 1747, 1748, 1756, 1761, 1767, 1771];0
org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest.testEvents;[12, 18, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1865, 1873, 1890];[12, 18, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1865, 1873, 1890];0
org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance;[12, 18, 46, 53, 93, 246, 247, 250, 255, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1869, 1873, 1895, 1896, 1897];[12, 18, 46, 53, 93, 246, 247, 250, 255, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1869, 1873, 1895, 1896, 1897];0
org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest.testKepler;[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 246, 247, 250, 255, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1869];[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 246, 247, 250, 255, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1869];0
org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest.testMinStep;[12, 18, 46, 53, 70, 71, 246, 250, 255, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776];[12, 18, 46, 53, 70, 71, 246, 250, 255, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776];0
org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep;[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1808, 1880];[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1808, 1880];0
org.apache.commons.math3.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps;[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777];[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777];0
org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest.checkClone;[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781];[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781];0
org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest.derivativesConsistency;[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1886];[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1886];0
org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolatorTest.serialization;[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1780, 1891, 1892, 1893, 1894];[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1780, 1891, 1892, 1893, 1894];0
org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.testBackward;[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1873, 1880];[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1873, 1880];0
org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.testDimensionCheck;[12, 70, 71, 246, 255, 1739, 1745, 1747, 1756, 1761, 1767, 1771, 1787];[12, 70, 71, 246, 255, 1739, 1745, 1747, 1756, 1761, 1767, 1771, 1787];0
org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.testEvents;[12, 18, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1865, 1873, 1890];[12, 18, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1865, 1873, 1890];0
org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.testEventsScheduling;[12, 18, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805];[12, 18, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805];0
org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance;[12, 18, 46, 53, 93, 246, 247, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1869, 1873];[12, 18, 46, 53, 93, 246, 247, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1869, 1873];0
org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.testKepler;[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 246, 247, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1869];[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 246, 247, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1869];0
org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.testMinStep;[12, 18, 46, 53, 70, 71, 246, 250, 255, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1783, 1786, 1787, 1788, 1789, 1790];[12, 18, 46, 53, 70, 71, 246, 250, 255, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1783, 1786, 1787, 1788, 1789, 1790];0
org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.testMissedEndEvent;[12, 18, 46, 53, 61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1808];[12, 18, 46, 53, 61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1808];0
org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.testNullIntervalCheck;[12, 70, 71, 246, 255, 1734, 1736, 1739, 1742, 1745, 1747, 1755, 1756, 1761, 1763, 1767, 1771, 1775, 1787];[12, 70, 71, 246, 255, 1734, 1736, 1739, 1742, 1745, 1747, 1755, 1756, 1761, 1763, 1767, 1771, 1775, 1787];0
org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.testTooLargeFirstStep;[12, 18, 46, 53, 93, 246, 250, 255, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790];[12, 18, 46, 53, 93, 246, 250, 255, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790];0
org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.testUnstableDerivative;[12, 46, 61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805];[12, 46, 61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805];0
org.apache.commons.math3.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps;[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1880];[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1880];0
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest.checklone;[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790];[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790];0
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest.derivativesConsistency;[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1886];[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1886];0
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolatorTest.serialization;[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1721, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1780, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1891, 1892, 1893, 1894, 1898, 1899];[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1721, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1780, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1891, 1892, 1893, 1894, 1898, 1899];0
org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest.testBackward;[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1880, 1889, 1900, 1901];[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1880, 1889, 1900, 1901];0
org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest.testBigStep;[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1889, 1900, 1901];[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1889, 1900, 1901];0
org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps;[12, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1827, 1873, 1889, 1900, 1901];[12, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1827, 1873, 1889, 1900, 1901];0
org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest.testDimensionCheck;[70, 71, 246, 255, 1739, 1747, 1756];[70, 71, 246, 255, 1739, 1747, 1756];0
org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest.testSmallStep;[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1880, 1889, 1900, 1901];[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1880, 1889, 1900, 1901];0
org.apache.commons.math3.ode.nonstiff.EulerIntegratorTest.testStepSize;[93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1827, 1900, 1901];[93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1827, 1900, 1901];0
org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest.derivativesConsistency;[12, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1827, 1886, 1900, 1901];[12, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1827, 1886, 1900, 1901];0
org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest.interpolationAtBounds;[246, 255, 1721, 1729, 1740, 1741, 1743, 1746, 1747, 1752, 1756, 1757, 1759, 1760, 1765, 1774, 1901];[246, 255, 1721, 1729, 1740, 1741, 1743, 1746, 1747, 1752, 1756, 1757, 1759, 1760, 1765, 1774, 1901];0
org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest.interpolationInside;[246, 255, 1729, 1741, 1743, 1746, 1747, 1752, 1756, 1757, 1759, 1760, 1765, 1774, 1901];[246, 255, 1729, 1741, 1743, 1746, 1747, 1752, 1756, 1757, 1759, 1760, 1765, 1774, 1901];0
org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest.noReset;[246, 255, 1729, 1741, 1743, 1746, 1747, 1752, 1756, 1757, 1759, 1760, 1765, 1774, 1901];[246, 255, 1729, 1741, 1743, 1746, 1747, 1752, 1756, 1757, 1759, 1760, 1765, 1774, 1901];0
org.apache.commons.math3.ode.nonstiff.EulerStepInterpolatorTest.serialization;[53, 93, 246, 250, 255, 1721, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1773, 1774, 1776, 1777, 1780, 1827, 1891, 1892, 1893, 1894, 1900, 1901];[53, 93, 246, 250, 255, 1721, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1773, 1774, 1776, 1777, 1780, 1827, 1891, 1892, 1893, 1894, 1900, 1901];0
org.apache.commons.math3.ode.nonstiff.GillIntegratorTest.testBackward;[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1880, 1889, 1902, 1903];[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1880, 1889, 1902, 1903];0
org.apache.commons.math3.ode.nonstiff.GillIntegratorTest.testBigStep;[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1889, 1902, 1903];[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1889, 1902, 1903];0
org.apache.commons.math3.ode.nonstiff.GillIntegratorTest.testDecreasingSteps;[12, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1827, 1873, 1889, 1902, 1903];[12, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1827, 1873, 1889, 1902, 1903];0
org.apache.commons.math3.ode.nonstiff.GillIntegratorTest.testDimensionCheck;[12, 70, 71, 246, 255, 1739, 1747, 1756];[12, 70, 71, 246, 255, 1739, 1747, 1756];0
org.apache.commons.math3.ode.nonstiff.GillIntegratorTest.testKepler;[12, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1827, 1902, 1903];[12, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1827, 1902, 1903];0
org.apache.commons.math3.ode.nonstiff.GillIntegratorTest.testSmallStep;[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1880, 1889, 1902, 1903];[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1880, 1889, 1902, 1903];0
org.apache.commons.math3.ode.nonstiff.GillIntegratorTest.testStepSize;[93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1827, 1902, 1903];[93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1827, 1902, 1903];0
org.apache.commons.math3.ode.nonstiff.GillIntegratorTest.testUnstableDerivative;[61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1827, 1902, 1903];[61, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1827, 1902, 1903];0
org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest.serialization;[12, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1721, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1773, 1774, 1776, 1777, 1780, 1827, 1891, 1892, 1893, 1894, 1902, 1903];[12, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1721, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1773, 1774, 1776, 1777, 1780, 1827, 1891, 1892, 1893, 1894, 1902, 1903];0
org.apache.commons.math3.ode.nonstiff.GillStepInterpolatorTest.testDerivativesConsistency;[12, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1827, 1886, 1902, 1903];[12, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1827, 1886, 1902, 1903];0
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.testBackward;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1781, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1873, 1880];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1781, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1873, 1880];0
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.testDimensionCheck;[12, 70, 71, 246, 255, 1739, 1745, 1756, 1811, 1812, 1817, 1818, 1822];[12, 70, 71, 246, 255, 1739, 1745, 1756, 1811, 1812, 1817, 1818, 1822];0
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents;[12, 18, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 112, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1781, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1865, 1873, 1890];[12, 18, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 112, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1781, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1865, 1873, 1890];0
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIncreasingTolerance;[12, 18, 46, 53, 93, 112, 246, 247, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1781, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1869, 1873];[12, 18, 46, 53, 93, 112, 246, 247, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1781, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1869, 1873];0
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIntegratorControls;[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1781, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1873];[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1781, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1873];0
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIssue596;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886];0
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.testKepler;[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 112, 246, 247, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1781, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1869];[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 112, 246, 247, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1781, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1869];0
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.testMinStep;[12, 18, 46, 53, 70, 71, 112, 246, 250, 255, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1755, 1756, 1757, 1760, 1763, 1764, 1769, 1772, 1775, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1817, 1818, 1822];[12, 18, 46, 53, 70, 71, 112, 246, 250, 255, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1755, 1756, 1757, 1760, 1763, 1764, 1769, 1772, 1775, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1817, 1818, 1822];0
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.testNullIntervalCheck;[12, 70, 71, 246, 255, 1734, 1739, 1742, 1745, 1755, 1756, 1763, 1775, 1809, 1811, 1812, 1817, 1818, 1822];[12, 70, 71, 246, 255, 1734, 1739, 1742, 1745, 1755, 1756, 1763, 1775, 1809, 1811, 1812, 1817, 1818, 1822];0
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.testTooLargeFirstStep;[12, 18, 46, 53, 112, 246, 250, 255, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1739, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822];[12, 18, 46, 53, 112, 246, 250, 255, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1739, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822];0
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.testUnstableDerivative;[12, 18, 46, 53, 61, 93, 112, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822];[12, 18, 46, 53, 61, 93, 112, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822];0
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegratorTest.testVariableSteps;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1880];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1880];0
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.checklone;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1760, 1763, 1764, 1765, 1766, 1769, 1770, 1772, 1775, 1776, 1777, 1781, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1904];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1760, 1763, 1764, 1765, 1766, 1769, 1770, 1772, 1775, 1776, 1777, 1781, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1904];0
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.derivativesConsistency;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886];0
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.serialization;[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1760, 1763, 1764, 1765, 1766, 1769, 1770, 1772, 1773, 1775, 1776, 1777, 1780, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1891, 1892, 1904, 1905, 1906];[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1760, 1763, 1764, 1765, 1766, 1769, 1770, 1772, 1773, 1775, 1776, 1777, 1780, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1891, 1892, 1904, 1905, 1906];0
org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest.testBackward;[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1873, 1880, 1907, 1908, 1909, 1910];[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1873, 1880, 1907, 1908, 1909, 1910];0
org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest.testEvents;[12, 18, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1865, 1873, 1890, 1907, 1908, 1909, 1910];[12, 18, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1865, 1873, 1890, 1907, 1908, 1909, 1910];0
org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors;[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1723, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1781, 1791, 1796, 1797, 1800, 1801, 1805, 1873, 1907, 1908, 1909, 1910];[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1723, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1781, 1791, 1796, 1797, 1800, 1801, 1805, 1873, 1907, 1908, 1909, 1910];0
org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence;[12, 18, 46, 53, 61, 70, 71, 93, 246, 250, 252, 255, 260, 262, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1781, 1791, 1796, 1797, 1800, 1801, 1805, 1873, 1907, 1908, 1909, 1910];[12, 18, 46, 53, 61, 70, 71, 93, 246, 250, 252, 255, 260, 262, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1781, 1791, 1796, 1797, 1800, 1801, 1805, 1873, 1907, 1908, 1909, 1910];0
org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance;[12, 18, 46, 53, 93, 246, 247, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1869, 1873, 1907, 1908, 1909, 1910];[12, 18, 46, 53, 93, 246, 247, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1869, 1873, 1907, 1908, 1909, 1910];0
org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest.testKepler;[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1873, 1880, 1907, 1908, 1909, 1910];[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1873, 1880, 1907, 1908, 1909, 1910];0
org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest.testMinStep;[12, 18, 46, 53, 70, 71, 246, 250, 255, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1907, 1908, 1910];[12, 18, 46, 53, 70, 71, 246, 250, 255, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1907, 1908, 1910];0
org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest.testSanityChecks;[12, 70, 71, 246, 255, 1734, 1736, 1739, 1742, 1745, 1747, 1751, 1755, 1756, 1760, 1761, 1763, 1767, 1771, 1775, 1908];[12, 70, 71, 246, 255, 1734, 1736, 1739, 1742, 1745, 1747, 1751, 1755, 1756, 1760, 1761, 1763, 1767, 1771, 1775, 1908];0
org.apache.commons.math3.ode.nonstiff.HighamHall54IntegratorTest.testWrongDerivative;[12, 246, 250, 255, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1767, 1770, 1771, 1772, 1774, 1775, 1776, 1907, 1908];[12, 246, 250, 255, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1739, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1767, 1770, 1771, 1772, 1774, 1775, 1776, 1907, 1908];0
org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest.checkClone;[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1907, 1908, 1909, 1910];[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1907, 1908, 1909, 1910];0
org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest.derivativesConsistency;[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1886, 1907, 1908, 1909, 1910];[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1886, 1907, 1908, 1909, 1910];0
org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolatorTest.serialization;[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1721, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1780, 1891, 1892, 1893, 1894, 1907, 1908, 1909, 1910];[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1721, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1780, 1891, 1892, 1893, 1894, 1907, 1908, 1909, 1910];0
org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest.testBackward;[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1880, 1889, 1911, 1912];[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1880, 1889, 1911, 1912];0
org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest.testBigStep;[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1889, 1911, 1912];[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1889, 1911, 1912];0
org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps;[12, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1827, 1873, 1889, 1911, 1912];[12, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1827, 1873, 1889, 1911, 1912];0
org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest.testDimensionCheck;[70, 71, 246, 255, 1739, 1747, 1756];[70, 71, 246, 255, 1739, 1747, 1756];0
org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest.testSmallStep;[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1880, 1889, 1911, 1912];[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1880, 1889, 1911, 1912];0
org.apache.commons.math3.ode.nonstiff.MidpointIntegratorTest.testStepSize;[93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1827, 1911, 1912];[93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1827, 1911, 1912];0
org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest.serialization;[53, 93, 246, 250, 255, 1721, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1773, 1774, 1776, 1777, 1780, 1827, 1891, 1892, 1893, 1894, 1911, 1912];[53, 93, 246, 250, 255, 1721, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1773, 1774, 1776, 1777, 1780, 1827, 1891, 1892, 1893, 1894, 1911, 1912];0
org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolatorTest.testDerivativesConsistency;[12, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1827, 1886, 1911, 1912];[12, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1827, 1886, 1911, 1912];0
org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward;[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1880, 1889, 1913, 1914];[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1880, 1889, 1913, 1914];0
org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep;[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1889, 1913, 1914];[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1889, 1913, 1914];0
org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps;[12, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1827, 1873, 1889, 1913, 1914];[12, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 479, 480, 481, 483, 484, 485, 486, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1827, 1873, 1889, 1913, 1914];0
org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest.testDimensionCheck;[70, 71, 246, 255, 1739, 1747, 1756];[70, 71, 246, 255, 1739, 1747, 1756];0
org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler;[12, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1827, 1913, 1914];[12, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1827, 1913, 1914];0
org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep;[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1880, 1889, 1913, 1914];[53, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1781, 1827, 1873, 1880, 1889, 1913, 1914];0
org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize;[93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1827, 1913, 1914];[93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1827, 1913, 1914];0
org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest.derivativesConsistency;[12, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1827, 1886, 1913, 1914];[12, 93, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1774, 1776, 1777, 1827, 1886, 1913, 1914];0
org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolatorTest.serialization;[12, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1721, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1773, 1774, 1776, 1777, 1780, 1827, 1891, 1892, 1893, 1894, 1913, 1914];[12, 76, 77, 78, 79, 80, 81, 93, 246, 250, 255, 1721, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1763, 1764, 1765, 1766, 1770, 1772, 1773, 1774, 1776, 1777, 1780, 1827, 1891, 1892, 1893, 1894, 1913, 1914];0
org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest.testFixedState;[1729, 1741, 1746, 1747, 1752, 1757, 1760, 1765];[1729, 1741, 1746, 1747, 1752, 1757, 1760, 1765];0
org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest.testImpossibleSerialization;[1729, 1746, 1747, 1757, 1760, 1770, 1892];[1729, 1746, 1747, 1757, 1760, 1770, 1892];0
org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest.testNoReset;[1729, 1741, 1746, 1747, 1752, 1757, 1760, 1765];[1729, 1741, 1746, 1747, 1752, 1757, 1760, 1765];0
org.apache.commons.math3.ode.sampling.DummyStepInterpolatorTest.testSerialization;[1729, 1741, 1746, 1747, 1752, 1757, 1758, 1760, 1765, 1770, 1891, 1892];[1729, 1741, 1746, 1747, 1752, 1757, 1758, 1760, 1765, 1770, 1891, 1892];0
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest.derivativesConsistency;[12, 18, 46, 53, 93, 246, 247, 250, 255, 355, 373, 378, 383, 384, 392, 396, 401, 402, 404, 405, 417, 420, 422, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1202, 1203, 1214, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1874, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886];[12, 18, 46, 53, 93, 246, 247, 250, 255, 355, 373, 378, 383, 384, 392, 396, 401, 402, 404, 405, 417, 420, 422, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1202, 1203, 1214, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1874, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886];0
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolatorTest.serialization;[12, 18, 46, 53, 61, 93, 246, 247, 250, 255, 355, 373, 378, 383, 384, 390, 392, 396, 401, 402, 404, 405, 417, 420, 422, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1202, 1203, 1214, 1721, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1780, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1874, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1891, 1892, 1915, 1916, 1917];[12, 18, 46, 53, 61, 93, 246, 247, 250, 255, 355, 373, 378, 383, 384, 390, 392, 396, 401, 402, 404, 405, 417, 420, 422, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 1202, 1203, 1214, 1721, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1763, 1764, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1780, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1874, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1891, 1892, 1915, 1916, 1917];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest.testIncBoth;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest.testIncBothRev;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest.testIncFirst;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest.testIncFirstRev;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest.testIncLast;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest.testIncLastRev;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest.testIncNeither;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest.testIncNeitherRev;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest.testMulBoth;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest.testMulBothRev;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest.testMulFirst;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest.testMulFirstRev;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest.testMulLast;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest.testMulLastRev;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest.testMulNeither;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputOverlapTest.testMulNeitherRev;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest.testIncBoth;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest.testIncBothRev;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest.testIncFirst;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest.testIncFirstRev;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest.testIncLast;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest.testIncLastRev;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest.testIncNeither;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest.testIncNeitherRev;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest.testMulBoth;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest.testMulBothRev;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest.testMulFirst;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest.testMulFirstRev;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest.testMulLast;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest.testMulLastRev;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest.testMulNeither;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerOutputTest.testMulNeitherRev;[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 112, 246, 250, 255, 1721, 1723, 1724, 1727, 1729, 1730, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1760, 1763, 1764, 1765, 1766, 1769, 1772, 1775, 1777, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerTest.testBeforeEnd;[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.ode.sampling.StepNormalizerTest.testBoundaries;[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];[12, 18, 46, 53, 93, 246, 250, 255, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1776, 1777, 1886, 1918, 1919, 1920, 1921, 1922, 1923, 1924];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testDegeneracy;[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 803, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969];[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 803, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testEpsilon;[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971];[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testInfeasibleSolution;[70, 71, 93, 98, 246, 250, 255, 329, 331, 341, 345, 347, 349, 373, 376, 384, 386, 392, 396, 397, 402, 403, 405, 407, 409, 424, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1963, 1964, 1965, 1967, 1968, 1969, 1971];[70, 71, 93, 98, 246, 250, 255, 329, 331, 341, 345, 347, 349, 373, 376, 384, 386, 392, 396, 397, 402, 403, 405, 407, 409, 424, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1963, 1964, 1965, 1967, 1968, 1969, 1971];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testLargeModel;[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 344, 345, 347, 349, 353, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 803, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1972];[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 344, 345, 347, 349, 353, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 803, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1972];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testMath272;[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 803, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970];[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 803, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testMath286;[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970];[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testMath288;[93, 98, 246, 247, 250, 255, 265, 329, 330, 331, 345, 347, 353, 373, 384, 386, 392, 396, 397, 402, 403, 405, 407, 409, 424, 435, 695, 697, 803, 806, 807, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1973, 1974];[93, 98, 246, 247, 250, 255, 265, 329, 330, 331, 345, 347, 353, 373, 384, 386, 392, 396, 397, 402, 403, 405, 407, 409, 424, 435, 695, 697, 803, 806, 807, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1973, 1974];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testMath290GEQ;[93, 98, 246, 255, 329, 330, 331, 345, 347, 353, 354, 373, 384, 386, 392, 396, 397, 402, 405, 407, 409, 424, 435, 695, 697, 803, 806, 807, 1876, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1970, 1975];[93, 98, 246, 255, 329, 330, 331, 345, 347, 353, 354, 373, 384, 386, 392, 396, 397, 402, 405, 407, 409, 424, 435, 695, 697, 803, 806, 807, 1876, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1970, 1975];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testMath290LEQ;[70, 71, 93, 98, 246, 255, 329, 331, 341, 345, 347, 349, 373, 376, 384, 386, 392, 396, 397, 402, 405, 407, 409, 424, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1960, 1961, 1962, 1963, 1964, 1965, 1967, 1968, 1975];[70, 71, 93, 98, 246, 255, 329, 331, 341, 345, 347, 349, 373, 376, 384, 386, 392, 396, 397, 402, 405, 407, 409, 424, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1960, 1961, 1962, 1963, 1964, 1965, 1967, 1968, 1975];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testMath293;[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970];[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testMath434NegativeVariable;[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1975];[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1975];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testMath434PivotRowSelection;[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 803, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971];[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 803, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testMath434PivotRowSelection2;[61, 93, 98, 246, 247, 250, 255, 265, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1973, 1974, 1975];[61, 93, 98, 246, 247, 250, 255, 265, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1973, 1974, 1975];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testMath434UnfeasibleSolution;[70, 71, 93, 98, 246, 250, 255, 329, 331, 341, 345, 347, 349, 373, 376, 384, 386, 392, 396, 397, 402, 403, 405, 407, 409, 424, 435, 695, 803, 1210, 1224, 1876, 1925, 1926, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1963, 1964, 1965, 1967, 1968, 1969];[70, 71, 93, 98, 246, 250, 255, 329, 331, 341, 345, 347, 349, 373, 376, 384, 386, 392, 396, 397, 402, 403, 405, 407, 409, 424, 435, 695, 803, 1210, 1224, 1876, 1925, 1926, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1963, 1964, 1965, 1967, 1968, 1969];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testMath713NegativeVariable;[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 803, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970];[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 803, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testMath781;[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1975];[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1975];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testMath828;[61, 93, 98, 246, 247, 250, 255, 265, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 803, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1973, 1974];[61, 93, 98, 246, 247, 250, 255, 265, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 803, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1973, 1974];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testMath828Cycle;[61, 93, 98, 246, 247, 250, 255, 265, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 803, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1973, 1974];[61, 93, 98, 246, 247, 250, 255, 265, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 803, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1973, 1974];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testMath930;[61, 93, 98, 246, 247, 250, 255, 265, 329, 330, 331, 341, 344, 345, 347, 349, 353, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 803, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1972, 1973, 1974];[61, 93, 98, 246, 247, 250, 255, 265, 329, 330, 331, 341, 344, 345, 347, 349, 353, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 803, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1972, 1973, 1974];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testMinimization;[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 803, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971];[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 803, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testModelWithNoArtificialVars;[93, 98, 246, 250, 255, 329, 330, 331, 345, 347, 353, 354, 373, 384, 386, 392, 396, 397, 402, 403, 405, 407, 409, 424, 435, 695, 697, 803, 806, 807, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1970, 1971];[93, 98, 246, 250, 255, 329, 330, 331, 345, 347, 353, 354, 373, 384, 386, 392, 396, 397, 402, 403, 405, 407, 409, 424, 435, 695, 697, 803, 806, 807, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1970, 1971];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testRestrictVariablesToNonNegative;[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970];[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testSimplexSolver;[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970];[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testSingleVariableAndConstraint;[93, 98, 246, 250, 255, 329, 330, 331, 345, 347, 353, 354, 373, 384, 386, 392, 396, 397, 402, 403, 405, 407, 409, 424, 435, 695, 697, 803, 806, 807, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1970, 1971];[93, 98, 246, 250, 255, 329, 330, 331, 345, 347, 353, 354, 373, 384, 386, 392, 396, 397, 402, 403, 405, 407, 409, 424, 435, 695, 697, 803, 806, 807, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1969, 1970, 1971];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable;[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971];[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 354, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testTrivialModel;[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969];[61, 93, 98, 246, 250, 255, 329, 330, 331, 341, 345, 347, 349, 353, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969];0
org.apache.commons.math3.optim.linear.SimplexSolverTest.testUnboundedSolution;[61, 70, 71, 93, 98, 246, 250, 255, 329, 331, 341, 345, 347, 349, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1971];[61, 70, 71, 93, 98, 246, 250, 255, 329, 331, 341, 345, 347, 349, 373, 376, 384, 386, 390, 392, 396, 397, 402, 403, 405, 407, 409, 424, 425, 435, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1971];0
org.apache.commons.math3.optim.linear.SimplexTableauTest.testDropPhase1Objective;[61, 93, 329, 331, 341, 349, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 706, 715, 803, 806, 807, 1210, 1224, 1876, 1925, 1930, 1931, 1932, 1934, 1935, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1956, 1958, 1960, 1962, 1966, 1967, 1968, 1971, 1976];[61, 93, 329, 331, 341, 349, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 706, 715, 803, 806, 807, 1210, 1224, 1876, 1925, 1930, 1931, 1932, 1934, 1935, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1956, 1958, 1960, 1962, 1966, 1967, 1968, 1971, 1976];0
org.apache.commons.math3.optim.linear.SimplexTableauTest.testInitialization;[329, 331, 341, 349, 373, 376, 384, 392, 396, 402, 405, 424, 695, 697, 706, 715, 806, 807, 1210, 1224, 1876, 1925, 1930, 1932, 1934, 1935, 1939, 1940, 1946, 1947, 1948, 1950, 1952, 1958, 1960, 1962, 1967, 1968, 1971, 1976];[329, 331, 341, 349, 373, 376, 384, 392, 396, 402, 405, 424, 695, 697, 706, 715, 806, 807, 1210, 1224, 1876, 1925, 1930, 1932, 1934, 1935, 1939, 1940, 1946, 1947, 1948, 1950, 1952, 1958, 1960, 1962, 1967, 1968, 1971, 1976];0
org.apache.commons.math3.optim.linear.SimplexTableauTest.testSerial;[329, 331, 341, 344, 347, 349, 373, 376, 384, 392, 396, 402, 405, 424, 695, 697, 732, 806, 807, 1210, 1224, 1876, 1925, 1930, 1932, 1934, 1935, 1939, 1940, 1946, 1947, 1948, 1950, 1952, 1958, 1960, 1962, 1967, 1968, 1971, 1972, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988];[329, 331, 341, 344, 347, 349, 373, 376, 384, 392, 396, 402, 405, 424, 695, 697, 732, 806, 807, 1210, 1224, 1876, 1925, 1930, 1932, 1934, 1935, 1939, 1940, 1946, 1947, 1948, 1950, 1952, 1958, 1960, 1962, 1967, 1968, 1971, 1972, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988];0
org.apache.commons.math3.optim.linear.SimplexTableauTest.testTableauWithNoArtificialVars;[331, 373, 392, 396, 402, 405, 424, 695, 697, 706, 715, 806, 807, 1876, 1925, 1930, 1932, 1934, 1935, 1939, 1940, 1946, 1947, 1948, 1950, 1952, 1958, 1960, 1962, 1967, 1971, 1976];[331, 373, 392, 396, 402, 405, 424, 695, 697, 706, 715, 806, 807, 1876, 1925, 1930, 1932, 1934, 1935, 1939, 1940, 1946, 1947, 1948, 1950, 1952, 1958, 1960, 1962, 1967, 1971, 1976];0
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest.testBoundsUnsupported;[70, 71, 246, 386, 391, 397, 407, 409, 414, 419, 421, 422, 431, 435, 1927, 1955, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997];[70, 71, 246, 386, 391, 397, 407, 409, 414, 419, 421, 422, 431, 435, 1927, 1955, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997];0
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest.testCircleFitting;[12, 61, 93, 246, 247, 250, 252, 255, 265, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1092, 1097, 1099, 1927, 1955, 1957, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1998, 1999, 2000, 2001, 2002, 2003];[12, 61, 93, 246, 247, 250, 252, 255, 265, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1092, 1097, 1099, 1927, 1955, 1957, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1998, 1999, 2000, 2001, 2002, 2003];0
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest.testColumnsPermutation;[61, 93, 246, 247, 250, 252, 255, 265, 353, 354, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1970, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];[61, 93, 246, 247, 250, 252, 255, 265, 353, 354, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1970, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];0
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest.testIllConditioned;[61, 93, 246, 247, 250, 252, 255, 265, 353, 354, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1970, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];[61, 93, 246, 247, 250, 252, 255, 265, 353, 354, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1970, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];0
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest.testInconsistentEquations;[61, 93, 246, 247, 250, 252, 255, 265, 353, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];[61, 93, 246, 247, 250, 252, 255, 265, 353, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];0
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest.testMoreEstimatedParametersSimple;[61, 93, 246, 247, 250, 252, 255, 265, 353, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];[61, 93, 246, 247, 250, 252, 255, 265, 353, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];0
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest.testMoreEstimatedParametersUnsorted;[61, 93, 246, 247, 250, 252, 255, 265, 353, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];[61, 93, 246, 247, 250, 252, 255, 265, 353, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];0
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest.testNoDependency;[61, 93, 246, 247, 250, 252, 255, 265, 353, 354, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1970, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];[61, 93, 246, 247, 250, 252, 255, 265, 353, 354, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1970, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];0
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest.testNonInversible;[61, 93, 246, 247, 250, 252, 255, 265, 353, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];[61, 93, 246, 247, 250, 252, 255, 265, 353, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];0
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest.testOneSet;[61, 93, 246, 247, 250, 252, 255, 265, 353, 354, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1970, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];[61, 93, 246, 247, 250, 252, 255, 265, 353, 354, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1970, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];0
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest.testRedundantEquations;[61, 93, 246, 247, 250, 252, 255, 265, 353, 354, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1970, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];[61, 93, 246, 247, 250, 252, 255, 265, 353, 354, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1970, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];0
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest.testTrivial;[61, 93, 246, 247, 250, 252, 255, 265, 353, 354, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1970, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];[61, 93, 246, 247, 250, 252, 255, 265, 353, 354, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1970, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];0
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizerTest.testTwoSets;[61, 93, 246, 247, 250, 252, 255, 265, 353, 354, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1970, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];[61, 93, 246, 247, 250, 252, 255, 265, 353, 354, 366, 367, 372, 378, 383, 386, 388, 391, 393, 395, 397, 403, 404, 407, 409, 414, 416, 419, 421, 422, 427, 431, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1407, 1927, 1955, 1957, 1970, 1973, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1999, 2000, 2001, 2002, 2003];0
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest.testCircleFitting;[12, 61, 93, 246, 247, 250, 252, 255, 265, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1092, 1097, 1099, 1927, 1955, 1957, 1973, 1974, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012];[12, 61, 93, 246, 247, 250, 252, 255, 265, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1092, 1097, 1099, 1927, 1955, 1957, 1973, 1974, 1989, 1990, 1991, 1993, 1994, 1995, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012];0
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizerTest.testRosenbrock;[246, 247, 250, 255, 265, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1973, 1974, 1989, 1998, 2001, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025];[246, 247, 250, 255, 265, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1973, 1974, 1989, 1998, 2001, 2002, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025];0
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest.testHalfBounded;[18, 53, 61, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2027, 2028];[18, 53, 61, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2027, 2028];0
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest.testOptimumOutsideRange;[18, 53, 61, 151, 153, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2027, 2028];[18, 53, 61, 151, 153, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2027, 2028];0
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest.testStartSimplexInsideRange;[18, 53, 61, 151, 153, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2027, 2028];[18, 53, 61, 151, 153, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2027, 2028];0
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapterTest.testUnbounded;[61, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2027, 2028];[61, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2026, 2027, 2028];0
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest.testHalfBounded;[12, 61, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 1998, 2001, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2029, 2030];[12, 61, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 1998, 2001, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2029, 2030];0
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest.testOptimumOutsideRange;[12, 61, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 1998, 2001, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2029, 2030];[12, 61, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 1998, 2001, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2029, 2030];0
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest.testStartSimplexInsideRange;[12, 61, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2030];[12, 61, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2030];0
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest.testStartSimplexOutsideRange;[12, 61, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2030];[12, 61, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2030];0
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapterTest.testUnbounded;[61, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2030];[61, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2030];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testBoundariesDimensionMismatch;[70, 71, 246, 386, 391, 397, 407, 409, 419, 435, 1927, 1955, 1992, 1996];[70, 71, 246, 386, 391, 397, 407, 409, 419, 435, 1927, 1955, 1992, 1996];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigar;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testCigTab;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testConstrainedRosen;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2032, 2033, 2034, 2035, 2036, 2037];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2032, 2033, 2034, 2035, 2036, 2037];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testEllipse;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testElliRotated;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testInitOutOfBounds;[70, 71, 246, 386, 391, 397, 407, 409, 419, 435, 1927, 1955, 1992, 1996];[70, 71, 246, 386, 391, 397, 407, 409, 419, 435, 1927, 1955, 1992, 1996];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaxEvaluations;[70, 71, 246, 247, 250, 255, 262, 331, 349, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 419, 421, 424, 435, 695, 802, 1927, 1955, 1957, 1974, 1989, 1992, 1996, 2001, 2031, 2033, 2034, 2036, 2037];[70, 71, 246, 247, 250, 255, 262, 331, 349, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 419, 421, 424, 435, 695, 802, 1927, 1955, 1957, 1974, 1989, 1992, 1996, 2001, 2031, 2033, 2034, 2036, 2037];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testMaximize;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testProblemDimensionTooSmall;[70, 71, 246, 255, 366, 386, 388, 391, 397, 407, 409, 419, 421, 435, 1927, 1955, 1989, 1992, 1996, 2031, 2033];[70, 71, 246, 255, 366, 386, 388, 391, 397, 407, 409, 419, 421, 435, 1927, 1955, 1989, 1992, 1996, 2031, 2033];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRastrigin;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testRosen;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSphere;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testSsDiffPow;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTablet;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizerTest.testTwoAxes;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 366, 373, 384, 386, 388, 391, 392, 396, 397, 402, 405, 407, 409, 416, 418, 419, 421, 424, 435, 695, 750, 802, 1927, 1955, 1957, 1970, 1974, 1989, 1992, 1996, 2001, 2031, 2032, 2033, 2034, 2035, 2036, 2037];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testAckley;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testBoundariesDimensionMismatch;[70, 71, 107, 246, 343, 386, 391, 397, 407, 409, 419, 435, 1927, 1955, 1992, 1996, 2039, 2042];[70, 71, 107, 246, 343, 386, 391, 397, 407, 409, 419, 435, 1927, 1955, 1992, 1996, 2039, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testCigar;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testCigarWithBoundaries;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2038, 2039, 2040, 2041, 2042];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2038, 2039, 2040, 2041, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testCigTab;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testConstrainedRosen;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2038, 2039, 2040, 2041, 2042];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2038, 2039, 2040, 2041, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testDiagonalRosen;[12, 18, 76, 77, 78, 79, 80, 81, 105, 107, 246, 247, 250, 255, 333, 340, 343, 353, 354, 366, 373, 384, 386, 388, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 435, 677, 679, 685, 689, 695, 704, 709, 720, 724, 725, 727, 792, 805, 1205, 1206, 1207, 1219, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];[12, 18, 76, 77, 78, 79, 80, 81, 105, 107, 246, 247, 250, 255, 333, 340, 343, 353, 354, 366, 373, 384, 386, 388, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 435, 677, 679, 685, 689, 695, 704, 709, 720, 724, 725, 727, 792, 805, 1205, 1206, 1207, 1219, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testDiffPow;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testEllipse;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testElliRotated;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testFitAccuracyDependsOnBoundary;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testInitOutofbounds1;[70, 71, 107, 246, 343, 386, 391, 397, 407, 409, 419, 435, 1927, 1955, 1992, 1996, 2039, 2042];[70, 71, 107, 246, 343, 386, 391, 397, 407, 409, 419, 435, 1927, 1955, 1992, 1996, 2039, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testInitOutofbounds2;[70, 71, 107, 246, 343, 386, 391, 397, 407, 409, 419, 435, 1927, 1955, 1992, 1996, 2039, 2042];[70, 71, 107, 246, 343, 386, 391, 397, 407, 409, 419, 435, 1927, 1955, 1992, 1996, 2039, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testInputSigmaDimensionMismatch;[70, 71, 107, 246, 343, 366, 386, 388, 391, 397, 407, 409, 419, 421, 435, 1927, 1955, 1989, 1992, 1996, 2031, 2039, 2040, 2042];[70, 71, 107, 246, 343, 366, 386, 388, 391, 397, 407, 409, 419, 421, 435, 1927, 1955, 1989, 1992, 1996, 2031, 2039, 2040, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testInputSigmaNegative;[70, 71, 107, 343, 2031];[70, 71, 107, 343, 2031];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testInputSigmaOutOfRange;[70, 71, 107, 246, 343, 366, 386, 388, 391, 397, 407, 409, 419, 421, 435, 1927, 1955, 1989, 1992, 1996, 2039, 2040, 2042];[70, 71, 107, 246, 343, 366, 386, 388, 391, 397, 407, 409, 419, 421, 435, 1927, 1955, 1989, 1992, 1996, 2039, 2040, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testMath864;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2038, 2039, 2040, 2041, 2042];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2038, 2039, 2040, 2041, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testMaximize;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testRastrigin;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testRosen;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testSphere;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testSsDiffPow;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testTablet;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizerTest.testTwoAxes;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 247, 250, 255, 331, 333, 340, 343, 349, 353, 354, 366, 373, 376, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 402, 403, 405, 407, 409, 410, 416, 417, 419, 421, 425, 435, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1927, 1955, 1957, 1970, 1989, 1992, 1996, 2001, 2031, 2038, 2039, 2040, 2041, 2042];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest.testBoundsUnsupported;[70, 71, 246, 255, 386, 391, 397, 407, 409, 419, 421, 435, 1927, 1955, 1989, 1992, 1996, 2043, 2044];[70, 71, 246, 255, 386, 391, 397, 407, 409, 419, 421, 435, 1927, 1955, 1989, 1992, 1996, 2043, 2044];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest.testMaximizeQuadratic;[12, 93, 246, 250, 255, 353, 354, 366, 367, 386, 388, 391, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 2001, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066];[12, 93, 246, 250, 255, 353, 354, 366, 367, 386, 388, 391, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 2001, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest.testQuadratic;[12, 93, 246, 250, 255, 353, 354, 366, 367, 386, 388, 391, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 2001, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066];[12, 93, 246, 250, 255, 353, 354, 366, 367, 386, 388, 391, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 2001, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest.testRelativeToleranceOnScaledValues;[12, 93, 246, 247, 250, 255, 354, 366, 367, 386, 388, 391, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1974, 1989, 2001, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066];[12, 93, 246, 247, 250, 255, 354, 366, 367, 386, 388, 391, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1974, 1989, 2001, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizerTest.testSumSinc;[12, 76, 77, 78, 80, 81, 93, 155, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 2001, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066];[12, 76, 77, 78, 80, 81, 93, 155, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 2001, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest.testBoundsUnsupported;[70, 71, 246, 255, 386, 391, 397, 407, 409, 419, 421, 435, 1927, 1955, 1989, 1992, 1996, 2015, 2019, 2020, 2024];[70, 71, 246, 255, 386, 391, 397, 407, 409, 419, 421, 435, 1927, 1955, 1989, 1992, 1996, 2015, 2019, 2020, 2024];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest.testMath283;[53, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2067, 2068, 2069];[53, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2067, 2068, 2069];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest.testMaximize1;[9, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2067, 2069, 2070];[9, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2067, 2069, 2070];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest.testMaximize2;[9, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2067, 2069, 2070];[9, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2067, 2069, 2070];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest.testMinimize1;[9, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2067, 2069, 2070];[9, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2067, 2069, 2070];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest.testMinimize2;[9, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2067, 2069, 2070];[9, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2067, 2069, 2070];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest.testPowell;[246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2067, 2068, 2069, 2070];[246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2067, 2068, 2069, 2070];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerMultiDirectionalTest.testRosenbrock;[246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2067, 2069, 2070];[246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2024, 2067, 2069, 2070];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.testBoundsUnsupported;[70, 71, 246, 255, 386, 391, 397, 407, 409, 419, 421, 435, 1927, 1955, 1989, 1992, 1996, 2015, 2019, 2020, 2024];[70, 71, 246, 255, 386, 391, 397, 407, 409, 419, 421, 435, 1927, 1955, 1989, 1992, 1996, 2015, 2019, 2020, 2024];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.testLeastSquares1;[246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 392, 393, 395, 396, 397, 403, 407, 409, 416, 419, 421, 427, 435, 750, 1927, 1955, 1957, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2068, 2071];[246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 392, 393, 395, 396, 397, 403, 407, 409, 416, 419, 421, 427, 435, 750, 1927, 1955, 1957, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2068, 2071];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.testLeastSquares2;[246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 392, 393, 395, 396, 397, 403, 407, 409, 416, 419, 421, 427, 435, 750, 1927, 1955, 1957, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2068, 2071];[246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 392, 393, 395, 396, 397, 403, 407, 409, 416, 419, 421, 427, 435, 750, 1927, 1955, 1957, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2068, 2071];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.testLeastSquares3;[61, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 390, 391, 392, 393, 395, 396, 397, 403, 407, 409, 416, 419, 421, 425, 427, 435, 706, 731, 750, 1927, 1955, 1957, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2068, 2071];[61, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 390, 391, 392, 393, 395, 396, 397, 403, 407, 409, 416, 419, 421, 425, 427, 435, 706, 731, 750, 1927, 1955, 1957, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2068, 2071];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.testMaximize1;[9, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025];[9, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.testMaximize2;[9, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025];[9, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.testMaxIterations;[70, 71, 246, 247, 250, 255, 262, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2068];[70, 71, 246, 247, 250, 255, 262, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2068];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.testMinimize1;[9, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025];[9, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.testMinimize2;[9, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025];[9, 246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.testPowell;[246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2068];[246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024, 2025, 2068];0
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizerNelderMeadTest.testRosenbrock;[246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025];[246, 247, 250, 255, 353, 354, 366, 367, 386, 388, 391, 393, 395, 397, 403, 407, 409, 416, 419, 421, 427, 435, 1927, 1955, 1957, 1970, 1974, 1989, 1998, 2001, 2002, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testCircleFitting;[12, 61, 76, 77, 78, 79, 80, 81, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435, 436, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 810, 811, 812, 819, 1092, 1097, 1099, 1202, 1203, 1974, 2072, 2073];[12, 61, 76, 77, 78, 79, 80, 81, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435, 436, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 810, 811, 812, 819, 1092, 1097, 1099, 1202, 1203, 1974, 2072, 2073];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testCircleFittingBadInit;[12, 61, 70, 71, 246, 247, 250, 255, 262, 331, 349, 353, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 376, 377, 379, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 672, 819, 1092, 1097, 1099];[12, 61, 70, 71, 246, 247, 250, 255, 262, 331, 349, 353, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 376, 377, 379, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 672, 819, 1092, 1097, 1099];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testCircleFittingGoodInit;[12, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 672, 810, 811, 812, 819, 1092, 1097, 1099];[12, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 672, 810, 811, 812, 819, 1092, 1097, 1099];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testConstraintsUnsupported;[12, 61, 70, 71, 246, 255, 356, 362, 363, 368, 369, 370, 371, 373, 377, 379, 386, 387, 389, 391, 394, 397, 400, 402, 405, 407, 409, 412, 419, 421, 423, 428, 429, 435, 1992, 1996];[12, 61, 70, 71, 246, 255, 356, 362, 363, 368, 369, 370, 371, 373, 377, 379, 386, 387, 389, 391, 394, 397, 400, 402, 405, 407, 409, 412, 419, 421, 423, 428, 429, 435, 1992, 1996];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testGetIterations;[12, 46, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 819];[12, 46, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 819];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testHahn1;[12, 61, 70, 71, 246, 247, 250, 255, 262, 331, 349, 353, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 376, 377, 379, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 672, 819];[12, 61, 70, 71, 246, 247, 250, 255, 262, 331, 349, 353, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 376, 377, 379, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 672, 819];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testIllConditioned;[12, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 810, 811, 812, 819, 1407, 2072];[12, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 810, 811, 812, 819, 1407, 2072];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testInconsistentEquations;[12, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 810, 811, 812, 819, 1407];[12, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 810, 811, 812, 819, 1407];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testInconsistentSizes1;[12, 61, 70, 71, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 810, 811, 812, 819, 1407, 2072];[12, 61, 70, 71, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 810, 811, 812, 819, 1407, 2072];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testInconsistentSizes2;[12, 61, 70, 71, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 810, 811, 812, 819, 1407, 2072];[12, 61, 70, 71, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 810, 811, 812, 819, 1407, 2072];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testKirby2;[12, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 819, 2072];[12, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 819, 2072];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testMaxEvaluations;[12, 61, 70, 71, 246, 247, 250, 255, 262, 331, 349, 353, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 376, 377, 379, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 672, 819, 1092, 1097, 1099];[12, 61, 70, 71, 246, 247, 250, 255, 262, 331, 349, 353, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 376, 377, 379, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 672, 819, 1092, 1097, 1099];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testMoreEstimatedParametersSimple;[12, 61, 70, 71, 246, 250, 255, 262, 331, 356, 357, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 376, 377, 379, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 672, 819, 1407];[12, 61, 70, 71, 246, 250, 255, 262, 331, 356, 357, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 376, 377, 379, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 672, 819, 1407];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testMoreEstimatedParametersUnsorted;[12, 61, 70, 71, 246, 250, 255, 262, 331, 356, 357, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 376, 377, 379, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 672, 819, 1407];[12, 61, 70, 71, 246, 250, 255, 262, 331, 356, 357, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 376, 377, 379, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 672, 819, 1407];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testNoDependency;[12, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 810, 811, 812, 819, 1407, 2072];[12, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 810, 811, 812, 819, 1407, 2072];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testNonInvertible;[12, 61, 70, 71, 246, 250, 255, 262, 331, 356, 357, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 376, 377, 379, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 672, 819, 1407];[12, 61, 70, 71, 246, 250, 255, 262, 331, 356, 357, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 376, 377, 379, 380, 383, 384, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 672, 819, 1407];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testOneSet;[12, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 810, 811, 812, 819, 1407, 2072];[12, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 810, 811, 812, 819, 1407, 2072];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testQRColumnsPermutation;[12, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 810, 811, 812, 819, 1407, 2072, 2074];[12, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 810, 811, 812, 819, 1407, 2072, 2074];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testRedundantEquations;[12, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 672, 810, 811, 812, 819, 1407];[12, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 432, 434, 435, 436, 672, 810, 811, 812, 819, 1407];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testTrivial;[12, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 810, 811, 812, 819, 1407, 2072, 2074];[12, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 810, 811, 812, 819, 1407, 2072, 2074];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizerTest.testTwoSets;[12, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 810, 811, 812, 819, 1407, 2072];[12, 61, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 810, 811, 812, 819, 1407, 2072];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testBevington;[12, 61, 246, 250, 255, 329, 330, 354, 355, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 430, 431, 434, 435, 436, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 727, 786, 808, 809, 1202, 1203, 2072, 2073];[12, 61, 246, 250, 255, 329, 330, 354, 355, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 430, 431, 434, 435, 436, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 727, 786, 808, 809, 1202, 1203, 2072, 2073];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testCircleFitting;[12, 61, 76, 77, 78, 79, 80, 81, 246, 247, 250, 255, 329, 330, 354, 355, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 430, 431, 432, 434, 435, 436, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 727, 786, 808, 809, 810, 811, 812, 1092, 1097, 1099, 1202, 1203, 1974, 2072, 2073];[12, 61, 76, 77, 78, 79, 80, 81, 246, 247, 250, 255, 329, 330, 354, 355, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 430, 431, 432, 434, 435, 436, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 727, 786, 808, 809, 810, 811, 812, 1092, 1097, 1099, 1202, 1203, 1974, 2072, 2073];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testCircleFitting2;[12, 18, 61, 76, 77, 78, 79, 80, 81, 105, 107, 108, 246, 250, 255, 329, 330, 340, 354, 355, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 430, 431, 434, 435, 436, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 727, 786, 808, 809, 817, 1097, 1099, 1202, 1203, 2072, 2073, 2075, 2076];[12, 18, 61, 76, 77, 78, 79, 80, 81, 105, 107, 108, 246, 250, 255, 329, 330, 340, 354, 355, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 430, 431, 434, 435, 436, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 727, 786, 808, 809, 817, 1097, 1099, 1202, 1203, 2072, 2073, 2075, 2076];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit;[12, 61, 246, 247, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1092, 1097, 1099, 1974];[12, 61, 246, 247, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1092, 1097, 1099, 1974];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testCircleFittingGoodInit;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1092, 1097, 1099];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1092, 1097, 1099];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testConstraintsUnsupported;[12, 61, 70, 71, 246, 255, 356, 362, 363, 368, 369, 370, 371, 373, 377, 379, 386, 387, 391, 394, 397, 400, 402, 405, 407, 409, 419, 421, 423, 428, 429, 435, 808, 1992, 1996];[12, 61, 70, 71, 246, 255, 356, 362, 363, 368, 369, 370, 371, 373, 377, 379, 386, 387, 391, 394, 397, 400, 402, 405, 407, 409, 419, 421, 423, 428, 429, 435, 808, 1992, 1996];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testControlParameters;[12, 61, 70, 71, 246, 250, 255, 262, 329, 330, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 1092, 1097, 1099];[12, 61, 70, 71, 246, 250, 255, 262, 329, 330, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 1092, 1097, 1099];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testGetIterations;[12, 46, 61, 246, 247, 250, 255, 329, 330, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809];[12, 46, 61, 246, 247, 250, 255, 329, 330, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testHahn1;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 2072];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 2072];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testIllConditioned;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407, 2072];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407, 2072];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testInconsistentEquations;[12, 61, 246, 250, 255, 329, 330, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407];[12, 61, 246, 250, 255, 329, 330, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testInconsistentSizes1;[12, 61, 70, 71, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407, 2072];[12, 61, 70, 71, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407, 2072];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testInconsistentSizes2;[12, 61, 70, 71, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407, 2072];[12, 61, 70, 71, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407, 2072];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testKirby2;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 2072];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 2072];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testMoreEstimatedParametersSimple;[12, 61, 246, 250, 255, 329, 330, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407];[12, 61, 246, 250, 255, 329, 330, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testMoreEstimatedParametersUnsorted;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testNoDependency;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407, 2072];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407, 2072];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testNonInvertible;[12, 61, 70, 71, 246, 250, 255, 329, 330, 354, 355, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 430, 431, 434, 435, 436, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 727, 786, 808, 809, 810, 811, 812, 1407, 2072, 2073];[12, 61, 70, 71, 246, 250, 255, 329, 330, 354, 355, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 430, 431, 434, 435, 436, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 727, 786, 808, 809, 810, 811, 812, 1407, 2072, 2073];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testOneSet;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407, 2072];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407, 2072];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testQRColumnsPermutation;[12, 61, 246, 250, 255, 329, 330, 353, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407, 2072, 2074];[12, 61, 246, 250, 255, 329, 330, 353, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407, 2072, 2074];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testRedundantEquations;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testTrivial;[12, 61, 246, 250, 255, 329, 330, 353, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407, 2072, 2074];[12, 61, 246, 250, 255, 329, 330, 353, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407, 2072, 2074];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizerTest.testTwoSets;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407, 2072];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 425, 428, 429, 431, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812, 1407, 2072];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.testMinpackBard;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.testMinpackBox3Dimensional;[12, 53, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];[12, 53, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.testMinpackBrownAlmostLinear;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.testMinpackBrownDennis;[12, 53, 61, 76, 77, 78, 79, 80, 81, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];[12, 53, 61, 76, 77, 78, 79, 80, 81, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.testMinpackChebyquad;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.testMinpackFreudensteinRoth;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.testMinpackHelicalValley;[9, 12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];[9, 12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.testMinpackJennrichSampson;[12, 53, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];[12, 53, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.testMinpackKowalikOsborne;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.testMinpackLinearFullRank;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.testMinpackLinearRank1;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.testMinpackLinearRank1ZeroColsAndRows;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.testMinpackMeyer;[12, 53, 61, 70, 71, 246, 250, 255, 262, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];[12, 53, 61, 70, 71, 246, 250, 255, 262, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.testMinpackOsborne1;[12, 53, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];[12, 53, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.testMinpackOsborne2;[12, 53, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];[12, 53, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.testMinpackPowellSingular;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.testMinpackRosenbrok;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];0
org.apache.commons.math3.optim.nonlinear.vector.jacobian.MinpackTest.testMinpackWatson;[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];[12, 61, 246, 250, 255, 329, 330, 354, 356, 357, 358, 360, 361, 362, 363, 365, 366, 368, 369, 370, 371, 373, 375, 377, 379, 380, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 416, 417, 418, 419, 421, 423, 425, 428, 429, 432, 434, 435, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 812];0
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest.testGetOptimaBeforeOptimize;[395, 413, 2077, 2078];[395, 413, 2077, 2078];0
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest.testIssue914;[12, 61, 70, 71, 246, 247, 250, 255, 262, 265, 329, 330, 331, 349, 353, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 819, 1407, 1973, 1974, 1992, 1996, 2005, 2008, 2009, 2010, 2077, 2078, 2079, 2080];[12, 61, 70, 71, 246, 247, 250, 255, 262, 265, 329, 330, 331, 349, 353, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 819, 1407, 1973, 1974, 1992, 1996, 2005, 2008, 2009, 2010, 2077, 2078, 2079, 2080];0
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest.testNoOptimum;[12, 61, 246, 247, 250, 255, 265, 356, 357, 362, 363, 366, 368, 369, 370, 371, 373, 377, 379, 386, 387, 388, 389, 391, 394, 395, 397, 400, 402, 403, 405, 407, 409, 411, 412, 413, 416, 419, 421, 423, 428, 429, 434, 435, 1973, 1974, 2005, 2008, 2009, 2010, 2077, 2078, 2079];[12, 61, 246, 247, 250, 255, 265, 356, 357, 362, 363, 366, 368, 369, 370, 371, 373, 377, 379, 386, 387, 388, 389, 391, 394, 395, 397, 400, 402, 403, 405, 407, 409, 411, 412, 413, 416, 419, 421, 423, 428, 429, 434, 435, 1973, 1974, 2005, 2008, 2009, 2010, 2077, 2078, 2079];0
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizerTest.testTrivial;[12, 61, 246, 247, 250, 255, 265, 329, 330, 331, 341, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 819, 1407, 1973, 1974, 2005, 2007, 2008, 2009, 2010, 2072, 2074, 2077, 2078, 2079, 2080];[12, 61, 246, 247, 250, 255, 265, 329, 330, 331, 341, 349, 353, 354, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 434, 435, 436, 672, 819, 1407, 1973, 1974, 2005, 2007, 2008, 2009, 2010, 2072, 2074, 2077, 2078, 2079, 2080];0
org.apache.commons.math3.optim.PointValuePairTest.testSerial;[353, 354, 2081];[353, 354, 2081];0
org.apache.commons.math3.optim.PointVectorValuePairTest.testSerial;[353, 354, 2074, 2082];[353, 354, 2074, 2082];0
org.apache.commons.math3.optim.SimplePointCheckerTest.testIterationCheck;[2029];[2029];0
org.apache.commons.math3.optim.SimplePointCheckerTest.testIterationCheckDisabled;[354, 367, 427, 2029];[354, 367, 427, 2029];0
org.apache.commons.math3.optim.SimplePointCheckerTest.testIterationCheckPrecondition;[70, 71];[70, 71];0
org.apache.commons.math3.optim.SimpleValueCheckerTest.testIterationCheck;[2002];[2002];0
org.apache.commons.math3.optim.SimpleValueCheckerTest.testIterationCheckDisabled;[353, 367, 427, 2002];[353, 367, 427, 2002];0
org.apache.commons.math3.optim.SimpleValueCheckerTest.testIterationCheckPrecondition;[70, 71];[70, 71];0
org.apache.commons.math3.optim.SimpleVectorValueCheckerTest.testIterationCheck;[399];[399];0
org.apache.commons.math3.optim.SimpleVectorValueCheckerTest.testIterationCheckDisabled;[353, 364, 367, 399, 427];[353, 364, 367, 399, 427];0
org.apache.commons.math3.optim.SimpleVectorValueCheckerTest.testIterationCheckPrecondition;[70, 71];[70, 71];0
org.apache.commons.math3.optim.univariate.BracketFinderTest.testCubicMax;[246, 250, 255, 2049, 2057, 2058, 2064, 2066];[246, 250, 255, 2049, 2057, 2058, 2064, 2066];0
org.apache.commons.math3.optim.univariate.BracketFinderTest.testCubicMin;[246, 250, 255, 2049, 2057, 2058, 2064, 2066];[246, 250, 255, 2049, 2057, 2058, 2064, 2066];0
org.apache.commons.math3.optim.univariate.BracketFinderTest.testIntervalBoundsOrdering;[246, 250, 255, 2049, 2058, 2064, 2066];[246, 250, 255, 2049, 2058, 2064, 2066];0
org.apache.commons.math3.optim.univariate.BracketFinderTest.testMinimumIsOnIntervalBoundary;[246, 250, 255, 2049, 2058, 2064, 2066];[246, 250, 255, 2049, 2058, 2064, 2066];0
org.apache.commons.math3.optim.univariate.BrentOptimizerTest.testBoundaries;[93, 246, 250, 255, 391, 395, 397, 407, 416, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062];[93, 246, 250, 255, 391, 395, 397, 407, 416, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062];0
org.apache.commons.math3.optim.univariate.BrentOptimizerTest.testKeepInitIfBest;[76, 77, 78, 80, 81, 93, 147, 203, 204, 209, 246, 247, 250, 255, 391, 395, 397, 407, 416, 1974, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062];[76, 77, 78, 80, 81, 93, 147, 203, 204, 209, 246, 247, 250, 255, 391, 395, 397, 407, 416, 1974, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062];0
org.apache.commons.math3.optim.univariate.BrentOptimizerTest.testMath832;[12, 93, 246, 250, 255, 391, 395, 397, 407, 416, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062];[12, 93, 246, 250, 255, 391, 395, 397, 407, 416, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062];0
org.apache.commons.math3.optim.univariate.BrentOptimizerTest.testMath855;[76, 77, 78, 80, 81, 93, 147, 203, 204, 209, 246, 247, 250, 255, 391, 395, 397, 407, 416, 1974, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062];[76, 77, 78, 80, 81, 93, 147, 203, 204, 209, 246, 247, 250, 255, 391, 395, 397, 407, 416, 1974, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062];0
org.apache.commons.math3.optim.univariate.BrentOptimizerTest.testMinEndpoints;[76, 77, 78, 80, 81, 93, 147, 246, 250, 255, 391, 395, 397, 407, 416, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062];[76, 77, 78, 80, 81, 93, 147, 246, 250, 255, 391, 395, 397, 407, 416, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062];0
org.apache.commons.math3.optim.univariate.BrentOptimizerTest.testQuinticMax;[70, 71, 93, 246, 250, 255, 262, 391, 395, 397, 407, 416, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062];[70, 71, 93, 246, 250, 255, 262, 391, 395, 397, 407, 416, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062];0
org.apache.commons.math3.optim.univariate.BrentOptimizerTest.testQuinticMin;[93, 246, 247, 250, 255, 391, 395, 397, 407, 416, 1974, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062];[93, 246, 247, 250, 255, 391, 395, 397, 407, 416, 1974, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062];0
org.apache.commons.math3.optim.univariate.BrentOptimizerTest.testQuinticMinStatistics;[93, 246, 247, 250, 255, 391, 395, 397, 407, 416, 669, 670, 691, 693, 718, 1974, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095];[93, 246, 247, 250, 255, 391, 395, 397, 407, 416, 669, 670, 691, 693, 718, 1974, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095];0
org.apache.commons.math3.optim.univariate.BrentOptimizerTest.testSinMin;[70, 71, 76, 77, 78, 80, 81, 93, 147, 246, 247, 250, 255, 262, 265, 391, 395, 397, 407, 416, 1973, 1974, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062];[70, 71, 76, 77, 78, 80, 81, 93, 147, 246, 247, 250, 255, 262, 265, 391, 395, 397, 407, 416, 1973, 1974, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062];0
org.apache.commons.math3.optim.univariate.BrentOptimizerTest.testSinMinWithValueChecker;[76, 77, 78, 80, 81, 93, 147, 246, 250, 255, 367, 391, 395, 397, 407, 416, 427, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062, 2063];[76, 77, 78, 80, 81, 93, 147, 246, 250, 255, 367, 391, 395, 397, 407, 416, 427, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062, 2063];0
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest.testBadFunction;[246, 247, 250, 255, 265, 391, 395, 397, 407, 416, 1973, 1974, 2045, 2046, 2047, 2048, 2051, 2052, 2053, 2055, 2056, 2059, 2060, 2061, 2096, 2097, 2098, 2099];[246, 247, 250, 255, 265, 391, 395, 397, 407, 416, 1973, 1974, 2045, 2046, 2047, 2048, 2051, 2052, 2053, 2055, 2056, 2059, 2060, 2061, 2096, 2097, 2098, 2099];0
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest.testMissingMaxEval;[70, 71, 255, 395, 397, 407, 2046, 2047, 2052, 2053, 2055, 2056, 2098, 2099];[70, 71, 255, 395, 397, 407, 2046, 2047, 2052, 2053, 2055, 2056, 2098, 2099];0
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest.testMissingSearchInterval;[70, 71, 246, 255, 391, 395, 397, 407, 2046, 2052, 2053, 2098, 2099];[70, 71, 246, 255, 391, 395, 397, 407, 2046, 2052, 2053, 2098, 2099];0
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest.testQuinticMin;[93, 246, 247, 250, 255, 265, 391, 395, 397, 407, 416, 1973, 1974, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062, 2096, 2097, 2098, 2099, 2100];[93, 246, 247, 250, 255, 265, 391, 395, 397, 407, 416, 1973, 1974, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062, 2096, 2097, 2098, 2099, 2100];0
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizerTest.testSinMin;[76, 77, 78, 80, 81, 93, 147, 246, 247, 250, 255, 265, 391, 395, 397, 407, 416, 1973, 1974, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062, 2096, 2097, 2098, 2099, 2100];[76, 77, 78, 80, 81, 93, 147, 246, 247, 250, 255, 265, 391, 395, 397, 407, 416, 1973, 1974, 2045, 2046, 2047, 2048, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2059, 2060, 2061, 2062, 2096, 2097, 2098, 2099, 2100];0
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest.testIterationCheck;[2063];[2063];0
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest.testIterationCheckDisabled;[367, 427, 2062, 2063];[367, 427, 2062, 2063];0
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueCheckerTest.testIterationCheckPrecondition;[70, 71];[70, 71];0
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testBoundariesDimensionMismatch;[70, 71, 246, 255, 419, 1992, 1996, 2101, 2102, 2103, 2104];[70, 71, 246, 255, 419, 1992, 1996, 2101, 2102, 2103, 2104];0
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigar;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];0
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testCigTab;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];0
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testConstrainedRosen;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 1992, 1996, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 1992, 1996, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];0
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testEllipse;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];0
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testElliRotated;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];0
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testInitOutOfBounds;[70, 71, 246, 255, 419, 1992, 1996, 2101, 2102, 2103, 2104];[70, 71, 246, 255, 419, 1992, 1996, 2101, 2102, 2103, 2104];0
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaxEvaluations;[70, 71, 246, 247, 250, 255, 260, 262, 331, 349, 373, 384, 392, 396, 402, 405, 419, 424, 695, 802, 2033, 2034, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];[70, 71, 246, 247, 250, 255, 260, 262, 331, 349, 373, 384, 392, 396, 402, 405, 419, 424, 695, 802, 2033, 2034, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];0
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testMaximize;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 1992, 1996, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 1992, 1996, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];0
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testProblemDimensionTooSmall;[70, 71, 246, 255, 419, 2033, 2101, 2102, 2103, 2104, 2106, 2107, 2110];[70, 71, 246, 255, 419, 2033, 2101, 2102, 2103, 2104, 2106, 2107, 2110];0
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRastrigin;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];0
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testRosen;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];0
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSphere;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];0
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testSsDiffPow;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];0
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTablet;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];0
org.apache.commons.math3.optimization.direct.BOBYQAOptimizerTest.testTwoAxes;[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];[246, 247, 250, 255, 329, 331, 349, 353, 354, 358, 373, 384, 392, 396, 402, 405, 418, 419, 424, 695, 750, 802, 1970, 2032, 2033, 2034, 2035, 2036, 2037, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testAckley;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testBoundariesDimensionMismatch;[70, 71, 107, 246, 255, 343, 419, 1992, 1996, 2039, 2101, 2102, 2103, 2104, 2112];[70, 71, 107, 246, 255, 343, 419, 1992, 1996, 2039, 2101, 2102, 2103, 2104, 2112];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testCigar;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testCigarWithBoundaries;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 1992, 1996, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 1992, 1996, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testCigTab;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testConstrainedRosen;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 1992, 1996, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 1992, 1996, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testDiagonalRosen;[12, 18, 76, 77, 78, 79, 80, 81, 105, 107, 246, 250, 255, 333, 340, 343, 353, 354, 373, 384, 392, 396, 402, 405, 410, 417, 419, 677, 679, 685, 689, 695, 704, 709, 720, 724, 725, 727, 792, 805, 1205, 1206, 1207, 1219, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];[12, 18, 76, 77, 78, 79, 80, 81, 105, 107, 246, 250, 255, 333, 340, 343, 353, 354, 373, 384, 392, 396, 402, 405, 410, 417, 419, 677, 679, 685, 689, 695, 704, 709, 720, 724, 725, 727, 792, 805, 1205, 1206, 1207, 1219, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testDiffPow;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testEllipse;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testElliRotated;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testFitAccuracyDependsOnBoundary;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 246, 250, 255, 331, 333, 340, 349, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 1992, 1996, 2038, 2040, 2041, 2101, 2102, 2103, 2106, 2107, 2108, 2109, 2110, 2111, 2113];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 246, 250, 255, 331, 333, 340, 349, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 1992, 1996, 2038, 2040, 2041, 2101, 2102, 2103, 2106, 2107, 2108, 2109, 2110, 2111, 2113];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testInitOutofbounds1;[70, 71, 107, 246, 255, 343, 419, 1992, 1996, 2039, 2101, 2102, 2103, 2104, 2112];[70, 71, 107, 246, 255, 343, 419, 1992, 1996, 2039, 2101, 2102, 2103, 2104, 2112];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testInitOutofbounds2;[70, 71, 107, 246, 255, 343, 419, 1992, 1996, 2039, 2101, 2102, 2103, 2104, 2112];[70, 71, 107, 246, 255, 343, 419, 1992, 1996, 2039, 2101, 2102, 2103, 2104, 2112];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testInputSigmaDimensionMismatch;[70, 71, 107, 246, 255, 343, 419, 2038, 2039, 2040, 2101, 2102, 2103, 2104, 2106, 2107, 2110, 2112];[70, 71, 107, 246, 255, 343, 419, 2038, 2039, 2040, 2101, 2102, 2103, 2104, 2106, 2107, 2110, 2112];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testInputSigmaNegative;[70, 71, 107, 343];[70, 71, 107, 343];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testInputSigmaOutOfRange;[70, 71, 107, 246, 255, 343, 419, 1992, 1996, 2038, 2039, 2040, 2101, 2102, 2103, 2104, 2106, 2107, 2110, 2112];[70, 71, 107, 246, 255, 343, 419, 1992, 1996, 2038, 2039, 2040, 2101, 2102, 2103, 2104, 2106, 2107, 2110, 2112];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testMath864;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 246, 250, 255, 331, 333, 340, 349, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 1992, 1996, 2038, 2040, 2041, 2101, 2102, 2103, 2106, 2107, 2108, 2109, 2110, 2111, 2113];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 246, 250, 255, 331, 333, 340, 349, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 1992, 1996, 2038, 2040, 2041, 2101, 2102, 2103, 2106, 2107, 2108, 2109, 2110, 2111, 2113];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testMaximize;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 1992, 1996, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 1992, 1996, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testRastrigin;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testRosen;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testSphere;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testSsDiffPow;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testTablet;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];0
org.apache.commons.math3.optimization.direct.CMAESOptimizerTest.testTwoAxes;[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];[12, 18, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 246, 250, 255, 331, 333, 340, 343, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 410, 417, 419, 425, 672, 677, 678, 679, 683, 685, 689, 695, 699, 703, 704, 706, 709, 712, 715, 716, 717, 719, 720, 722, 724, 725, 727, 792, 803, 805, 1205, 1206, 1207, 1219, 1221, 1452, 1454, 1455, 1541, 1970, 2038, 2039, 2040, 2041, 2101, 2102, 2103, 2104, 2106, 2107, 2108, 2109, 2110, 2111, 2112];0
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest.testHalfBounded;[18, 53, 61, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2026, 2027, 2028, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];[18, 53, 61, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2026, 2027, 2028, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest.testOptimumOutsideRange;[18, 53, 61, 151, 153, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2026, 2027, 2028, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];[18, 53, 61, 151, 153, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2026, 2027, 2028, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest.testStartSimplexInsideRange;[18, 53, 61, 151, 153, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2026, 2027, 2028, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];[18, 53, 61, 151, 153, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2026, 2027, 2028, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapterTest.testUnbounded;[61, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2026, 2027, 2028, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];[61, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2026, 2027, 2028, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest.testHalfBounded;[12, 61, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2022, 2023, 2024, 2025, 2029, 2030, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];[12, 61, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2022, 2023, 2024, 2025, 2029, 2030, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest.testOptimumOutsideRange;[12, 61, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2029, 2030, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];[12, 61, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2029, 2030, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest.testStartSimplexInsideRange;[12, 61, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2030, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];[12, 61, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2030, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest.testStartSimplexOutsideRange;[12, 61, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2030, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];[12, 61, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2030, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapterTest.testUnbounded;[61, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2030, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];[61, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2030, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.PowellOptimizerTest.testMaximizeQuadratic;[12, 93, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 2043, 2048, 2049, 2050, 2054, 2057, 2058, 2062, 2063, 2064, 2065, 2066, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2116, 2117, 2118, 2119, 2120, 2121, 2122];[12, 93, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 2043, 2048, 2049, 2050, 2054, 2057, 2058, 2062, 2063, 2064, 2065, 2066, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2116, 2117, 2118, 2119, 2120, 2121, 2122];0
org.apache.commons.math3.optimization.direct.PowellOptimizerTest.testQuadratic;[12, 93, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 2043, 2048, 2049, 2050, 2054, 2057, 2058, 2062, 2063, 2064, 2065, 2066, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2116, 2117, 2118, 2119, 2120, 2121, 2122];[12, 93, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 2043, 2048, 2049, 2050, 2054, 2057, 2058, 2062, 2063, 2064, 2065, 2066, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2116, 2117, 2118, 2119, 2120, 2121, 2122];0
org.apache.commons.math3.optimization.direct.PowellOptimizerTest.testRelativeToleranceOnScaledValues;[12, 93, 246, 247, 250, 255, 354, 367, 419, 427, 1970, 2043, 2048, 2049, 2050, 2054, 2057, 2058, 2062, 2063, 2064, 2065, 2066, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2116, 2117, 2118, 2119, 2120, 2121, 2122];[12, 93, 246, 247, 250, 255, 354, 367, 419, 427, 1970, 2043, 2048, 2049, 2050, 2054, 2057, 2058, 2062, 2063, 2064, 2065, 2066, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2116, 2117, 2118, 2119, 2120, 2121, 2122];0
org.apache.commons.math3.optimization.direct.PowellOptimizerTest.testSumSinc;[12, 76, 77, 78, 80, 81, 93, 155, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 2043, 2048, 2049, 2050, 2054, 2057, 2058, 2062, 2063, 2064, 2065, 2066, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2116, 2117, 2118, 2119, 2120, 2121, 2122];[12, 76, 77, 78, 80, 81, 93, 155, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 2043, 2048, 2049, 2050, 2054, 2057, 2058, 2062, 2063, 2064, 2065, 2066, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2116, 2117, 2118, 2119, 2120, 2121, 2122];0
org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest.testMath283;[53, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2022, 2024, 2067, 2068, 2069, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];[53, 246, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2022, 2024, 2067, 2068, 2069, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest.testMaximize1;[9, 246, 247, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2022, 2024, 2067, 2069, 2070, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];[9, 246, 247, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2022, 2024, 2067, 2069, 2070, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest.testMaximize2;[9, 246, 247, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2022, 2024, 2067, 2069, 2070, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];[9, 246, 247, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2022, 2024, 2067, 2069, 2070, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest.testMinimize1;[9, 246, 247, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2022, 2024, 2067, 2069, 2070, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];[9, 246, 247, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2022, 2024, 2067, 2069, 2070, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest.testMinimize2;[9, 246, 247, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2022, 2024, 2067, 2069, 2070, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];[9, 246, 247, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2022, 2024, 2067, 2069, 2070, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest.testPowell;[246, 247, 250, 255, 353, 354, 367, 419, 427, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2022, 2024, 2067, 2068, 2069, 2070, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];[246, 247, 250, 255, 353, 354, 367, 419, 427, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2022, 2024, 2067, 2068, 2069, 2070, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.SimplexOptimizerMultiDirectionalTest.testRosenbrock;[246, 247, 250, 255, 353, 354, 367, 419, 427, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2022, 2024, 2067, 2069, 2070, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];[246, 247, 250, 255, 353, 354, 367, 419, 427, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2022, 2024, 2067, 2069, 2070, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest.testLeastSquares1;[246, 247, 250, 255, 353, 354, 367, 392, 396, 419, 427, 750, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2068, 2071, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];[246, 247, 250, 255, 353, 354, 367, 392, 396, 419, 427, 750, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2068, 2071, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest.testLeastSquares2;[246, 247, 250, 255, 353, 354, 367, 392, 396, 419, 427, 750, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2068, 2071, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];[246, 247, 250, 255, 353, 354, 367, 392, 396, 419, 427, 750, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2068, 2071, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest.testLeastSquares3;[61, 246, 247, 250, 255, 353, 354, 367, 390, 392, 396, 419, 425, 427, 706, 731, 750, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2068, 2071, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];[61, 246, 247, 250, 255, 353, 354, 367, 390, 392, 396, 419, 425, 427, 706, 731, 750, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2068, 2071, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest.testMaximize1;[9, 246, 247, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];[9, 246, 247, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest.testMaximize2;[9, 246, 247, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];[9, 246, 247, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest.testMaxIterations;[70, 71, 246, 250, 255, 260, 262, 353, 354, 367, 419, 427, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2068, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];[70, 71, 246, 250, 255, 260, 262, 353, 354, 367, 419, 427, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2068, 2101, 2102, 2103, 2104, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest.testMinimize1;[9, 246, 247, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];[9, 246, 247, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest.testMinimize2;[9, 246, 247, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];[9, 246, 247, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest.testPowell;[246, 247, 250, 255, 353, 354, 367, 419, 427, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2068, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];[246, 247, 250, 255, 353, 354, 367, 419, 427, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2023, 2024, 2025, 2068, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.direct.SimplexOptimizerNelderMeadTest.testRosenbrock;[246, 247, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2022, 2023, 2024, 2025, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];[246, 247, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2022, 2023, 2024, 2025, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115];0
org.apache.commons.math3.optimization.fitting.CurveFitterTest.testMath303;[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.CurveFitterTest.testMath304;[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.CurveFitterTest.testMath372;[0, 2, 3, 4, 5, 12, 18, 19, 23, 46, 53, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 18, 19, 23, 46, 53, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.GaussianFitterTest.testFit01;[0, 2, 3, 4, 5, 12, 18, 19, 23, 53, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 18, 19, 23, 53, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.GaussianFitterTest.testFit02;[70, 71, 813, 814];[70, 71, 813, 814];0
org.apache.commons.math3.optimization.fitting.GaussianFitterTest.testFit03;[70, 71, 381, 813, 814];[70, 71, 381, 813, 814];0
org.apache.commons.math3.optimization.fitting.GaussianFitterTest.testFit04;[0, 2, 3, 4, 5, 12, 18, 19, 23, 53, 56, 61, 69, 70, 71, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 18, 19, 23, 53, 56, 61, 69, 70, 71, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.GaussianFitterTest.testFit05;[0, 2, 3, 4, 5, 12, 18, 19, 23, 53, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 18, 19, 23, 53, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.GaussianFitterTest.testFit06;[0, 2, 3, 4, 5, 12, 18, 19, 23, 53, 56, 61, 69, 70, 71, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 18, 19, 23, 53, 56, 61, 69, 70, 71, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.GaussianFitterTest.testFit07;[0, 2, 3, 4, 5, 12, 18, 19, 23, 53, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 18, 19, 23, 53, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.GaussianFitterTest.testMath519;[0, 2, 3, 4, 5, 12, 18, 19, 23, 53, 56, 61, 69, 70, 71, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 18, 19, 23, 53, 56, 61, 69, 70, 71, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.GaussianFitterTest.testMath798;[0, 2, 3, 4, 5, 12, 18, 19, 23, 53, 56, 61, 69, 70, 71, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 18, 19, 23, 53, 56, 61, 69, 70, 71, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 813, 814, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.HarmonicFitterTest.test1PercentError;[0, 2, 3, 4, 5, 8, 9, 12, 19, 23, 40, 56, 61, 69, 76, 77, 78, 79, 80, 81, 150, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 814, 815, 816, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 8, 9, 12, 19, 23, 40, 56, 61, 69, 76, 77, 78, 79, 80, 81, 150, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 814, 815, 816, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.HarmonicFitterTest.testInitialGuess;[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 69, 76, 77, 78, 79, 80, 81, 150, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 815, 816, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 69, 76, 77, 78, 79, 80, 81, 150, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 815, 816, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.HarmonicFitterTest.testMath844;[70, 71, 359, 374];[70, 71, 359, 374];0
org.apache.commons.math3.optimization.fitting.HarmonicFitterTest.testNoError;[0, 2, 3, 4, 5, 8, 9, 12, 19, 23, 40, 56, 61, 69, 76, 77, 78, 79, 80, 81, 150, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 814, 815, 816, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 8, 9, 12, 19, 23, 40, 56, 61, 69, 76, 77, 78, 79, 80, 81, 150, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 814, 815, 816, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.HarmonicFitterTest.testPreconditions1;[70, 71, 814, 815];[70, 71, 814, 815];0
org.apache.commons.math3.optimization.fitting.HarmonicFitterTest.testTinyVariationsData;[0, 2, 3, 4, 5, 8, 9, 12, 19, 23, 40, 56, 61, 69, 76, 77, 78, 79, 80, 81, 150, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 814, 815, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 8, 9, 12, 19, 23, 40, 56, 61, 69, 76, 77, 78, 79, 80, 81, 150, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 814, 815, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.HarmonicFitterTest.testUnsorted;[0, 2, 3, 4, 5, 8, 9, 12, 19, 23, 40, 56, 61, 69, 76, 77, 78, 79, 80, 81, 150, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 814, 815, 816, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 8, 9, 12, 19, 23, 40, 56, 61, 69, 76, 77, 78, 79, 80, 81, 150, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 814, 815, 816, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testFit;[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 64, 68, 69, 93, 105, 107, 108, 117, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 433, 436, 647, 652, 653, 654, 655, 668, 677, 695, 706, 715, 727, 808, 809, 817, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 64, 68, 69, 93, 105, 107, 108, 117, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 433, 436, 647, 652, 653, 654, 655, 668, 677, 695, 706, 715, 727, 808, 809, 817, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample;[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 64, 68, 69, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 383, 384, 385, 392, 396, 400, 402, 404, 405, 408, 410, 414, 415, 417, 418, 419, 422, 423, 428, 431, 432, 433, 436, 677, 695, 706, 715, 727, 808, 809, 818, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 64, 68, 69, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 383, 384, 385, 392, 396, 400, 402, 404, 405, 408, 410, 414, 415, 417, 418, 419, 422, 423, 428, 431, 432, 433, 436, 677, 695, 706, 715, 727, 808, 809, 818, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testMath798;[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 68, 69, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 359, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 380, 381, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 408, 410, 412, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 432, 436, 672, 677, 695, 706, 715, 727, 808, 809, 819, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 68, 69, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 359, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 380, 381, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 408, 410, 412, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 432, 436, 672, 677, 695, 706, 715, 727, 808, 809, 819, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testMath798WithToleranceTooLow;[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 68, 69, 70, 71, 246, 250, 255, 260, 262, 331, 349, 353, 356, 359, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 376, 380, 381, 383, 384, 390, 392, 396, 399, 400, 402, 404, 405, 408, 410, 412, 414, 415, 417, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 819, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 68, 69, 70, 71, 246, 250, 255, 260, 262, 331, 349, 353, 356, 359, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 376, 380, 381, 383, 384, 390, 392, 396, 399, 400, 402, 404, 405, 408, 410, 412, 414, 415, 417, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 819, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testMath798WithToleranceTooLowButNoException;[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 68, 69, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 359, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 380, 381, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 408, 410, 412, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 432, 436, 672, 677, 695, 706, 715, 727, 808, 809, 819, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 68, 69, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 359, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 380, 381, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 408, 410, 412, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 432, 436, 672, 677, 695, 706, 715, 727, 808, 809, 819, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testNoError;[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 64, 68, 69, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 433, 436, 677, 695, 706, 715, 727, 808, 809, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 64, 68, 69, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 433, 436, 677, 695, 706, 715, 727, 808, 809, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testRedundantSolvable;[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 64, 68, 69, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 433, 436, 677, 695, 706, 715, 727, 808, 809, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 64, 68, 69, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 433, 436, 677, 695, 706, 715, 727, 808, 809, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testRedundantUnsolvable;[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 64, 68, 69, 70, 71, 246, 250, 255, 262, 329, 330, 331, 349, 353, 354, 356, 358, 359, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 380, 381, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 408, 410, 412, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 432, 433, 672, 819, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 23, 56, 61, 64, 68, 69, 70, 71, 246, 250, 255, 262, 329, 330, 331, 349, 353, 354, 356, 358, 359, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 380, 381, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 408, 410, 412, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 432, 433, 672, 819, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testSmallError;[0, 2, 3, 4, 5, 12, 19, 23, 27, 28, 30, 31, 32, 56, 61, 64, 68, 69, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 433, 436, 677, 695, 706, 715, 727, 808, 809, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 23, 27, 28, 30, 31, 32, 56, 61, 64, 68, 69, 246, 250, 255, 329, 330, 354, 356, 358, 359, 361, 363, 365, 368, 369, 370, 371, 373, 374, 375, 380, 381, 382, 384, 385, 390, 392, 396, 400, 402, 405, 408, 410, 415, 417, 418, 419, 423, 425, 428, 432, 433, 436, 677, 695, 706, 715, 727, 808, 809, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testCircleFitting;[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 36, 39, 42, 43, 44, 51, 54, 56, 58, 61, 69, 72, 76, 77, 78, 79, 80, 81, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 355, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 378, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 401, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 430, 431, 432, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 810, 811, 819, 1092, 1097, 1099, 1202, 1203, 2072, 2073, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138];[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 36, 39, 42, 43, 44, 51, 54, 56, 58, 61, 69, 72, 76, 77, 78, 79, 80, 81, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 355, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 378, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 401, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 430, 431, 432, 672, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 786, 810, 811, 819, 1092, 1097, 1099, 1202, 1203, 2072, 2073, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138];0
org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testCircleFittingBadInit;[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 36, 39, 42, 43, 44, 51, 54, 56, 58, 61, 69, 70, 71, 72, 246, 250, 255, 262, 331, 349, 353, 356, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 376, 380, 383, 384, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 819, 1092, 1097, 1099, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 36, 39, 42, 43, 44, 51, 54, 56, 58, 61, 69, 70, 71, 72, 246, 250, 255, 262, 331, 349, 353, 356, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 376, 380, 383, 384, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 819, 1092, 1097, 1099, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testCircleFittingGoodInit;[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 36, 39, 42, 43, 44, 51, 54, 56, 58, 61, 69, 72, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 432, 672, 810, 811, 819, 1092, 1097, 1099, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 36, 39, 42, 43, 44, 51, 54, 56, 58, 61, 69, 72, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 432, 672, 810, 811, 819, 1092, 1097, 1099, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testHahn1;[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 37, 38, 42, 44, 46, 54, 56, 61, 69, 70, 71, 246, 250, 255, 262, 331, 349, 353, 356, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 376, 380, 383, 384, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 819, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 37, 38, 42, 44, 46, 54, 56, 61, 69, 70, 71, 246, 250, 255, 262, 331, 349, 353, 356, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 376, 380, 383, 384, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 819, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testIllConditioned;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 810, 811, 818, 819, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 810, 811, 818, 819, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testInconsistentEquations;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 810, 811, 818, 819, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 810, 811, 818, 819, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testInconsistentSizes1;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 810, 811, 818, 819, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 810, 811, 818, 819, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testInconsistentSizes2;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 810, 811, 818, 819, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 810, 811, 818, 819, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testKirby2;[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 37, 38, 42, 44, 46, 54, 56, 61, 69, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 819, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 37, 38, 42, 44, 46, 54, 56, 61, 69, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 819, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testMaxEvaluations;[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 36, 39, 42, 43, 44, 51, 54, 56, 58, 61, 69, 70, 71, 72, 246, 250, 255, 260, 262, 331, 349, 353, 356, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 376, 380, 383, 384, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 819, 1092, 1097, 1099, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 36, 39, 42, 43, 44, 51, 54, 56, 58, 61, 69, 70, 71, 72, 246, 250, 255, 260, 262, 331, 349, 353, 356, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 376, 380, 383, 384, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 819, 1092, 1097, 1099, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testMoreEstimatedParametersSimple;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 250, 255, 262, 331, 356, 361, 363, 365, 368, 369, 370, 371, 373, 376, 380, 383, 384, 390, 392, 396, 400, 402, 404, 405, 410, 412, 414, 417, 419, 420, 422, 423, 425, 428, 431, 672, 818, 819, 1407, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 250, 255, 262, 331, 356, 361, 363, 365, 368, 369, 370, 371, 373, 376, 380, 383, 384, 390, 392, 396, 400, 402, 404, 405, 410, 412, 414, 417, 419, 420, 422, 423, 425, 428, 431, 672, 818, 819, 1407, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testMoreEstimatedParametersUnsorted;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 250, 255, 262, 331, 356, 361, 363, 365, 368, 369, 370, 371, 373, 376, 380, 383, 384, 390, 392, 396, 400, 402, 404, 405, 410, 412, 414, 417, 419, 420, 422, 423, 425, 428, 431, 672, 818, 819, 1407, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 250, 255, 262, 331, 356, 361, 363, 365, 368, 369, 370, 371, 373, 376, 380, 383, 384, 390, 392, 396, 400, 402, 404, 405, 410, 412, 414, 417, 419, 420, 422, 423, 425, 428, 431, 672, 818, 819, 1407, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testNoDependency;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 810, 811, 818, 819, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 810, 811, 818, 819, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testNonInvertible;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 250, 255, 262, 331, 356, 361, 363, 365, 368, 369, 370, 371, 373, 376, 380, 383, 384, 390, 392, 396, 400, 402, 404, 405, 410, 412, 414, 417, 419, 420, 422, 423, 425, 428, 431, 672, 818, 819, 1407, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 250, 255, 262, 331, 356, 361, 363, 365, 368, 369, 370, 371, 373, 376, 380, 383, 384, 390, 392, 396, 400, 402, 404, 405, 410, 412, 414, 417, 419, 420, 422, 423, 425, 428, 431, 672, 818, 819, 1407, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testOneSet;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 810, 811, 818, 819, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 810, 811, 818, 819, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testQRColumnsPermutation;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 810, 811, 818, 819, 1407, 2072, 2074, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 810, 811, 818, 819, 1407, 2072, 2074, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testRedundantEquations;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 432, 672, 810, 811, 818, 819, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 432, 672, 810, 811, 818, 819, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testTrivial;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 810, 811, 818, 819, 1407, 2072, 2074, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2139];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 810, 811, 818, 819, 1407, 2072, 2074, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2139];0
org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testTwoSets;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 810, 811, 818, 819, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 810, 811, 818, 819, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testBevington;[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 38, 42, 46, 53, 54, 56, 61, 69, 87, 88, 89, 246, 250, 255, 329, 330, 354, 355, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 378, 380, 382, 383, 384, 385, 390, 392, 396, 400, 401, 402, 404, 405, 410, 417, 418, 419, 420, 422, 423, 425, 428, 430, 431, 436, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 727, 786, 808, 809, 1202, 1203, 2072, 2073, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 38, 42, 46, 53, 54, 56, 61, 69, 87, 88, 89, 246, 250, 255, 329, 330, 354, 355, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 378, 380, 382, 383, 384, 385, 390, 392, 396, 400, 401, 402, 404, 405, 410, 417, 418, 419, 420, 422, 423, 425, 428, 430, 431, 436, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 727, 786, 808, 809, 1202, 1203, 2072, 2073, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFitting;[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 36, 39, 42, 43, 44, 51, 54, 56, 58, 61, 69, 72, 76, 77, 78, 79, 80, 81, 246, 247, 250, 255, 329, 330, 354, 355, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 378, 380, 382, 383, 384, 385, 390, 392, 396, 400, 401, 402, 404, 405, 410, 417, 418, 419, 420, 422, 423, 425, 428, 430, 431, 432, 436, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 727, 786, 808, 809, 810, 811, 1092, 1097, 1099, 1202, 1203, 2072, 2073, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138];[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 36, 39, 42, 43, 44, 51, 54, 56, 58, 61, 69, 72, 76, 77, 78, 79, 80, 81, 246, 247, 250, 255, 329, 330, 354, 355, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 378, 380, 382, 383, 384, 385, 390, 392, 396, 400, 401, 402, 404, 405, 410, 417, 418, 419, 420, 422, 423, 425, 428, 430, 431, 432, 436, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 727, 786, 808, 809, 810, 811, 1092, 1097, 1099, 1202, 1203, 2072, 2073, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFitting2;[0, 2, 3, 4, 5, 12, 14, 18, 19, 20, 21, 22, 23, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 56, 61, 69, 72, 76, 77, 78, 79, 80, 81, 105, 107, 108, 246, 250, 255, 329, 330, 340, 354, 355, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 378, 380, 382, 383, 384, 385, 390, 392, 396, 400, 401, 402, 404, 405, 410, 417, 418, 419, 420, 422, 423, 425, 428, 430, 431, 436, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 727, 786, 808, 809, 810, 817, 1097, 1099, 1202, 1203, 2072, 2073, 2076, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2139];[0, 2, 3, 4, 5, 12, 14, 18, 19, 20, 21, 22, 23, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 56, 61, 69, 72, 76, 77, 78, 79, 80, 81, 105, 107, 108, 246, 250, 255, 329, 330, 340, 354, 355, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 378, 380, 382, 383, 384, 385, 390, 392, 396, 400, 401, 402, 404, 405, 410, 417, 418, 419, 420, 422, 423, 425, 428, 430, 431, 436, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 727, 786, 808, 809, 810, 817, 1097, 1099, 1202, 1203, 2072, 2073, 2076, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2139];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit;[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 36, 39, 42, 43, 44, 51, 54, 56, 58, 61, 69, 72, 246, 247, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 1092, 1097, 1099, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138];[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 36, 39, 42, 43, 44, 51, 54, 56, 58, 61, 69, 72, 246, 247, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 1092, 1097, 1099, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingGoodInit;[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 36, 39, 42, 43, 44, 51, 54, 56, 58, 61, 69, 72, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 1092, 1097, 1099, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 36, 39, 42, 43, 44, 51, 54, 56, 58, 61, 69, 72, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 1092, 1097, 1099, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters;[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 36, 39, 42, 43, 44, 51, 54, 56, 58, 61, 69, 70, 71, 72, 246, 250, 255, 260, 262, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 436, 677, 695, 706, 715, 727, 808, 809, 1092, 1097, 1099, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 36, 39, 42, 43, 44, 51, 54, 56, 58, 61, 69, 70, 71, 72, 246, 250, 255, 260, 262, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 436, 677, 695, 706, 715, 727, 808, 809, 1092, 1097, 1099, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testHahn1;[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 37, 38, 42, 44, 46, 54, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 436, 677, 695, 706, 715, 727, 808, 809, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 37, 38, 42, 44, 46, 54, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 436, 677, 695, 706, 715, 727, 808, 809, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testIllConditioned;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentEquations;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes1;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes2;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testKirby2;[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 37, 38, 42, 44, 46, 54, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 436, 677, 695, 706, 715, 727, 808, 809, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 37, 38, 42, 44, 46, 54, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 436, 677, 695, 706, 715, 727, 808, 809, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testMoreEstimatedParametersSimple;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testMoreEstimatedParametersUnsorted;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testNoDependency;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testNonInvertible;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 250, 255, 329, 330, 354, 355, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 401, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 430, 431, 436, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 727, 786, 808, 809, 810, 811, 818, 1407, 2072, 2073, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 250, 255, 329, 330, 354, 355, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 401, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 430, 431, 436, 677, 679, 685, 695, 706, 709, 715, 720, 724, 725, 727, 786, 808, 809, 810, 811, 818, 1407, 2072, 2073, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testOneSet;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testQRColumnsPermutation;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 353, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2074, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 353, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2074, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testRedundantEquations;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testTrivial;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 250, 255, 329, 330, 353, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2074, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2139];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 250, 255, 329, 330, 353, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2074, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2139];0
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testTwoSets;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 383, 384, 385, 390, 392, 396, 400, 402, 404, 405, 410, 414, 417, 418, 419, 422, 423, 425, 428, 431, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 818, 1407, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.MinpackTest.testMinpackBard;[0, 2, 3, 4, 5, 6, 12, 14, 19, 20, 21, 22, 23, 38, 46, 54, 56, 61, 69, 89, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 6, 12, 14, 19, 20, 21, 22, 23, 38, 46, 54, 56, 61, 69, 89, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.MinpackTest.testMinpackBox3Dimensional;[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 39, 43, 53, 54, 56, 61, 69, 87, 88, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 14, 19, 20, 21, 22, 23, 39, 43, 53, 54, 56, 61, 69, 87, 88, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.MinpackTest.testMinpackBrownAlmostLinear;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 39, 42, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 39, 42, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.MinpackTest.testMinpackBrownDennis;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 39, 42, 53, 54, 56, 61, 69, 76, 77, 78, 79, 80, 81, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 39, 42, 53, 54, 56, 61, 69, 76, 77, 78, 79, 80, 81, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.MinpackTest.testMinpackChebyquad;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 39, 42, 43, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 39, 42, 43, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.MinpackTest.testMinpackFreudensteinRoth;[0, 2, 3, 4, 5, 6, 12, 19, 20, 21, 22, 23, 39, 42, 54, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 6, 12, 19, 20, 21, 22, 23, 39, 42, 54, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.MinpackTest.testMinpackHelicalValley;[0, 2, 3, 4, 5, 9, 12, 14, 19, 20, 21, 22, 23, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 56, 58, 61, 69, 72, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 9, 12, 14, 19, 20, 21, 22, 23, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 51, 54, 56, 58, 61, 69, 72, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.MinpackTest.testMinpackJennrichSampson;[0, 2, 3, 4, 5, 6, 12, 14, 19, 20, 21, 22, 23, 39, 53, 54, 56, 61, 69, 87, 88, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 6, 12, 14, 19, 20, 21, 22, 23, 39, 53, 54, 56, 61, 69, 87, 88, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.MinpackTest.testMinpackKowalikOsborne;[0, 2, 3, 4, 5, 6, 12, 14, 19, 20, 21, 22, 23, 37, 38, 42, 44, 46, 54, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 6, 12, 14, 19, 20, 21, 22, 23, 37, 38, 42, 44, 46, 54, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.MinpackTest.testMinpackLinearFullRank;[0, 2, 3, 4, 5, 6, 12, 19, 20, 21, 22, 23, 39, 43, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 6, 12, 19, 20, 21, 22, 23, 39, 43, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.MinpackTest.testMinpackLinearRank1;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 39, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 39, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.MinpackTest.testMinpackLinearRank1ZeroColsAndRows;[0, 2, 3, 4, 5, 6, 12, 19, 20, 21, 22, 23, 39, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 6, 12, 19, 20, 21, 22, 23, 39, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.MinpackTest.testMinpackMeyer;[0, 2, 3, 4, 5, 12, 14, 19, 20, 22, 23, 37, 38, 39, 42, 44, 46, 53, 54, 56, 61, 69, 70, 71, 87, 88, 246, 250, 255, 260, 262, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 14, 19, 20, 22, 23, 37, 38, 39, 42, 44, 46, 53, 54, 56, 61, 69, 70, 71, 87, 88, 246, 250, 255, 260, 262, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.MinpackTest.testMinpackOsborne1;[0, 2, 3, 4, 5, 6, 12, 14, 19, 20, 21, 22, 23, 42, 53, 54, 56, 61, 69, 87, 88, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 6, 12, 14, 19, 20, 21, 22, 23, 42, 53, 54, 56, 61, 69, 87, 88, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.MinpackTest.testMinpackOsborne2;[0, 2, 3, 4, 5, 6, 12, 14, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 39, 42, 53, 54, 56, 61, 69, 87, 88, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 6, 12, 14, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 39, 42, 53, 54, 56, 61, 69, 87, 88, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.MinpackTest.testMinpackPowellSingular;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 39, 42, 43, 54, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 39, 42, 43, 54, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.MinpackTest.testMinpackRosenbrok;[0, 2, 3, 4, 5, 6, 12, 19, 20, 22, 23, 39, 42, 43, 54, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 6, 12, 19, 20, 22, 23, 39, 42, 43, 54, 56, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.MinpackTest.testMinpackWatson;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 39, 42, 43, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 39, 42, 43, 54, 56, 58, 61, 69, 246, 250, 255, 329, 330, 354, 356, 358, 361, 363, 365, 368, 369, 370, 371, 373, 375, 380, 382, 384, 385, 390, 392, 396, 400, 402, 405, 410, 417, 418, 419, 423, 425, 428, 432, 436, 677, 695, 706, 715, 727, 808, 809, 810, 811, 2072, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136];0
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest.testCircleFitting;[0, 2, 3, 4, 5, 12, 14, 20, 21, 22, 36, 39, 42, 43, 44, 51, 54, 56, 58, 61, 72, 93, 226, 246, 247, 250, 252, 255, 265, 353, 354, 367, 419, 427, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1092, 1097, 1099, 1998, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];[0, 2, 3, 4, 5, 12, 14, 20, 21, 22, 36, 39, 42, 43, 44, 51, 54, 56, 58, 61, 72, 93, 226, 246, 247, 250, 252, 255, 265, 353, 354, 367, 419, 427, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1092, 1097, 1099, 1998, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];0
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest.testColumnsPermutation;[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 354, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1970, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 354, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1970, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];0
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest.testIllConditioned;[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 354, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1970, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 354, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1970, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];0
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest.testInconsistentEquations;[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];0
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest.testMoreEstimatedParametersSimple;[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];0
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest.testMoreEstimatedParametersUnsorted;[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];0
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest.testNoDependency;[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 354, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1970, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 354, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1970, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];0
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest.testNonInversible;[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];0
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest.testOneSet;[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 354, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1970, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 354, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1970, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];0
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest.testRedundantEquations;[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 354, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1970, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 354, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1970, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];0
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest.testTrivial;[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 354, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1970, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 354, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1970, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];0
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizerTest.testTwoSets;[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 354, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1970, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];[0, 2, 3, 4, 5, 20, 21, 22, 39, 42, 54, 56, 58, 61, 93, 226, 246, 247, 250, 252, 255, 265, 353, 354, 367, 373, 383, 402, 404, 405, 414, 419, 422, 427, 431, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 818, 1407, 1970, 1999, 2000, 2002, 2101, 2102, 2103, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testDegeneracy;[61, 93, 329, 330, 331, 341, 349, 353, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];[61, 93, 329, 330, 331, 341, 349, 353, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testEpsilon;[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testInfeasibleSolution;[70, 71, 93, 329, 331, 341, 349, 373, 376, 384, 392, 396, 402, 405, 424, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1967, 1968, 1969, 1971, 2144, 2145, 2146, 2147, 2149, 2150, 2151];[70, 71, 93, 329, 331, 341, 349, 373, 376, 384, 392, 396, 402, 405, 424, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1967, 1968, 1969, 1971, 2144, 2145, 2146, 2147, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testLargeModel;[61, 93, 329, 330, 331, 341, 349, 353, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 803, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];[61, 93, 329, 330, 331, 341, 349, 353, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 803, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testMath272;[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 803, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 803, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testMath286;[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testMath288;[93, 329, 330, 331, 353, 373, 384, 392, 396, 402, 405, 424, 695, 697, 803, 806, 807, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1969, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153];[93, 329, 330, 331, 353, 373, 384, 392, 396, 402, 405, 424, 695, 697, 803, 806, 807, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1969, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testMath290GEQ;[93, 329, 330, 331, 353, 354, 373, 384, 392, 396, 402, 405, 424, 695, 697, 803, 806, 807, 1876, 1925, 1928, 1930, 1931, 1932, 1934, 1935, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1970, 1975, 2144, 2145, 2147, 2148, 2149, 2150, 2151];[93, 329, 330, 331, 353, 354, 373, 384, 392, 396, 402, 405, 424, 695, 697, 803, 806, 807, 1876, 1925, 1928, 1930, 1931, 1932, 1934, 1935, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1970, 1975, 2144, 2145, 2147, 2148, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testMath290LEQ;[70, 71, 93, 329, 331, 341, 349, 373, 376, 384, 392, 396, 402, 405, 424, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1939, 1940, 1943, 1946, 1947, 1948, 1950, 1952, 1958, 1960, 1961, 1962, 1964, 1967, 1968, 1975, 2144, 2145, 2147, 2149, 2150, 2151];[70, 71, 93, 329, 331, 341, 349, 373, 376, 384, 392, 396, 402, 405, 424, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1939, 1940, 1943, 1946, 1947, 1948, 1950, 1952, 1958, 1960, 1961, 1962, 1964, 1967, 1968, 1975, 2144, 2145, 2147, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testMath293;[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testMath434NegativeVariable;[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1975, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1975, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testMath434PivotRowSelection;[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 803, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 803, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testMath434PivotRowSelection2;[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1975, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153];[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1975, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testMath434UnfeasibleSolution;[70, 71, 93, 329, 331, 341, 349, 373, 376, 384, 392, 396, 402, 405, 424, 695, 803, 1210, 1224, 1876, 1925, 1926, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1946, 1947, 1948, 1950, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1967, 1968, 1969, 2144, 2145, 2146, 2147, 2149, 2150, 2151];[70, 71, 93, 329, 331, 341, 349, 373, 376, 384, 392, 396, 402, 405, 424, 695, 803, 1210, 1224, 1876, 1925, 1926, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1946, 1947, 1948, 1950, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1967, 1968, 1969, 2144, 2145, 2146, 2147, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testMath713NegativeVariable;[61, 93, 329, 330, 331, 341, 349, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 803, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];[61, 93, 329, 330, 331, 341, 349, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 803, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testMath781;[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1975, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 1975, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testMath828;[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 803, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153];[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 803, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testMath828Cycle;[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 803, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153];[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 803, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testMinimization;[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 803, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 803, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars;[93, 329, 330, 331, 353, 354, 373, 384, 392, 396, 402, 405, 424, 695, 697, 803, 806, 807, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1969, 1970, 1971, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];[93, 329, 330, 331, 353, 354, 373, 384, 392, 396, 402, 405, 424, 695, 697, 803, 806, 807, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1969, 1970, 1971, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative;[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testSimplexSolver;[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testSingleVariableAndConstraint;[93, 329, 330, 331, 353, 354, 373, 384, 392, 396, 402, 405, 424, 695, 697, 803, 806, 807, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1969, 1970, 1971, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];[93, 329, 330, 331, 353, 354, 373, 384, 392, 396, 402, 405, 424, 695, 697, 803, 806, 807, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1969, 1970, 1971, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable;[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];[61, 93, 329, 330, 331, 341, 349, 353, 354, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1970, 1971, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testTrivialModel;[61, 93, 329, 330, 331, 341, 349, 353, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];[61, 93, 329, 330, 331, 341, 349, 353, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexSolverTest.testUnboundedSolution;[61, 70, 71, 93, 329, 331, 341, 349, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1971, 2144, 2145, 2146, 2147, 2149, 2150, 2151];[61, 70, 71, 93, 329, 331, 341, 349, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 803, 806, 807, 1210, 1224, 1876, 1925, 1926, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1953, 1954, 1956, 1958, 1960, 1961, 1962, 1964, 1966, 1967, 1968, 1969, 1971, 2144, 2145, 2146, 2147, 2149, 2150, 2151];0
org.apache.commons.math3.optimization.linear.SimplexTableauTest.testDropPhase1Objective;[61, 93, 329, 331, 341, 349, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 706, 715, 803, 806, 807, 1210, 1224, 1876, 1925, 1930, 1931, 1932, 1934, 1935, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1956, 1958, 1960, 1962, 1966, 1967, 1968, 1971, 1976];[61, 93, 329, 331, 341, 349, 373, 376, 384, 390, 392, 396, 402, 405, 424, 425, 695, 697, 706, 715, 803, 806, 807, 1210, 1224, 1876, 1925, 1930, 1931, 1932, 1934, 1935, 1939, 1940, 1943, 1944, 1946, 1947, 1948, 1950, 1952, 1956, 1958, 1960, 1962, 1966, 1967, 1968, 1971, 1976];0
org.apache.commons.math3.optimization.linear.SimplexTableauTest.testInitialization;[329, 331, 341, 349, 373, 376, 384, 392, 396, 402, 405, 424, 695, 697, 706, 715, 806, 807, 1210, 1224, 1876, 1925, 1930, 1932, 1934, 1935, 1939, 1940, 1946, 1947, 1948, 1950, 1952, 1958, 1960, 1962, 1967, 1968, 1971, 1976];[329, 331, 341, 349, 373, 376, 384, 392, 396, 402, 405, 424, 695, 697, 706, 715, 806, 807, 1210, 1224, 1876, 1925, 1930, 1932, 1934, 1935, 1939, 1940, 1946, 1947, 1948, 1950, 1952, 1958, 1960, 1962, 1967, 1968, 1971, 1976];0
org.apache.commons.math3.optimization.linear.SimplexTableauTest.testSerial;[329, 331, 341, 344, 347, 349, 373, 376, 384, 392, 396, 402, 405, 424, 695, 697, 732, 806, 807, 1210, 1224, 1876, 1925, 1930, 1932, 1934, 1935, 1939, 1940, 1946, 1947, 1948, 1950, 1952, 1958, 1960, 1962, 1967, 1968, 1971, 1972, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988];[329, 331, 341, 344, 347, 349, 373, 376, 384, 392, 396, 402, 405, 424, 695, 697, 732, 806, 807, 1210, 1224, 1876, 1925, 1930, 1932, 1934, 1935, 1939, 1940, 1946, 1947, 1948, 1950, 1952, 1958, 1960, 1962, 1967, 1968, 1971, 1972, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988];0
org.apache.commons.math3.optimization.linear.SimplexTableauTest.testTableauWithNoArtificialVars;[331, 373, 392, 396, 402, 405, 424, 695, 697, 706, 715, 806, 807, 1876, 1925, 1930, 1932, 1934, 1935, 1939, 1940, 1946, 1947, 1948, 1950, 1952, 1958, 1960, 1962, 1967, 1971, 1976];[331, 373, 392, 396, 402, 405, 424, 695, 697, 706, 715, 806, 807, 1876, 1925, 1930, 1932, 1934, 1935, 1939, 1940, 1946, 1947, 1948, 1950, 1952, 1958, 1960, 1962, 1967, 1971, 1976];0
org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizerTest.testCircleFitting;[0, 2, 3, 4, 5, 12, 14, 20, 21, 22, 36, 39, 42, 43, 44, 51, 54, 56, 58, 61, 72, 93, 226, 246, 247, 250, 252, 255, 265, 353, 354, 367, 419, 427, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1092, 1097, 1099, 1998, 1999, 2000, 2002, 2005, 2008, 2101, 2102, 2103, 2105, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143, 2154, 2155, 2156, 2157, 2158];[0, 2, 3, 4, 5, 12, 14, 20, 21, 22, 36, 39, 42, 43, 44, 51, 54, 56, 58, 61, 72, 93, 226, 246, 247, 250, 252, 255, 265, 353, 354, 367, 419, 427, 467, 468, 469, 471, 473, 474, 475, 477, 478, 480, 481, 483, 486, 491, 492, 1092, 1097, 1099, 1998, 1999, 2000, 2002, 2005, 2008, 2101, 2102, 2103, 2105, 2107, 2108, 2109, 2111, 2140, 2141, 2142, 2143, 2154, 2155, 2156, 2157, 2158];0
org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest.testNoOptimum;[12, 61, 246, 247, 250, 255, 356, 363, 368, 369, 370, 371, 373, 400, 402, 405, 412, 419, 423, 428, 2005, 2008, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2159, 2160];[12, 61, 246, 247, 250, 255, 356, 363, 368, 369, 370, 371, 373, 400, 402, 405, 412, 419, 423, 428, 2005, 2008, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2159, 2160];0
org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest.testTrivial;[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 818, 819, 1407, 2005, 2008, 2072, 2074, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2159, 2160, 2161, 2162, 2163];[0, 2, 3, 4, 5, 12, 19, 20, 21, 22, 23, 54, 56, 58, 61, 69, 70, 71, 246, 247, 250, 255, 329, 330, 331, 349, 353, 354, 356, 358, 361, 363, 364, 365, 367, 368, 369, 370, 371, 373, 375, 376, 380, 382, 383, 384, 385, 390, 392, 396, 399, 400, 402, 404, 405, 410, 412, 414, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 431, 672, 818, 819, 1407, 2005, 2008, 2072, 2074, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2159, 2160, 2161, 2162, 2163];0
org.apache.commons.math3.optimization.MultivariateMultiStartOptimizerTest.testRosenbrock;[246, 247, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2005, 2008, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2022, 2023, 2024, 2025, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115, 2154, 2155, 2158];[246, 247, 250, 255, 353, 354, 367, 419, 427, 1970, 1998, 2002, 2005, 2008, 2013, 2014, 2016, 2017, 2018, 2019, 2021, 2022, 2023, 2024, 2025, 2101, 2102, 2103, 2104, 2105, 2107, 2108, 2109, 2111, 2114, 2115, 2154, 2155, 2158];0
org.apache.commons.math3.optimization.PointValuePairTest.testSerial;[353, 354, 2081];[353, 354, 2081];0
org.apache.commons.math3.optimization.PointVectorValuePairTest.testSerial;[353, 354, 2074, 2082];[353, 354, 2074, 2082];0
org.apache.commons.math3.optimization.SimplePointCheckerTest.testIterationCheck;[2029];[2029];0
org.apache.commons.math3.optimization.SimplePointCheckerTest.testIterationCheckDisabled;[354, 367, 427, 2029];[354, 367, 427, 2029];0
org.apache.commons.math3.optimization.SimplePointCheckerTest.testIterationCheckPrecondition;[70, 71];[70, 71];0
org.apache.commons.math3.optimization.SimpleValueCheckerTest.testIterationCheck;[2002];[2002];0
org.apache.commons.math3.optimization.SimpleValueCheckerTest.testIterationCheckDisabled;[353, 367, 427, 2002];[353, 367, 427, 2002];0
org.apache.commons.math3.optimization.SimpleValueCheckerTest.testIterationCheckPrecondition;[70, 71];[70, 71];0
org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest.testIterationCheck;[399];[399];0
org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest.testIterationCheckDisabled;[353, 364, 367, 399, 427];[353, 364, 367, 399, 427];0
org.apache.commons.math3.optimization.SimpleVectorValueCheckerTest.testIterationCheckPrecondition;[70, 71];[70, 71];0
org.apache.commons.math3.optimization.univariate.BracketFinderTest.testCubicMax;[246, 250, 255, 2049, 2057, 2058, 2064, 2066];[246, 250, 255, 2049, 2057, 2058, 2064, 2066];0
org.apache.commons.math3.optimization.univariate.BracketFinderTest.testCubicMin;[246, 250, 255, 2049, 2057, 2058, 2064, 2066];[246, 250, 255, 2049, 2057, 2058, 2064, 2066];0
org.apache.commons.math3.optimization.univariate.BracketFinderTest.testIntervalBoundsOrdering;[246, 250, 255, 2049, 2058, 2064, 2066];[246, 250, 255, 2049, 2058, 2064, 2066];0
org.apache.commons.math3.optimization.univariate.BracketFinderTest.testMinimumIsOnIntervalBoundary;[246, 250, 255, 2049, 2058, 2064, 2066];[246, 250, 255, 2049, 2058, 2064, 2066];0
org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries;[93, 246, 250, 255, 2048, 2050, 2054, 2062, 2116, 2117, 2118, 2119, 2120, 2121, 2122];[93, 246, 250, 255, 2048, 2050, 2054, 2062, 2116, 2117, 2118, 2119, 2120, 2121, 2122];0
org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest;[76, 77, 78, 80, 81, 93, 147, 203, 204, 209, 246, 247, 250, 255, 2048, 2050, 2054, 2062, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2164];[76, 77, 78, 80, 81, 93, 147, 203, 204, 209, 246, 247, 250, 255, 2048, 2050, 2054, 2062, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2164];0
org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMath832;[12, 93, 246, 250, 255, 2048, 2050, 2054, 2062, 2116, 2117, 2118, 2119, 2120, 2121, 2122];[12, 93, 246, 250, 255, 2048, 2050, 2054, 2062, 2116, 2117, 2118, 2119, 2120, 2121, 2122];0
org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMath855;[76, 77, 78, 80, 81, 93, 147, 203, 204, 209, 246, 247, 250, 255, 2048, 2050, 2054, 2062, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2164];[76, 77, 78, 80, 81, 93, 147, 203, 204, 209, 246, 247, 250, 255, 2048, 2050, 2054, 2062, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2164];0
org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMinEndpoints;[76, 77, 78, 80, 81, 93, 147, 246, 250, 255, 2048, 2050, 2054, 2062, 2116, 2117, 2118, 2119, 2120, 2121, 2122];[76, 77, 78, 80, 81, 93, 147, 246, 250, 255, 2048, 2050, 2054, 2062, 2116, 2117, 2118, 2119, 2120, 2121, 2122];0
org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testQuinticMax;[70, 71, 93, 246, 250, 255, 260, 262, 2048, 2050, 2054, 2062, 2116, 2117, 2118, 2119, 2120, 2121, 2122];[70, 71, 93, 246, 250, 255, 260, 262, 2048, 2050, 2054, 2062, 2116, 2117, 2118, 2119, 2120, 2121, 2122];0
org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testQuinticMin;[93, 246, 247, 250, 255, 2048, 2050, 2054, 2062, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2164];[93, 246, 247, 250, 255, 2048, 2050, 2054, 2062, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2164];0
org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testQuinticMinStatistics;[93, 246, 247, 250, 255, 669, 670, 691, 693, 718, 2048, 2050, 2054, 2062, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2164];[93, 246, 247, 250, 255, 669, 670, 691, 693, 718, 2048, 2050, 2054, 2062, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2164];0
org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testSinMin;[70, 71, 76, 77, 78, 80, 81, 93, 147, 246, 247, 250, 255, 260, 262, 265, 2048, 2050, 2054, 2062, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2164, 2165];[70, 71, 76, 77, 78, 80, 81, 93, 147, 246, 247, 250, 255, 260, 262, 265, 2048, 2050, 2054, 2062, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2164, 2165];0
org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testSinMinWithValueChecker;[76, 77, 78, 80, 81, 93, 147, 246, 250, 255, 367, 427, 2048, 2050, 2054, 2062, 2063, 2116, 2117, 2118, 2119, 2120, 2121, 2122];[76, 77, 78, 80, 81, 93, 147, 246, 250, 255, 367, 427, 2048, 2050, 2054, 2062, 2063, 2116, 2117, 2118, 2119, 2120, 2121, 2122];0
org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest.testIterationCheck;[2063];[2063];0
org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest.testIterationCheckDisabled;[367, 427, 2062, 2063];[367, 427, 2062, 2063];0
org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueCheckerTest.testIterationCheckPrecondition;[70, 71];[70, 71];0
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest.testBadFunction;[246, 247, 250, 255, 2048, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2164, 2166, 2167, 2168];[246, 247, 250, 255, 2048, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2164, 2166, 2167, 2168];0
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest.testQuinticMin;[93, 246, 247, 250, 255, 2048, 2050, 2054, 2062, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2164, 2166, 2167, 2168, 2169];[93, 246, 247, 250, 255, 2048, 2050, 2054, 2062, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2164, 2166, 2167, 2168, 2169];0
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizerTest.testSinMin;[76, 77, 78, 80, 81, 93, 147, 246, 247, 250, 255, 2048, 2050, 2054, 2062, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2164, 2166, 2167, 2168, 2169];[76, 77, 78, 80, 81, 93, 147, 246, 247, 250, 255, 2048, 2050, 2054, 2062, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2164, 2166, 2167, 2168, 2169];0
org.apache.commons.math3.primes.PrimesTest.testIsPrime;[2170, 2171];[2170, 2171];0
org.apache.commons.math3.primes.PrimesTest.testNextPrime;[70, 71, 771, 773, 774, 2170, 2171, 2172, 2173];[70, 71, 771, 773, 774, 2170, 2171, 2172, 2173];0
org.apache.commons.math3.primes.PrimesTest.testPrimeFactors;[12, 70, 71, 771, 773, 774, 2173, 2174, 2175, 2176, 2177];[12, 70, 71, 771, 773, 774, 2173, 2174, 2175, 2176, 2177];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testConfig;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testDoubleDirect;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testFloatDirect;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNexBoolean2;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNexBytes;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextBeta;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextBinomial;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextBooleanDirect;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextCauchy;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextChiSquare;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextExponential;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextF;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextFloatDirect;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextGamma;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextGaussian;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextHex;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextHypergeometric;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextInt2;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextIntDirect;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextIntExtremeValues;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextIntIAE;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextIntIAE2;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextIntNeg;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextIntNegativeRange;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextIntNegativeToPositiveRange;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextIntPositiveRange;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextIntWideRange;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextInversionDeviate;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextLong2;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextLongDirect;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextLongExtremeValues;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextLongIAE;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextLongNegativeRange;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextLongNegativeToPositiveRange;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextLongPositiveRange;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextLongWideRange;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextPascal;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextPermutation;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextPoisson;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextPoissonConsistency;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextSample;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextSecureHex;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextSecureIntIAE;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextSecureIntNegativeRange;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextSecureIntNegativeToPositiveRange;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextSecureIntPositiveRange;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextSecureLongIAE;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextSecureLongNegativeRange;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextSecureLongNegativeToPositiveRange;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextSecureLongPositiveRange;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextT;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextUniformExclusiveEndpoints;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextUniformExtremeValues;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextUniformIAE;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextUniformUniformMaximalInterval;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextUniformUniformNegaiveBounds;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextUniformUniformNegativeToPositiveBounds;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextUniformUniformPositiveBounds;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextWeibull;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testNextZipf;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testReseed;[107];[107];0
org.apache.commons.math3.random.BitsStreamGeneratorTest.testSeeding;[107];[107];0
org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testMath226;[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 695, 706, 715, 1569, 1570, 2008, 2178];[12, 61, 373, 384, 390, 392, 396, 402, 405, 410, 425, 695, 706, 715, 1569, 1570, 2008, 2178];0
org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance;[373, 384, 392, 396, 402, 405, 410, 695, 1713, 2008, 2178, 2179, 2180, 2181, 2182, 2183, 2184];[373, 384, 392, 396, 402, 405, 410, 695, 1713, 2008, 2178, 2179, 2180, 2181, 2182, 2183, 2184];0
org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testRank;[2185];[2185];0
org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix;[373, 384, 392, 396, 402, 405, 417, 677, 679, 685, 695, 709, 720, 724, 725, 2186];[373, 384, 392, 396, 402, 405, 417, 677, 679, 685, 695, 709, 720, 724, 725, 2186];0
org.apache.commons.math3.random.CorrelatedRandomVectorGeneratorTest.testSampleWithZeroCovariance;[12, 61, 93, 117, 373, 384, 390, 392, 396, 402, 405, 410, 425, 695, 706, 715, 1215, 1216, 1569, 1570, 2008, 2178, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194];[12, 61, 93, 117, 373, 384, 390, 392, 396, 402, 405, 410, 425, 695, 706, 715, 1215, 1216, 1569, 1570, 2008, 2178, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testBinIndexOverflow;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testConsistency;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testCumulativeProbabilities;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testDensities;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testDensityIntegrals;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testDistributionClone;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testDoubleLoad;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testGeneratorConfig;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testGetBinUpperBounds;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testGridTooFat;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testGridTooFine;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testIllegalArguments;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testInverseCumulativeProbabilities;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testIsSupportLowerBoundInclusive;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testIsSupportUpperBoundInclusive;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testKernelOverrideConstant;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testKernelOverrideUniform;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testLoad;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testLoadNullDoubleArray;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testLoadNullFile;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testLoadNullURL;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testNexFail;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testNext;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testReSeed;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testSampling;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.EmpiricalDistributionTest.testSerialization;[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];[18, 53, 61, 93, 107, 108, 115, 627, 633, 753, 757, 758, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2195, 2196, 2197, 2198, 2199, 2200];0
org.apache.commons.math3.random.GaussianRandomGeneratorTest.testMeanAndStandardDeviation;[681, 688, 691, 693, 711, 718, 721, 728, 2008, 2087, 2201, 2202];[681, 688, 691, 693, 711, 718, 721, 728, 2008, 2087, 2201, 2202];0
org.apache.commons.math3.random.ISAACTest.testConfig;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testDoubleDirect;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testFloatDirect;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNexBoolean2;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNexBytes;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextBeta;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextBinomial;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextBooleanDirect;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextCauchy;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextChiSquare;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextExponential;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextF;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextFloatDirect;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextGamma;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextGaussian;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextHex;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextHypergeometric;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextInt2;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextIntDirect;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextIntExtremeValues;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextIntIAE;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextIntIAE2;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextIntNeg;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextIntNegativeRange;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextIntNegativeToPositiveRange;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextIntPositiveRange;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextIntWideRange;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextInversionDeviate;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextLong2;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextLongDirect;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextLongExtremeValues;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextLongIAE;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextLongNegativeRange;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextLongNegativeToPositiveRange;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextLongPositiveRange;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextLongWideRange;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextPascal;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextPermutation;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextPoisson;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextPoissonConsistency;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextSample;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextSecureHex;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextSecureIntIAE;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextSecureIntNegativeRange;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextSecureIntNegativeToPositiveRange;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextSecureIntPositiveRange;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextSecureLongIAE;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextSecureLongNegativeRange;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextSecureLongNegativeToPositiveRange;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextSecureLongPositiveRange;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextT;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextUniformExclusiveEndpoints;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextUniformExtremeValues;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextUniformIAE;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextUniformUniformMaximalInterval;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextUniformUniformNegaiveBounds;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextUniformUniformNegativeToPositiveBounds;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextUniformUniformPositiveBounds;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextWeibull;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testNextZipf;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testReference;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testReseed;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.ISAACTest.testSeeding;[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];[107, 2203, 2204, 2205, 2206, 2207, 2208, 2209];0
org.apache.commons.math3.random.MersenneTwisterTest.testConfig;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testDoubleDirect;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testFloatDirect;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testMakotoNishimura;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNexBoolean2;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNexBytes;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextBeta;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextBinomial;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextBooleanDirect;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextCauchy;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextChiSquare;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextExponential;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextF;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextFloatDirect;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextGamma;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextGaussian;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextHex;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextHypergeometric;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextInt2;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextIntDirect;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextIntExtremeValues;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextIntIAE;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextIntIAE2;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextIntNeg;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextIntNegativeRange;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextIntNegativeToPositiveRange;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextIntPositiveRange;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextIntWideRange;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextInversionDeviate;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextLong2;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextLongDirect;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextLongExtremeValues;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextLongIAE;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextLongNegativeRange;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextLongNegativeToPositiveRange;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextLongPositiveRange;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextLongWideRange;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextPascal;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextPermutation;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextPoisson;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextPoissonConsistency;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextSample;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextSecureHex;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextSecureIntIAE;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextSecureIntNegativeRange;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextSecureIntNegativeToPositiveRange;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextSecureIntPositiveRange;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextSecureLongIAE;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextSecureLongNegativeRange;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextSecureLongNegativeToPositiveRange;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextSecureLongPositiveRange;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextT;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextUniformExclusiveEndpoints;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextUniformExtremeValues;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextUniformIAE;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextUniformUniformMaximalInterval;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextUniformUniformNegaiveBounds;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextUniformUniformNegativeToPositiveBounds;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextUniformUniformPositiveBounds;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextWeibull;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testNextZipf;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testReseed;[107, 343];[107, 343];0
org.apache.commons.math3.random.MersenneTwisterTest.testSeeding;[107, 343];[107, 343];0
org.apache.commons.math3.random.RandomAdaptorTest.testAdaptor;[2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218];[2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testConfig;[105, 107, 108, 647, 653, 654, 655, 2219, 2220, 2221, 2222, 2223, 2224, 2225];[105, 107, 108, 647, 653, 654, 655, 2219, 2220, 2221, 2222, 2223, 2224, 2225];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextBeta;[12, 18, 46, 53, 61, 93, 105, 107, 108, 115, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 647, 653, 655, 666, 757, 2226, 2227, 2228, 2229, 2230, 2231, 2232];[12, 18, 46, 53, 61, 93, 105, 107, 108, 115, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 647, 653, 655, 666, 757, 2226, 2227, 2228, 2229, 2230, 2231, 2232];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextBinomial;[12, 18, 46, 53, 93, 105, 107, 108, 115, 623, 625, 627, 633, 634, 647, 648, 653, 655, 757, 2226, 2227, 2228, 2229, 2230, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245];[12, 18, 46, 53, 93, 105, 107, 108, 115, 623, 625, 627, 633, 634, 647, 648, 653, 655, 757, 2226, 2227, 2228, 2229, 2230, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextCauchy;[12, 18, 46, 53, 78, 81, 105, 107, 108, 115, 131, 134, 633, 647, 653, 655, 666, 757, 2226, 2227, 2228, 2229, 2230, 2232, 2246, 2247];[12, 18, 46, 53, 78, 81, 105, 107, 108, 115, 131, 134, 633, 647, 653, 655, 666, 757, 2226, 2227, 2228, 2229, 2230, 2232, 2246, 2247];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextChiSquare;[12, 18, 46, 53, 61, 93, 105, 107, 108, 115, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 627, 631, 633, 647, 653, 655, 666, 757, 758, 2226, 2227, 2228, 2229, 2230, 2232, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256];[12, 18, 46, 53, 61, 93, 105, 107, 108, 115, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 627, 631, 633, 647, 653, 655, 666, 757, 758, 2226, 2227, 2228, 2229, 2230, 2232, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextExponential;[12, 18, 46, 53, 70, 71, 105, 107, 108, 115, 633, 647, 653, 655, 757, 2226, 2227, 2228, 2229, 2230, 2232, 2257, 2258, 2259];[12, 18, 46, 53, 70, 71, 105, 107, 108, 115, 633, 647, 653, 655, 757, 2226, 2227, 2228, 2229, 2230, 2232, 2257, 2258, 2259];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextF;[12, 18, 46, 53, 61, 93, 105, 107, 108, 115, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 623, 625, 627, 631, 633, 634, 647, 653, 655, 666, 757, 2226, 2227, 2228, 2229, 2230, 2232, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270];[12, 18, 46, 53, 61, 93, 105, 107, 108, 115, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 623, 625, 627, 631, 633, 634, 647, 653, 655, 666, 757, 2226, 2227, 2228, 2229, 2230, 2232, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextGamma;[12, 18, 46, 53, 61, 76, 77, 78, 79, 80, 81, 93, 105, 107, 108, 115, 246, 250, 252, 255, 340, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 627, 631, 633, 647, 653, 655, 757, 758, 2226, 2227, 2228, 2229, 2230, 2232, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278];[12, 18, 46, 53, 61, 70, 71, 107, 108, 115, 246, 250, 252, 255, 467, 468, 469, 471, 473, 475, 478, 480, 481, 486, 491, 521, 631, 633, 757, 2229, 2273, 2274, 2275, 2276, 2277];1
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextGaussian;[12, 18, 46, 53, 70, 71, 76, 77, 78, 79, 80, 81, 105, 107, 108, 115, 340, 633, 647, 653, 655, 757, 2226, 2227, 2228, 2229, 2230, 2232, 2279, 2280];[12, 18, 46, 53, 70, 71, 76, 77, 78, 79, 80, 81, 105, 107, 108, 115, 340, 633, 647, 653, 655, 757, 2226, 2227, 2228, 2229, 2230, 2232, 2279, 2280];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextHex;[12, 18, 46, 53, 70, 71, 93, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2283, 2284, 2285];[12, 18, 46, 53, 70, 71, 93, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2283, 2284, 2285];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextHypergeometric;[12, 18, 46, 53, 105, 107, 108, 115, 633, 647, 648, 653, 655, 757, 2226, 2227, 2228, 2229, 2230, 2232, 2233, 2235, 2241, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301];[12, 18, 46, 53, 105, 107, 108, 115, 633, 647, 648, 653, 655, 757, 2226, 2227, 2228, 2229, 2230, 2232, 2233, 2235, 2241, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextIntExtremeValues;[647, 653, 2222, 2302];[647, 653, 2222, 2302];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextIntIAE;[70, 71, 2302];[70, 71, 2302];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextIntNegativeRange;[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2222, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284, 2302];[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2222, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284, 2302];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextIntNegativeToPositiveRange;[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2222, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284, 2302];[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2222, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284, 2302];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextIntPositiveRange;[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2222, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284, 2302];[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2222, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284, 2302];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextIntWideRange;[647, 653, 2222, 2302];[647, 653, 2222, 2302];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextInversionDeviate;[12, 18, 53, 61, 93, 105, 107, 108, 115, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 647, 653, 666, 2220];[12, 18, 53, 61, 93, 105, 107, 108, 115, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 647, 653, 666, 2220];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextLongExtremeValues;[647, 653, 2224, 2303];[647, 653, 2224, 2303];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextLongIAE;[70, 71, 2224];[70, 71, 2224];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextLongNegativeRange;[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2222, 2224, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2222, 2224, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextLongNegativeToPositiveRange;[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2222, 2224, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2222, 2224, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextLongPositiveRange;[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2222, 2224, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2222, 2224, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextLongWideRange;[647, 653, 2224, 2303];[647, 653, 2224, 2303];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextPascal;[12, 18, 46, 53, 93, 105, 107, 108, 115, 623, 627, 633, 634, 647, 648, 653, 655, 757, 758, 2226, 2227, 2228, 2229, 2230, 2232, 2233, 2235, 2241, 2243, 2244, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312];[12, 18, 46, 53, 93, 105, 107, 108, 115, 623, 627, 633, 634, 647, 648, 653, 655, 757, 758, 2226, 2227, 2228, 2229, 2230, 2232, 2233, 2235, 2241, 2243, 2244, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextPermutation;[12, 18, 46, 53, 107, 108, 115, 633, 647, 653, 757, 2222, 2226, 2227, 2228, 2229, 2230, 2232, 2302, 2313, 2314, 2315];[12, 18, 46, 53, 107, 108, 115, 633, 647, 653, 757, 2222, 2226, 2227, 2228, 2229, 2230, 2232, 2302, 2313, 2314, 2315];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextPoisson;[12, 18, 46, 53, 70, 71, 105, 107, 108, 115, 633, 647, 653, 655, 757, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284, 2298, 2316, 2317, 2318, 2319];[12, 18, 46, 53, 70, 71, 105, 107, 108, 115, 633, 647, 653, 655, 757, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284, 2298, 2316, 2317, 2318, 2319];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextPoissonConsistency;[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 105, 107, 108, 115, 340, 627, 633, 647, 653, 756, 757, 758, 2220, 2226, 2227, 2228, 2229, 2230, 2232, 2259, 2281, 2282, 2284, 2316, 2318, 2319, 2320];[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 93, 105, 107, 108, 115, 340, 627, 633, 647, 653, 756, 757, 758, 2220, 2226, 2227, 2228, 2229, 2230, 2232, 2259, 2281, 2282, 2284, 2316, 2318, 2319, 2320];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextSample;[70, 71, 647, 653, 2222, 2228, 2230, 2232, 2302, 2313, 2314, 2315, 2321];[70, 71, 647, 653, 2222, 2228, 2230, 2232, 2302, 2313, 2314, 2315, 2321];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextSecureHex;[12, 18, 46, 53, 70, 71, 93, 107, 108, 115, 627, 633, 757, 758, 2221, 2223, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];[12, 18, 46, 53, 70, 71, 93, 107, 108, 115, 627, 633, 757, 758, 2221, 2223, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextSecureIntIAE;[70, 71, 2322];[70, 71, 2322];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextSecureIntNegativeRange;[12, 18, 46, 53, 107, 108, 115, 633, 757, 2221, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284, 2322];[12, 18, 46, 53, 107, 108, 115, 633, 757, 2221, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284, 2322];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextSecureIntNegativeToPositiveRange;[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2221, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284, 2322];[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2221, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284, 2322];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextSecureIntPositiveRange;[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2221, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284, 2322];[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2221, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284, 2322];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextSecureLongIAE;[70, 71, 2219];[70, 71, 2219];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextSecureLongNegativeRange;[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2219, 2221, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2219, 2221, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextSecureLongNegativeToPositiveRange;[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2219, 2221, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2219, 2221, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextSecureLongPositiveRange;[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2219, 2221, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2219, 2221, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextT;[12, 18, 46, 53, 61, 93, 105, 107, 108, 115, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 623, 627, 631, 633, 634, 647, 653, 655, 666, 757, 2226, 2227, 2228, 2229, 2230, 2232, 2323, 2324, 2325];[12, 18, 46, 53, 61, 93, 105, 107, 108, 115, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 623, 627, 631, 633, 634, 647, 653, 655, 666, 757, 2226, 2227, 2228, 2229, 2230, 2232, 2323, 2324, 2325];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextUniformExclusiveEndpoints;[105, 647, 653, 2220];[105, 647, 653, 2220];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextUniformExtremeValues;[105, 647, 653, 2220];[105, 647, 653, 2220];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextUniformIAE;[70, 71, 2220];[70, 71, 2220];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextUniformUniformMaximalInterval;[12, 18, 46, 53, 93, 105, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2220, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];[12, 18, 46, 53, 93, 105, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2220, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextUniformUniformNegaiveBounds;[12, 18, 46, 53, 93, 105, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2220, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];[12, 18, 46, 53, 93, 105, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2220, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextUniformUniformNegativeToPositiveBounds;[12, 18, 46, 53, 93, 105, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2220, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];[12, 18, 46, 53, 93, 105, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2220, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextUniformUniformPositiveBounds;[12, 18, 46, 53, 93, 105, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2220, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];[12, 18, 46, 53, 93, 105, 107, 108, 115, 627, 633, 647, 653, 757, 758, 2220, 2226, 2227, 2228, 2229, 2230, 2232, 2281, 2282, 2284];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextWeibull;[12, 18, 46, 53, 105, 107, 108, 115, 633, 647, 653, 655, 666, 757, 2226, 2227, 2228, 2229, 2230, 2232, 2326, 2327];[12, 18, 46, 53, 105, 107, 108, 115, 633, 647, 653, 655, 666, 757, 2226, 2227, 2228, 2229, 2230, 2232, 2326, 2327];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testNextZipf;[12, 18, 46, 53, 105, 107, 108, 115, 633, 647, 648, 653, 655, 757, 2226, 2227, 2228, 2229, 2230, 2232, 2233, 2235, 2241, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338];[12, 18, 46, 53, 105, 107, 108, 115, 633, 647, 648, 653, 655, 757, 2226, 2227, 2228, 2229, 2230, 2232, 2233, 2235, 2241, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338];0
org.apache.commons.math3.random.RandomDataGeneratorTest.testReseed;[12, 53, 105, 107, 108, 647, 650, 652, 653, 654, 655, 2316, 2318];[12, 53, 105, 107, 108, 647, 650, 652, 653, 654, 655, 2316, 2318];0
org.apache.commons.math3.random.StableRandomGeneratorTest.testAlphaRangeAboveTwo;[70, 71, 144];[70, 71, 144];0
org.apache.commons.math3.random.StableRandomGeneratorTest.testAlphaRangeBelowZero;[70, 71, 144];[70, 71, 144];0
org.apache.commons.math3.random.StableRandomGeneratorTest.testBetaRangeAboveOne;[70, 71, 144];[70, 71, 144];0
org.apache.commons.math3.random.StableRandomGeneratorTest.testBetaRangeBelowMinusOne;[70, 71, 144];[70, 71, 144];0
org.apache.commons.math3.random.StableRandomGeneratorTest.testCauchyCase;[18, 78, 81, 105, 131, 134, 647, 669, 670, 718, 2083, 2084, 2085, 2086, 2087, 2088, 2090, 2091, 2092, 2093, 2094, 2095, 2339];[18, 78, 81, 105, 131, 134, 647, 669, 670, 718, 2083, 2084, 2085, 2086, 2087, 2088, 2090, 2091, 2092, 2093, 2094, 2095, 2339];0
org.apache.commons.math3.random.StableRandomGeneratorTest.testGaussianCase;[12, 18, 77, 78, 80, 81, 105, 647, 681, 688, 691, 693, 711, 718, 721, 728, 2201, 2202, 2339];[12, 18, 77, 78, 80, 81, 105, 647, 681, 688, 691, 693, 711, 718, 721, 728, 2201, 2202, 2339];0
org.apache.commons.math3.random.StableRandomGeneratorTest.testNextDouble;[18, 46, 53, 76, 77, 78, 79, 80, 81, 105, 131, 134, 647, 691, 693, 711, 718, 2202, 2339];[18, 46, 53, 76, 77, 78, 79, 80, 81, 105, 131, 134, 647, 691, 693, 711, 718, 2202, 2339];0
org.apache.commons.math3.random.SynchronizedRandomGeneratorTest.testAdapter;[12, 18, 76, 77, 78, 79, 80, 81, 105, 107, 333, 340, 343, 2222, 2285, 2303, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348];[12, 18, 76, 77, 78, 79, 80, 81, 105, 107, 333, 340, 343, 2222, 2285, 2303, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348];0
org.apache.commons.math3.random.SynchronizedRandomGeneratorTest.testMath899Sync;[12, 18, 76, 77, 78, 79, 80, 81, 105, 107, 333, 340, 343, 2346];[12, 18, 76, 77, 78, 79, 80, 81, 105, 107, 333, 340, 343, 2346];0
org.apache.commons.math3.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation;[373, 384, 392, 396, 402, 405, 410, 695, 1713, 2005, 2008, 2179, 2180, 2181, 2182, 2183, 2184];[373, 384, 392, 396, 402, 405, 410, 695, 1713, 2005, 2008, 2179, 2180, 2181, 2182, 2183, 2184];0
org.apache.commons.math3.random.UniformRandomGeneratorTest.testMeanAndStandardDeviation;[12, 681, 688, 691, 693, 711, 718, 721, 728, 2201, 2202, 2349];[12, 681, 688, 691, 693, 711, 718, 721, 728, 2201, 2202, 2349];0
org.apache.commons.math3.random.UnitSphereRandomVectorGeneratorTest.test2DDistribution;[8, 9, 12, 13, 334];[8, 9, 12, 13, 334];0
org.apache.commons.math3.random.ValueServerTest.testEmptyReplayFile;[2350, 2351];[2350, 2351];0
org.apache.commons.math3.random.ValueServerTest.testFill;[2350, 2351];[2350, 2351];0
org.apache.commons.math3.random.ValueServerTest.testFixedSeed;[2350, 2351];[2350, 2351];0
org.apache.commons.math3.random.ValueServerTest.testModes;[2350, 2351];[2350, 2351];0
org.apache.commons.math3.random.ValueServerTest.testNextDigest;[2350, 2351];[2350, 2351];0
org.apache.commons.math3.random.ValueServerTest.testNextDigestFail;[2350, 2351];[2350, 2351];0
org.apache.commons.math3.random.ValueServerTest.testProperties;[2350, 2351];[2350, 2351];0
org.apache.commons.math3.random.ValueServerTest.testReplay;[2350, 2351];[2350, 2351];0
org.apache.commons.math3.random.Well1024aTest.testConfig;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testDoubleDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testFloatDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNexBoolean2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNexBytes;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextBeta;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextBinomial;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextBooleanDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextCauchy;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextChiSquare;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextExponential;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextF;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextFloatDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextGamma;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextGaussian;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextHex;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextHypergeometric;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextInt2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextIntDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextIntExtremeValues;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextIntIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextIntIAE2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextIntNeg;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextIntNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextIntNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextIntPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextIntWideRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextInversionDeviate;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextLong2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextLongDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextLongExtremeValues;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextLongIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextLongNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextLongNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextLongPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextLongWideRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextPascal;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextPermutation;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextPoisson;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextPoissonConsistency;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextSample;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextSecureHex;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextSecureIntIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextSecureIntNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextSecureIntNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextSecureIntPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextSecureLongIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextSecureLongNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextSecureLongNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextSecureLongPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextT;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextUniformExclusiveEndpoints;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextUniformExtremeValues;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextUniformIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextUniformUniformMaximalInterval;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextUniformUniformNegaiveBounds;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextUniformUniformNegativeToPositiveBounds;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextUniformUniformPositiveBounds;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextWeibull;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testNextZipf;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testReferenceCode;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testReseed;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well1024aTest.testSeeding;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testConfig;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testDoubleDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testFloatDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNexBoolean2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNexBytes;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextBeta;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextBinomial;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextBooleanDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextCauchy;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextChiSquare;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextExponential;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextF;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextFloatDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextGamma;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextGaussian;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextHex;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextHypergeometric;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextInt2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextIntDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextIntExtremeValues;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextIntIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextIntIAE2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextIntNeg;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextIntNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextIntNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextIntPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextIntWideRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextInversionDeviate;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextLong2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextLongDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextLongExtremeValues;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextLongIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextLongNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextLongNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextLongPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextLongWideRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextPascal;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextPermutation;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextPoisson;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextPoissonConsistency;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextSample;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextSecureHex;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextSecureIntIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextSecureIntNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextSecureIntNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextSecureIntPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextSecureLongIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextSecureLongNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextSecureLongNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextSecureLongPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextT;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextUniformExclusiveEndpoints;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextUniformExtremeValues;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextUniformIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextUniformUniformMaximalInterval;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextUniformUniformNegaiveBounds;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextUniformUniformNegativeToPositiveBounds;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextUniformUniformPositiveBounds;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextWeibull;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testNextZipf;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testReferenceCode;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testReseed;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937aTest.testSeeding;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testConfig;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testDoubleDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testFloatDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNexBoolean2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNexBytes;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextBeta;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextBinomial;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextBooleanDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextCauchy;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextChiSquare;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextExponential;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextF;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextFloatDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextGamma;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextGaussian;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextHex;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextHypergeometric;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextInt2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextIntDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextIntExtremeValues;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextIntIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextIntIAE2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextIntNeg;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextIntNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextIntNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextIntPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextIntWideRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextInversionDeviate;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextLong2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextLongDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextLongExtremeValues;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextLongIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextLongNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextLongNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextLongPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextLongWideRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextPascal;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextPermutation;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextPoisson;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextPoissonConsistency;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextSample;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextSecureHex;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextSecureIntIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextSecureIntNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextSecureIntNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextSecureIntPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextSecureLongIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextSecureLongNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextSecureLongNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextSecureLongPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextT;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextUniformExclusiveEndpoints;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextUniformExtremeValues;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextUniformIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextUniformUniformMaximalInterval;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextUniformUniformNegaiveBounds;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextUniformUniformNegativeToPositiveBounds;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextUniformUniformPositiveBounds;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextWeibull;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testNextZipf;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testReferenceCode;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testReseed;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well19937cTest.testSeeding;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testConfig;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testDoubleDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testFloatDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNexBoolean2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNexBytes;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextBeta;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextBinomial;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextBooleanDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextCauchy;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextChiSquare;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextExponential;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextF;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextFloatDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextGamma;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextGaussian;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextHex;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextHypergeometric;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextInt2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextIntDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextIntExtremeValues;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextIntIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextIntIAE2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextIntNeg;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextIntNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextIntNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextIntPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextIntWideRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextInversionDeviate;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextLong2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextLongDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextLongExtremeValues;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextLongIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextLongNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextLongNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextLongPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextLongWideRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextPascal;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextPermutation;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextPoisson;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextPoissonConsistency;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextSample;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextSecureHex;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextSecureIntIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextSecureIntNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextSecureIntNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextSecureIntPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextSecureLongIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextSecureLongNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextSecureLongNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextSecureLongPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextT;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextUniformExclusiveEndpoints;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextUniformExtremeValues;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextUniformIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextUniformUniformMaximalInterval;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextUniformUniformNegaiveBounds;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextUniformUniformNegativeToPositiveBounds;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextUniformUniformPositiveBounds;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextWeibull;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testNextZipf;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testReferenceCode;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testReseed;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497aTest.testSeeding;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testConfig;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testDoubleDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testFloatDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNexBoolean2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNexBytes;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextBeta;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextBinomial;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextBooleanDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextCauchy;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextChiSquare;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextExponential;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextF;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextFloatDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextGamma;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextGaussian;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextHex;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextHypergeometric;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextInt2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextIntDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextIntExtremeValues;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextIntIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextIntIAE2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextIntNeg;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextIntNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextIntNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextIntPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextIntWideRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextInversionDeviate;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextLong2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextLongDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextLongExtremeValues;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextLongIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextLongNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextLongNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextLongPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextLongWideRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextPascal;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextPermutation;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextPoisson;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextPoissonConsistency;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextSample;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextSecureHex;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextSecureIntIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextSecureIntNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextSecureIntNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextSecureIntPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextSecureLongIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextSecureLongNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextSecureLongNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextSecureLongPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextT;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextUniformExclusiveEndpoints;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextUniformExtremeValues;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextUniformIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextUniformUniformMaximalInterval;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextUniformUniformNegaiveBounds;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextUniformUniformNegativeToPositiveBounds;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextUniformUniformPositiveBounds;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextWeibull;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testNextZipf;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testReferenceCode;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testReseed;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well44497bTest.testSeeding;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testConfig;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testDoubleDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testFloatDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNexBoolean2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNexBytes;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextBeta;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextBinomial;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextBooleanDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextCauchy;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextChiSquare;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextExponential;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextF;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextFloatDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextGamma;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextGaussian;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextHex;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextHypergeometric;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextInt2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextIntDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextIntExtremeValues;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextIntIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextIntIAE2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextIntNeg;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextIntNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextIntNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextIntPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextIntWideRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextInversionDeviate;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextLong2;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextLongDirect;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextLongExtremeValues;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextLongIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextLongNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextLongNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextLongPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextLongWideRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextPascal;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextPermutation;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextPoisson;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextPoissonConsistency;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextSample;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextSecureHex;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextSecureIntIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextSecureIntNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextSecureIntNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextSecureIntPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextSecureLongIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextSecureLongNegativeRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextSecureLongNegativeToPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextSecureLongPositiveRange;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextT;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextUniformExclusiveEndpoints;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextUniformExtremeValues;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextUniformIAE;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextUniformUniformMaximalInterval;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextUniformUniformNegaiveBounds;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextUniformUniformNegativeToPositiveBounds;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextUniformUniformPositiveBounds;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextWeibull;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testNextZipf;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testReferenceCode;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testReseed;[107, 108];[107, 108];0
org.apache.commons.math3.random.Well512aTest.testSeeding;[107, 108];[107, 108];0
org.apache.commons.math3.special.BetaTest.testLogBeta;[18, 115, 625, 633, 634, 2243, 2244, 2305];[18, 115, 625, 633, 634, 2243, 2244, 2305];0
org.apache.commons.math3.special.BetaTest.testLogBetaNanPositive;[634];[634];0
org.apache.commons.math3.special.BetaTest.testLogBetaNegativePositive;[634];[634];0
org.apache.commons.math3.special.BetaTest.testLogBetaPositiveNan;[634];[634];0
org.apache.commons.math3.special.BetaTest.testLogBetaPositiveNegative;[634];[634];0
org.apache.commons.math3.special.BetaTest.testLogBetaPositivePositive;[18, 115, 625, 633, 634];[18, 115, 625, 633, 634];0
org.apache.commons.math3.special.BetaTest.testLogBetaPositiveZero;[634];[634];0
org.apache.commons.math3.special.BetaTest.testLogBetaZeroPositive;[634];[634];0
org.apache.commons.math3.special.BetaTest.testLogGammaMinusLogGammaSum;[18, 115, 2243, 2244];[18, 115, 2243, 2244];0
org.apache.commons.math3.special.BetaTest.testLogGammaMinusLogGammaSumPrecondition1;[70, 71, 2244];[70, 71, 2244];0
org.apache.commons.math3.special.BetaTest.testLogGammaMinusLogGammaSumPrecondition2;[70, 71, 2244];[70, 71, 2244];0
org.apache.commons.math3.special.BetaTest.testLogGammaSum;[18, 115, 625];[18, 115, 625];0
org.apache.commons.math3.special.BetaTest.testLogGammaSumPrecondition1;[70, 71, 625];[70, 71, 625];0
org.apache.commons.math3.special.BetaTest.testLogGammaSumPrecondition2;[70, 71, 625];[70, 71, 625];0
org.apache.commons.math3.special.BetaTest.testLogGammaSumPrecondition3;[70, 71, 625];[70, 71, 625];0
org.apache.commons.math3.special.BetaTest.testLogGammaSumPrecondition4;[70, 71, 625];[70, 71, 625];0
org.apache.commons.math3.special.BetaTest.testRegularizedBetaNanPositivePositive;[623];[623];0
org.apache.commons.math3.special.BetaTest.testRegularizedBetaNegativePositivePositive;[623];[623];0
org.apache.commons.math3.special.BetaTest.testRegularizedBetaPositiveNanPositive;[623];[623];0
org.apache.commons.math3.special.BetaTest.testRegularizedBetaPositiveNegativePositive;[623];[623];0
org.apache.commons.math3.special.BetaTest.testRegularizedBetaPositivePositiveNan;[623];[623];0
org.apache.commons.math3.special.BetaTest.testRegularizedBetaPositivePositiveNegative;[623];[623];0
org.apache.commons.math3.special.BetaTest.testRegularizedBetaPositivePositivePositive;[18, 53, 93, 115, 623, 625, 627, 633, 634];[18, 53, 93, 115, 623, 625, 627, 633, 634];0
org.apache.commons.math3.special.BetaTest.testRegularizedBetaPositivePositiveZero;[623];[623];0
org.apache.commons.math3.special.BetaTest.testRegularizedBetaPositiveZeroPositive;[623];[623];0
org.apache.commons.math3.special.BetaTest.testRegularizedBetaZeroPositivePositive;[18, 53, 93, 115, 623, 625, 627, 633, 634];[18, 53, 93, 115, 623, 625, 627, 633, 634];0
org.apache.commons.math3.special.BetaTest.testSumDeltaMinusDeltaSum;[2243, 2305];[2243, 2305];0
org.apache.commons.math3.special.BetaTest.testSumDeltaMinusDeltaSumPrecondition1;[70, 71, 2305];[70, 71, 2305];0
org.apache.commons.math3.special.BetaTest.testSumDeltaMinusDeltaSumPrecondition2;[70, 71, 2305];[70, 71, 2305];0
org.apache.commons.math3.special.ErfTest.testErf0;[757, 758, 2195, 2198];[757, 758, 2195, 2198];0
org.apache.commons.math3.special.ErfTest.testErf1960;[12, 18, 53, 93, 115, 627, 633, 757, 758, 2195, 2198];[12, 18, 53, 93, 115, 627, 633, 757, 758, 2195, 2198];0
org.apache.commons.math3.special.ErfTest.testErf2576;[12, 18, 53, 93, 115, 627, 633, 757, 758, 2195, 2198];[12, 18, 53, 93, 115, 627, 633, 757, 758, 2195, 2198];0
org.apache.commons.math3.special.ErfTest.testErf2807;[12, 18, 53, 93, 115, 627, 633, 757, 758, 2195, 2198];[12, 18, 53, 93, 115, 627, 633, 757, 758, 2195, 2198];0
org.apache.commons.math3.special.ErfTest.testErf3291;[12, 18, 53, 93, 115, 627, 633, 757, 758, 2195, 2198];[12, 18, 53, 93, 115, 627, 633, 757, 758, 2195, 2198];0
org.apache.commons.math3.special.ErfTest.testErfcGnu;[18, 53, 93, 115, 627, 633, 757, 758, 2195];[18, 53, 93, 115, 627, 633, 757, 758, 2195];0
org.apache.commons.math3.special.ErfTest.testErfcInv;[12, 18, 53, 93, 115, 627, 633, 757, 758, 2195, 2279, 2352];[12, 18, 53, 93, 115, 627, 633, 757, 758, 2195, 2279, 2352];0
org.apache.commons.math3.special.ErfTest.testErfcInvInfinite;[18, 2279, 2352];[18, 2279, 2352];0
org.apache.commons.math3.special.ErfTest.testErfcInvNaN;[12, 18, 2279, 2352];[12, 18, 2279, 2352];0
org.apache.commons.math3.special.ErfTest.testErfcMaple;[18, 53, 93, 115, 627, 633, 757, 758, 2195];[18, 53, 93, 115, 627, 633, 757, 758, 2195];0
org.apache.commons.math3.special.ErfTest.testErfGnu;[18, 53, 93, 115, 627, 633, 757, 758, 2198];[18, 53, 93, 115, 627, 633, 757, 758, 2198];0
org.apache.commons.math3.special.ErfTest.testErfInv;[12, 18, 53, 93, 115, 627, 633, 757, 758, 2198, 2279];[12, 18, 53, 93, 115, 627, 633, 757, 758, 2198, 2279];0
org.apache.commons.math3.special.ErfTest.testErfInvInfinite;[18, 2279];[18, 2279];0
org.apache.commons.math3.special.ErfTest.testErfInvNaN;[12, 18, 2279];[12, 18, 2279];0
org.apache.commons.math3.special.ErfTest.testLargeValues;[18, 53, 93, 115, 627, 633, 757, 758, 2195, 2198];[18, 53, 93, 115, 627, 633, 757, 758, 2195, 2198];0
org.apache.commons.math3.special.ErfTest.testTwoArgumentErf;[18, 53, 93, 115, 627, 633, 757, 758, 2195, 2198];[18, 53, 93, 115, 627, 633, 757, 758, 2195, 2198];0
org.apache.commons.math3.special.GammaTest.testDigammaLargeArgs;[18, 2353];[18, 2353];0
org.apache.commons.math3.special.GammaTest.testDigammaSmallArgs;[18, 46, 53, 2353];[18, 46, 53, 2353];0
org.apache.commons.math3.special.GammaTest.testGamma;[18, 46, 53];[18, 46, 53];0
org.apache.commons.math3.special.GammaTest.testInvGamma1pm1Precondition1;[70, 71];[70, 71];0
org.apache.commons.math3.special.GammaTest.testInvGamma1pm1Precondition2;[70, 71];[70, 71];0
org.apache.commons.math3.special.GammaTest.testLogGamma;[18, 115, 633];[18, 115, 633];0
org.apache.commons.math3.special.GammaTest.testLogGamma1p;[18, 115];[18, 115];0
org.apache.commons.math3.special.GammaTest.testLogGamma1pPrecondition1;[70, 71];[70, 71];0
org.apache.commons.math3.special.GammaTest.testLogGamma1pPrecondition2;[70, 71];[70, 71];0
org.apache.commons.math3.special.GammaTest.testLogGammaNan;[633];[633];0
org.apache.commons.math3.special.GammaTest.testLogGammaNegative;[633];[633];0
org.apache.commons.math3.special.GammaTest.testLogGammaPositive;[18, 115, 633];[18, 115, 633];0
org.apache.commons.math3.special.GammaTest.testLogGammaPrecondition1;[633];[633];0
org.apache.commons.math3.special.GammaTest.testLogGammaPrecondition2;[633];[633];0
org.apache.commons.math3.special.GammaTest.testLogGammaZero;[633];[633];0
org.apache.commons.math3.special.GammaTest.testRegularizedGammaNanPositive;[757, 758];[757, 758];0
org.apache.commons.math3.special.GammaTest.testRegularizedGammaNegativePositive;[757, 758];[757, 758];0
org.apache.commons.math3.special.GammaTest.testRegularizedGammaPositiveNan;[757, 758];[757, 758];0
org.apache.commons.math3.special.GammaTest.testRegularizedGammaPositiveNegative;[757, 758];[757, 758];0
org.apache.commons.math3.special.GammaTest.testRegularizedGammaPositivePositive;[18, 53, 115, 633, 757, 758];[18, 53, 115, 633, 757, 758];0
org.apache.commons.math3.special.GammaTest.testRegularizedGammaPositiveZero;[757, 758];[757, 758];0
org.apache.commons.math3.special.GammaTest.testRegularizedGammaZeroPositive;[757, 758];[757, 758];0
org.apache.commons.math3.stat.CertifiedDataTest.testDescriptiveStatistics;[12, 669, 670, 681, 688, 691, 693, 718, 721, 728, 2085, 2087, 2089, 2090, 2091, 2093, 2354, 2355, 2356, 2357, 2358, 2359];[12, 669, 670, 681, 688, 691, 693, 718, 721, 728, 2085, 2087, 2089, 2090, 2091, 2093, 2354, 2355, 2356, 2357, 2358, 2359];0
org.apache.commons.math3.stat.CertifiedDataTest.testSummaryStatistics;[12, 18, 688, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1852, 2183, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367];[12, 18, 688, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1852, 2183, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367];0
org.apache.commons.math3.stat.clustering.DBSCANClustererTest.testCluster;[12, 61, 1690, 1693, 1694, 1695, 1696, 1697, 1700, 2368, 2369, 2370, 2371];[12, 61, 1690, 1693, 1694, 1695, 1696, 1697, 1700, 2368, 2369, 2370, 2371];0
org.apache.commons.math3.stat.clustering.DBSCANClustererTest.testGetEps;[1702];[1702];0
org.apache.commons.math3.stat.clustering.DBSCANClustererTest.testGetMinPts;[1703];[1703];0
org.apache.commons.math3.stat.clustering.DBSCANClustererTest.testNegativeEps;[70, 71];[70, 71];0
org.apache.commons.math3.stat.clustering.DBSCANClustererTest.testNegativeMinPts;[70, 71];[70, 71];0
org.apache.commons.math3.stat.clustering.DBSCANClustererTest.testNullDataset;[61, 70, 71, 1695];[61, 70, 71, 1695];0
org.apache.commons.math3.stat.clustering.DBSCANClustererTest.testSingleLink;[12, 61, 1690, 1693, 1694, 1695, 1696, 1697, 1700, 2372, 2373, 2374, 2375];[12, 61, 1690, 1693, 1694, 1695, 1696, 1697, 1700, 2372, 2373, 2374, 2375];0
org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest.testArrayIsReference;[2370];[2370];0
org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest.testCentroid;[2370, 2376];[2370, 2376];0
org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest.testDistance;[12, 1700, 2370, 2371];[12, 1700, 2370, 2371];0
org.apache.commons.math3.stat.clustering.EuclideanDoublePointTest.testSerial;[2369];[2369];0
org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest.testArrayIsReference;[2373];[2373];0
org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest.testCentroid;[2373, 2377];[2373, 2377];0
org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest.testDistance;[12, 1700, 2373, 2374];[12, 1700, 2373, 2374];0
org.apache.commons.math3.stat.clustering.EuclideanIntegerPointTest.testSerial;[2375];[2375];0
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest.dimension2;[12, 61, 1694, 1697, 1700, 1705, 1706, 1708, 1709, 1712, 1713, 1714, 1715, 2373, 2374, 2377, 2378];[12, 61, 1694, 1697, 1700, 1705, 1706, 1708, 1709, 1712, 1713, 1714, 1715, 2373, 2374, 2377, 2378];0
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest.testCertainSpace;[12, 61, 1694, 1697, 1700, 1705, 1706, 1708, 1709, 1712, 1713, 1714, 1715, 2373, 2374, 2377, 2378, 2379, 2380, 2381];[12, 61, 1694, 1697, 1700, 1705, 1706, 1708, 1709, 1712, 1713, 1714, 1715, 2373, 2374, 2377, 2378, 2379, 2380, 2381];0
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest.testPerformClusterAnalysisDegenerate;[12, 61, 1694, 1697, 1700, 1705, 1706, 1708, 1709, 2373, 2374, 2375, 2377, 2378];[12, 61, 1694, 1697, 1700, 1705, 1706, 1708, 1709, 2373, 2374, 2375, 2377, 2378];0
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest.testPerformClusterAnalysisToManyClusters;[61, 70, 71, 1709];[61, 70, 71, 1709];0
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClustererTest.testSmallDistances;[12, 61, 1697, 1700, 1705, 1706, 1708, 1709, 2373, 2374, 2375, 2378];[12, 61, 1697, 1700, 1705, 1706, 1708, 1709, 2373, 2374, 2375, 2378];0
org.apache.commons.math3.stat.correlation.CovarianceTest.testConsistency;[61, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 414, 422, 425, 431, 676, 677, 681, 686, 687, 688, 691, 693, 694, 695, 702, 706, 707, 711, 715, 718, 721, 728, 805, 818, 1206, 1207, 1220, 1408, 1409];[61, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 414, 422, 425, 431, 676, 677, 681, 686, 687, 688, 691, 693, 694, 695, 702, 706, 707, 711, 715, 718, 721, 728, 805, 818, 1206, 1207, 1220, 1408, 1409];0
org.apache.commons.math3.stat.correlation.CovarianceTest.testConstant;[691, 693, 694, 711, 718];[691, 693, 694, 711, 718];0
org.apache.commons.math3.stat.correlation.CovarianceTest.testInsufficientData;[70, 71, 414, 694];[70, 71, 414, 694];0
org.apache.commons.math3.stat.correlation.CovarianceTest.testLongly;[61, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 425, 431, 676, 677, 681, 686, 688, 691, 693, 694, 695, 702, 707, 711, 718, 721, 728, 792, 805, 818, 1206, 1215, 1216];[61, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 425, 431, 676, 677, 681, 686, 688, 691, 693, 694, 695, 702, 707, 711, 718, 721, 728, 792, 805, 818, 1206, 1215, 1216];0
org.apache.commons.math3.stat.correlation.CovarianceTest.testOneColumn;[373, 378, 383, 402, 404, 405, 414, 422, 431, 676, 681, 686, 687, 688, 691, 693, 702, 707, 718, 721, 728, 818];[373, 378, 383, 402, 404, 405, 414, 422, 431, 676, 681, 686, 687, 688, 691, 693, 702, 707, 718, 721, 728, 818];0
org.apache.commons.math3.stat.correlation.CovarianceTest.testSwissFertility;[61, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 425, 431, 676, 677, 681, 686, 688, 691, 693, 694, 695, 702, 707, 711, 718, 721, 728, 792, 805, 818, 1206, 1215, 1216];[61, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 425, 431, 676, 677, 681, 686, 688, 691, 693, 694, 695, 702, 707, 711, 718, 721, 728, 792, 805, 818, 1206, 1215, 1216];0
org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest.testConsistency;[12, 373, 378, 383, 402, 404, 405, 414, 420, 422, 431, 676, 687, 805, 818, 1408, 1409, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391];[12, 373, 378, 383, 402, 404, 405, 414, 420, 422, 431, 676, 687, 805, 818, 1408, 1409, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391];0
org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest.testConstant;[12, 2382, 2385, 2386, 2388, 2389, 2390, 2391];[12, 2382, 2385, 2386, 2388, 2389, 2390, 2391];0
org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest.testCovarianceConsistency;[12, 18, 53, 93, 107, 108, 373, 378, 383, 402, 404, 405, 414, 422, 431, 623, 627, 634, 676, 681, 686, 687, 688, 691, 693, 694, 702, 707, 711, 718, 721, 728, 805, 818, 1408, 1409, 2323, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395];[12, 18, 53, 93, 107, 108, 373, 378, 383, 402, 404, 405, 414, 422, 431, 623, 627, 634, 676, 681, 686, 687, 688, 691, 693, 694, 702, 707, 711, 718, 721, 728, 805, 818, 1408, 1409, 2323, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395];0
org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest.testInsufficientData;[70, 71, 383, 404, 414, 422, 431, 2383, 2385];[70, 71, 383, 404, 414, 422, 431, 2383, 2385];0
org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest.testLongly;[12, 18, 53, 93, 107, 108, 373, 378, 383, 402, 404, 405, 414, 422, 431, 623, 627, 634, 676, 687, 805, 818, 1408, 1409, 2323, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2393];[12, 18, 53, 93, 107, 108, 373, 378, 383, 402, 404, 405, 414, 422, 431, 623, 627, 634, 676, 687, 805, 818, 1408, 1409, 2323, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2393];0
org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest.testPValueNearZero;[12, 18, 53, 93, 107, 108, 115, 373, 378, 383, 402, 404, 405, 414, 422, 431, 623, 627, 633, 634, 676, 687, 818, 2243, 2244, 2323, 2382, 2383, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2393];[12, 18, 53, 93, 107, 108, 115, 373, 378, 383, 402, 404, 405, 414, 422, 431, 623, 627, 633, 634, 676, 687, 818, 2243, 2244, 2323, 2382, 2383, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2393];0
org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest.testStdErrorConsistency;[12, 18, 53, 93, 107, 108, 115, 373, 378, 383, 402, 404, 405, 414, 422, 431, 623, 627, 633, 634, 676, 687, 818, 2243, 2244, 2323, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2393, 2394];[12, 18, 53, 93, 107, 108, 115, 373, 378, 383, 402, 404, 405, 414, 422, 431, 623, 627, 633, 634, 676, 687, 818, 2243, 2244, 2323, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2393, 2394];0
org.apache.commons.math3.stat.correlation.PearsonsCorrelationTest.testSwissFertility;[12, 18, 53, 93, 107, 108, 115, 373, 378, 383, 402, 404, 405, 414, 422, 431, 623, 627, 633, 634, 676, 687, 805, 818, 1408, 1409, 2243, 2244, 2323, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2393];[12, 18, 53, 93, 107, 108, 115, 373, 378, 383, 402, 404, 405, 414, 422, 431, 623, 627, 633, 634, 676, 687, 805, 818, 1408, 1409, 2243, 2244, 2323, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2393];0
org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest.testConsistency;[12, 373, 378, 383, 402, 404, 405, 414, 420, 422, 431, 676, 687, 805, 818, 1388, 1396, 1408, 1409, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2396, 2397, 2398, 2399, 2400, 2401, 2402];[12, 373, 378, 383, 402, 404, 405, 414, 420, 422, 431, 676, 687, 805, 818, 1388, 1396, 1408, 1409, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2396, 2397, 2398, 2399, 2400, 2401, 2402];0
org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest.testConstant;[12, 2382, 2385, 2386, 2388, 2389, 2390, 2391, 2396, 2397, 2400, 2401, 2403, 2404];[12, 2382, 2385, 2386, 2388, 2389, 2390, 2391, 2396, 2397, 2400, 2401, 2403, 2404];0
org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest.testInsufficientData;[70, 71, 373, 378, 383, 404, 414, 422, 431, 687, 1388, 1396, 2383, 2396, 2397, 2399, 2400, 2401];[70, 71, 373, 378, 383, 404, 414, 422, 431, 687, 1388, 1396, 2383, 2396, 2397, 2399, 2400, 2401];0
org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest.testLongly;[12, 373, 378, 383, 402, 404, 405, 414, 422, 431, 676, 687, 805, 1388, 1396, 1408, 1409, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2396, 2397, 2399, 2400, 2402];[12, 373, 378, 383, 402, 404, 405, 414, 422, 431, 676, 687, 805, 1388, 1396, 1408, 1409, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2396, 2397, 2399, 2400, 2402];0
org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest.testMath891Array;[12, 2382, 2385, 2386, 2388, 2389, 2390, 2391, 2396, 2397, 2401, 2405, 2406, 2407, 2408];[12, 2382, 2385, 2386, 2388, 2389, 2390, 2391, 2396, 2397, 2401, 2405, 2406, 2407, 2408];0
org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest.testMath891Matrix;[12, 373, 378, 383, 384, 392, 396, 402, 404, 405, 410, 422, 431, 676, 687, 818, 1206, 1396, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2396, 2397, 2399, 2402, 2405, 2406, 2407, 2408, 2409];[12, 373, 378, 383, 384, 392, 396, 402, 404, 405, 410, 422, 431, 676, 687, 818, 1206, 1396, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2396, 2397, 2399, 2402, 2405, 2406, 2407, 2408, 2409];0
org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest.testPValueNearZero;[12, 18, 53, 93, 107, 108, 115, 373, 378, 383, 402, 404, 405, 414, 422, 431, 623, 627, 633, 634, 676, 687, 818, 2243, 2244, 2323, 2382, 2383, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2393];[12, 18, 53, 93, 107, 108, 115, 373, 378, 383, 402, 404, 405, 414, 422, 431, 623, 627, 633, 634, 676, 687, 818, 2243, 2244, 2323, 2382, 2383, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2393];0
org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest.testSwiss;[12, 373, 378, 383, 402, 404, 405, 414, 422, 431, 676, 687, 805, 1388, 1396, 1408, 1409, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2396, 2397, 2399, 2400, 2402, 2403, 2404];[12, 373, 378, 383, 402, 404, 405, 414, 422, 431, 676, 687, 805, 1388, 1396, 1408, 1409, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2396, 2397, 2399, 2400, 2402, 2403, 2404];0
org.apache.commons.math3.stat.correlation.SpearmansRankCorrelationTest.testSwissFertility;[12, 18, 53, 93, 107, 108, 115, 373, 378, 383, 402, 404, 405, 414, 422, 431, 623, 627, 633, 634, 676, 687, 805, 818, 1408, 1409, 2243, 2244, 2323, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2393];[12, 18, 53, 93, 107, 108, 115, 373, 378, 383, 402, 404, 405, 414, 422, 431, 623, 627, 633, 634, 676, 687, 805, 818, 1408, 1409, 2243, 2244, 2323, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2393];0
org.apache.commons.math3.stat.correlation.StorelessCovarianceTest.testLonglyByRow;[61, 373, 376, 384, 390, 392, 396, 402, 405, 410, 425, 677, 695, 792, 805, 1215, 1216, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2410];[61, 373, 376, 384, 390, 392, 396, 402, 405, 410, 425, 677, 695, 792, 805, 1215, 1216, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2410];0
org.apache.commons.math3.stat.correlation.StorelessCovarianceTest.testLonglySimpleCov;[2188, 2194];[2188, 2194];0
org.apache.commons.math3.stat.correlation.StorelessCovarianceTest.testLonglySimpleVar;[2188, 2194];[2188, 2194];0
org.apache.commons.math3.stat.correlation.StorelessCovarianceTest.testSwissFertilityByRow;[61, 373, 376, 384, 390, 392, 396, 402, 405, 410, 425, 677, 695, 792, 805, 1215, 1216, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2410];[61, 373, 376, 384, 390, 392, 396, 402, 405, 410, 425, 677, 695, 792, 805, 1215, 1216, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2410];0
org.apache.commons.math3.stat.correlation.StorelessCovarianceTest.testSymmetry;[61, 373, 376, 384, 390, 392, 396, 402, 405, 425, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194];[61, 373, 376, 384, 390, 392, 396, 402, 405, 425, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194];0
org.apache.commons.math3.stat.data.LewTest.testCertifiedValues;[12, 18, 669, 670, 681, 688, 691, 693, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1852, 1853, 2085, 2087, 2089, 2090, 2091, 2093, 2183, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2412, 2413, 2414, 2415, 2416, 2417];[12, 18, 669, 670, 681, 688, 691, 693, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1852, 1853, 2085, 2087, 2089, 2090, 2091, 2093, 2183, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2412, 2413, 2414, 2415, 2416, 2417];0
org.apache.commons.math3.stat.data.LotteryTest.testCertifiedValues;[12, 18, 669, 670, 681, 688, 691, 693, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1852, 2085, 2087, 2089, 2090, 2091, 2093, 2183, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367];[12, 18, 669, 670, 681, 688, 691, 693, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1852, 2085, 2087, 2089, 2090, 2091, 2093, 2183, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367];0
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest.testAggregate;[12, 18, 105, 107, 108, 647, 666, 817, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2183, 2367, 2411, 2415, 2418, 2419, 2420, 2421, 2437, 2439, 2440, 2443, 2445, 2531, 2592, 2909];[12, 18, 105, 107, 108, 647, 666, 817, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2183, 2367, 2411, 2415, 2418, 2419, 2420, 2421, 2437, 2439, 2440, 2443, 2445, 2531, 2592, 2909];0
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest.testAggregateDegenerate;[12, 18, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2183, 2367, 2411, 2415, 2419, 2420, 2421, 2437, 2439, 2440, 2443, 2445, 2531, 2592, 2909];[12, 18, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2183, 2367, 2411, 2415, 2419, 2420, 2421, 2437, 2439, 2440, 2443, 2445, 2531, 2592, 2909];0
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest.testAggregateSpecialValues;[12, 18, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2183, 2367, 2411, 2415, 2419, 2420, 2421, 2437, 2439, 2440, 2443, 2445, 2531, 2592, 2909];[12, 18, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2183, 2367, 2411, 2415, 2419, 2420, 2421, 2437, 2439, 2440, 2443, 2445, 2531, 2592, 2909];0
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest.testAggregation;[18, 61, 93, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 2094, 2411, 2415, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435];[18, 61, 93, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 2094, 2411, 2415, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435];0
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatisticsTest.testAggregationConsistency;[18, 61, 93, 105, 107, 108, 117, 647, 666, 817, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2094, 2183, 2367, 2411, 2415, 2418, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446];[18, 61, 93, 105, 107, 108, 117, 647, 666, 817, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2094, 2183, 2367, 2411, 2415, 2418, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446];0
org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.test20090720;[669, 670, 2087, 2090, 2093, 2355, 2356, 2357, 2359, 2447, 2448, 2449, 2450];[669, 670, 2087, 2090, 2093, 2355, 2356, 2357, 2359, 2447, 2448, 2449, 2450];0
org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.testCopy;[61, 669, 670, 691, 693, 718, 2085, 2087, 2089, 2090, 2091, 2094, 2422, 2423, 2427, 2429, 2430, 2431, 2432, 2435, 2451, 2452, 2453, 2454, 2455, 2456];[61, 669, 670, 691, 693, 718, 2085, 2087, 2089, 2090, 2091, 2094, 2422, 2423, 2427, 2429, 2430, 2431, 2432, 2435, 2451, 2452, 2453, 2454, 2455, 2456];0
org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.testGetValues;[669, 670, 671, 691, 693, 718, 2085, 2087, 2089, 2090, 2091, 2093, 2457, 2458, 2459, 2460];[669, 670, 671, 691, 693, 718, 2085, 2087, 2089, 2090, 2091, 2093, 2457, 2458, 2459, 2460];0
org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.testPercentileSetter;[70, 71, 669, 670, 718, 2085, 2086, 2087, 2088, 2090, 2091, 2092, 2094, 2095, 2461, 2462];[70, 71, 669, 670, 718, 2085, 2086, 2087, 2088, 2090, 2091, 2092, 2094, 2095, 2461, 2462];0
org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.testRemoval;[93, 117, 669, 670, 691, 693, 718, 2085, 2087, 2089, 2090, 2091, 2093, 2355, 2356, 2357, 2359, 2447, 2448, 2449, 2450, 2463, 2464, 2465, 2466, 2467];[93, 117, 669, 670, 691, 693, 718, 2085, 2087, 2089, 2090, 2091, 2093, 2355, 2356, 2357, 2359, 2447, 2448, 2449, 2450, 2463, 2464, 2465, 2466, 2467];0
org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.testSetterInjection;[669, 670, 691, 693, 718, 2085, 2087, 2089, 2090, 2091, 2452];[669, 670, 691, 693, 718, 2085, 2087, 2089, 2090, 2091, 2452];0
org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.testShuffledStatistics;[12, 18, 46, 53, 669, 670, 681, 688, 691, 693, 718, 721, 728, 1712, 1713, 1714, 1715, 2085, 2087, 2089, 2090, 2091, 2093, 2358, 2412, 2413, 2414, 2416, 2417, 2452, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2495, 2500, 2503];[12, 18, 46, 53, 669, 670, 681, 688, 691, 693, 718, 721, 728, 1712, 1713, 1714, 1715, 2085, 2087, 2089, 2090, 2091, 2093, 2358, 2412, 2413, 2414, 2416, 2417, 2452, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2495, 2500, 2503];0
org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.testSummaryConsistency;[12, 18, 53, 669, 670, 671, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1852, 1853, 2085, 2087, 2089, 2090, 2091, 2093, 2183, 2354, 2355, 2356, 2358, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2447, 2448, 2449, 2450, 2459, 2489, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503];[12, 18, 53, 669, 670, 671, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1852, 1853, 2085, 2087, 2089, 2090, 2091, 2093, 2183, 2354, 2355, 2356, 2358, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2447, 2448, 2449, 2450, 2459, 2489, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503];0
org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.testToString;[12, 669, 670, 681, 688, 691, 693, 718, 721, 728, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2094, 2095, 2354, 2355, 2356, 2358, 2413, 2414, 2416, 2417, 2468, 2474, 2480, 2481, 2504];[12, 669, 670, 681, 688, 691, 693, 718, 721, 728, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2094, 2095, 2354, 2355, 2356, 2358, 2413, 2414, 2416, 2417, 2468, 2474, 2480, 2481, 2504];0
org.apache.commons.math3.stat.descriptive.DescriptiveStatisticsTest.testWindowSize;[70, 71, 669, 670, 691, 693, 718, 2085, 2087, 2089, 2090, 2091, 2093, 2355, 2356, 2448, 2449, 2450, 2463, 2505, 2506];[70, 71, 669, 670, 691, 693, 718, 2085, 2087, 2089, 2090, 2091, 2093, 2355, 2356, 2448, 2449, 2450, 2463, 2505, 2506];0
org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest.testN0andN1Conditions;[669, 681, 688, 691, 693, 718, 721, 728, 2087, 2089, 2354, 2358, 2505, 2507];[669, 681, 688, 691, 693, 718, 721, 728, 2087, 2089, 2354, 2358, 2505, 2507];0
org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest.testProductAndGeometricMean;[18, 53, 669, 718, 2087, 2356, 2449, 2489, 2491, 2500, 2505, 2507];[18, 53, 669, 718, 2087, 2356, 2449, 2489, 2491, 2500, 2505, 2507];0
org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest.testSerialization;[12, 669, 681, 688, 691, 693, 718, 721, 728, 2087, 2089, 2354, 2358, 2412, 2413, 2414, 2416, 2417, 2495, 2503, 2505, 2507];[12, 669, 681, 688, 691, 693, 718, 721, 728, 2087, 2089, 2354, 2358, 2412, 2413, 2414, 2416, 2417, 2495, 2503, 2505, 2507];0
org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest.testSkewAndKurtosis;[12, 18, 46, 53, 669, 670, 681, 688, 691, 693, 718, 721, 728, 1712, 1713, 1714, 1715, 2085, 2087, 2089, 2090, 2091, 2093, 2358, 2468, 2474, 2480, 2481, 2485];[12, 18, 46, 53, 669, 670, 681, 688, 691, 693, 718, 721, 728, 1712, 1713, 1714, 1715, 2085, 2087, 2089, 2090, 2091, 2093, 2358, 2468, 2474, 2480, 2481, 2485];0
org.apache.commons.math3.stat.descriptive.ListUnivariateImplTest.testStats;[12, 669, 681, 688, 691, 693, 718, 721, 728, 2087, 2089, 2354, 2358, 2412, 2413, 2414, 2416, 2417, 2495, 2503, 2505, 2507];[12, 669, 681, 688, 691, 693, 718, 721, 728, 2087, 2089, 2354, 2358, 2412, 2413, 2414, 2416, 2417, 2495, 2503, 2505, 2507];0
org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest.testN0andN1Conditions;[669, 681, 688, 691, 693, 718, 721, 728, 2087, 2089, 2354, 2358, 2505, 2507, 2508];[669, 681, 688, 691, 693, 718, 721, 728, 2087, 2089, 2354, 2358, 2505, 2507, 2508];0
org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest.testProductAndGeometricMean;[18, 53, 669, 718, 2087, 2356, 2449, 2489, 2491, 2500, 2505, 2507, 2508];[18, 53, 669, 718, 2087, 2356, 2449, 2489, 2491, 2500, 2505, 2507, 2508];0
org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis;[12, 18, 46, 53, 669, 681, 688, 691, 693, 718, 721, 728, 1712, 1713, 1714, 1715, 2087, 2089, 2358, 2468, 2474, 2480, 2481, 2485, 2505, 2507, 2508, 2509];[12, 18, 46, 53, 669, 681, 688, 691, 693, 718, 721, 728, 1712, 1713, 1714, 1715, 2087, 2089, 2358, 2468, 2474, 2480, 2481, 2485, 2505, 2507, 2508, 2509];0
org.apache.commons.math3.stat.descriptive.MixedListUnivariateImplTest.testStats;[12, 669, 681, 688, 691, 693, 718, 721, 728, 2087, 2089, 2354, 2358, 2412, 2413, 2414, 2416, 2417, 2495, 2503, 2505, 2507, 2508];[12, 669, 681, 688, 691, 693, 718, 721, 728, 2087, 2089, 2354, 2358, 2412, 2413, 2414, 2416, 2417, 2495, 2503, 2505, 2507, 2508];0
org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest.testConsistency;[688, 711, 718, 1713, 2485, 2510];[688, 711, 718, 1713, 2485, 2510];0
org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest.testCopy;[61, 688, 711, 718, 1713, 2094, 2422, 2435, 2485, 2510];[61, 688, 711, 718, 1713, 2094, 2422, 2435, 2485, 2510];0
org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest.testCopyConsistency;[61, 93, 117, 323, 718, 1713, 2094, 2422, 2435, 2485, 2510, 2511, 2512];[61, 93, 117, 323, 718, 1713, 2094, 2422, 2435, 2485, 2510, 2511, 2512];0
org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest.testEqualsAndHashCode;[93, 98, 117, 688, 1713, 2510, 2511, 2512, 2513];[93, 98, 117, 688, 1713, 2510, 2511, 2512, 2513];0
org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest.testEvaluateArraySegment;[688, 711, 718, 1713, 2485, 2510];[688, 711, 718, 1713, 2485, 2510];0
org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest.testEvaluation;[688, 711, 718, 1713, 2485, 2510];[688, 711, 718, 1713, 2485, 2510];0
org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest.testIncrementation;[688, 718, 1713, 2485, 2510, 2511];[688, 718, 1713, 2485, 2510, 2511];0
org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest.testSerial;[93, 117, 2510, 2511, 2512];[93, 117, 2510, 2511, 2512];0
org.apache.commons.math3.stat.descriptive.moment.FirstMomentTest.testSerialization;[93, 98, 117, 688, 1713, 2510, 2511, 2512, 2513];[93, 98, 117, 688, 1713, 2510, 2511, 2512, 2513];0
org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest.testConsistency;[688, 711, 718, 728, 1712, 1713, 2485, 2514, 2515, 2516, 2517, 2518];[688, 711, 718, 728, 1712, 1713, 2485, 2514, 2515, 2516, 2517, 2518];0
org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest.testCopy;[61, 688, 711, 718, 728, 1712, 1713, 2094, 2422, 2430, 2435, 2485, 2514, 2515, 2516, 2517, 2518, 2519, 2520];[61, 688, 711, 718, 728, 1712, 1713, 2094, 2422, 2430, 2435, 2485, 2514, 2515, 2516, 2517, 2518, 2519, 2520];0
org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest.testCopyConsistency;[61, 93, 117, 323, 718, 1712, 1713, 2094, 2422, 2430, 2435, 2485, 2511, 2512, 2514, 2517, 2518, 2519, 2520];[61, 93, 117, 323, 718, 1712, 1713, 2094, 2422, 2430, 2435, 2485, 2511, 2512, 2514, 2517, 2518, 2519, 2520];0
org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest.testEqualsAndHashCode;[93, 98, 117, 688, 728, 1712, 1713, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518];[93, 98, 117, 688, 728, 1712, 1713, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518];0
org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest.testEvaluateArraySegment;[688, 711, 718, 728, 1712, 1713, 2485, 2514, 2515, 2516, 2517, 2518];[688, 711, 718, 728, 1712, 1713, 2485, 2514, 2515, 2516, 2517, 2518];0
org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest.testEvaluation;[688, 711, 718, 728, 1712, 1713, 2485, 2514, 2515, 2516, 2517, 2518];[688, 711, 718, 728, 1712, 1713, 2485, 2514, 2515, 2516, 2517, 2518];0
org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest.testIncrementation;[688, 718, 728, 1712, 1713, 2485, 2511, 2514, 2515, 2516, 2517, 2518];[688, 718, 728, 1712, 1713, 2485, 2511, 2514, 2515, 2516, 2517, 2518];0
org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest.testMomentSmallSamples;[1712, 1713, 2514, 2517, 2518];[1712, 1713, 2514, 2517, 2518];0
org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest.testSerial;[93, 117, 2511, 2512, 2517];[93, 117, 2511, 2512, 2517];0
org.apache.commons.math3.stat.descriptive.moment.FourthMomentTest.testSerialization;[93, 98, 117, 688, 728, 1712, 1713, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518];[93, 98, 117, 688, 728, 1712, 1713, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518];0
org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest.testConsistency;[18, 53, 711, 718, 1834, 2361, 2364, 2485, 2491, 2493, 2497, 2500, 2501, 2521];[18, 53, 711, 718, 1834, 2361, 2364, 2485, 2491, 2493, 2497, 2500, 2501, 2521];0
org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest.testCopy;[18, 53, 61, 711, 718, 2094, 2427, 2435, 2456, 2491, 2500];[18, 53, 61, 711, 718, 2094, 2427, 2435, 2456, 2491, 2500];0
org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest.testCopyConsistency;[18, 53, 61, 93, 117, 323, 718, 1834, 2094, 2427, 2435, 2456, 2485, 2493, 2497, 2501, 2512, 2521, 2522];[18, 53, 61, 93, 117, 323, 718, 1834, 2094, 2427, 2435, 2456, 2485, 2493, 2497, 2501, 2512, 2521, 2522];0
org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest.testEqualsAndHashCode;[18, 53, 93, 98, 117, 1834, 2361, 2364, 2493, 2497, 2501, 2512, 2513, 2521, 2522];[18, 53, 93, 98, 117, 1834, 2361, 2364, 2493, 2497, 2501, 2512, 2513, 2521, 2522];0
org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest.testEvaluateArraySegment;[18, 53, 711, 718, 2491, 2500];[18, 53, 711, 718, 2491, 2500];0
org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest.testEvaluation;[18, 53, 711, 718, 2491, 2500];[18, 53, 711, 718, 2491, 2500];0
org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest.testIncrementation;[18, 53, 718, 1834, 2361, 2364, 2485, 2493, 2497, 2501, 2521, 2522];[18, 53, 718, 1834, 2361, 2364, 2485, 2493, 2497, 2501, 2521, 2522];0
org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest.testSerial;[93, 117, 2493, 2501, 2512, 2522];[93, 117, 2493, 2501, 2512, 2522];0
org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest.testSerialization;[18, 53, 93, 98, 117, 1834, 2361, 2364, 2493, 2497, 2501, 2512, 2513, 2521, 2522];[18, 53, 93, 98, 117, 1834, 2361, 2364, 2493, 2497, 2501, 2512, 2513, 2521, 2522];0
org.apache.commons.math3.stat.descriptive.moment.GeometricMeanTest.testSpecialValues;[18, 53, 1834, 2361, 2364, 2493, 2497, 2501, 2521];[18, 53, 1834, 2361, 2364, 2493, 2497, 2501, 2521];0
org.apache.commons.math3.stat.descriptive.moment.InteractionTest.testInteraction;[12, 1712, 1713, 1714, 2183, 2511, 2514, 2517, 2518, 2523, 2524];[12, 1712, 1713, 1714, 2183, 2511, 2514, 2517, 2518, 2523, 2524];0
org.apache.commons.math3.stat.descriptive.moment.KurtosisTest.testConsistency;[12, 18, 46, 53, 688, 711, 718, 728, 1712, 1713, 1714, 1715, 2474, 2485, 2511, 2514, 2515, 2516, 2517, 2518, 2524, 2525, 2526];[12, 18, 46, 53, 688, 711, 718, 728, 1712, 1713, 1714, 1715, 2474, 2485, 2511, 2514, 2515, 2516, 2517, 2518, 2524, 2525, 2526];0
org.apache.commons.math3.stat.descriptive.moment.KurtosisTest.testCopy;[12, 18, 46, 53, 61, 711, 718, 1712, 1713, 1714, 1715, 2094, 2422, 2430, 2435, 2474, 2485, 2519, 2520, 2527];[12, 18, 46, 53, 61, 711, 718, 1712, 1713, 1714, 1715, 2094, 2422, 2430, 2435, 2474, 2485, 2519, 2520, 2527];0
org.apache.commons.math3.stat.descriptive.moment.KurtosisTest.testCopyConsistency;[61, 93, 117, 323, 718, 1712, 1713, 2094, 2422, 2430, 2435, 2485, 2511, 2512, 2514, 2517, 2518, 2519, 2520, 2524, 2526, 2527, 2528];[61, 93, 117, 323, 718, 1712, 1713, 2094, 2422, 2430, 2435, 2485, 2511, 2512, 2514, 2517, 2518, 2519, 2520, 2524, 2526, 2527, 2528];0
org.apache.commons.math3.stat.descriptive.moment.KurtosisTest.testEqualsAndHashCode;[93, 98, 117, 688, 728, 1712, 1713, 2511, 2512, 2513, 2514, 2515, 2516, 2518, 2524, 2525, 2526, 2528];[93, 98, 117, 688, 728, 1712, 1713, 2511, 2512, 2513, 2514, 2515, 2516, 2518, 2524, 2525, 2526, 2528];0
org.apache.commons.math3.stat.descriptive.moment.KurtosisTest.testEvaluateArraySegment;[12, 18, 46, 53, 711, 718, 1712, 1713, 1714, 1715, 2474, 2485];[12, 18, 46, 53, 711, 718, 1712, 1713, 1714, 1715, 2474, 2485];0
org.apache.commons.math3.stat.descriptive.moment.KurtosisTest.testEvaluation;[12, 18, 46, 53, 711, 718, 1712, 1713, 1714, 1715, 2474, 2485];[12, 18, 46, 53, 711, 718, 1712, 1713, 1714, 1715, 2474, 2485];0
org.apache.commons.math3.stat.descriptive.moment.KurtosisTest.testIncrementation;[688, 718, 728, 1712, 1713, 2485, 2511, 2514, 2515, 2516, 2517, 2518, 2524, 2525, 2526, 2528];[688, 718, 728, 1712, 1713, 2485, 2511, 2514, 2515, 2516, 2517, 2518, 2524, 2525, 2526, 2528];0
org.apache.commons.math3.stat.descriptive.moment.KurtosisTest.testNaN;[1712, 1713, 2511, 2514, 2518, 2524, 2526];[1712, 1713, 2511, 2514, 2518, 2524, 2526];0
org.apache.commons.math3.stat.descriptive.moment.KurtosisTest.testSerial;[93, 117, 2511, 2512, 2524, 2528];[93, 117, 2511, 2512, 2524, 2528];0
org.apache.commons.math3.stat.descriptive.moment.KurtosisTest.testSerialization;[93, 98, 117, 688, 728, 1712, 1713, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2524, 2525, 2526, 2528];[93, 98, 117, 688, 728, 1712, 1713, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2524, 2525, 2526, 2528];0
org.apache.commons.math3.stat.descriptive.moment.MeanTest.testConsistency;[688, 691, 693, 711, 718, 1713, 2182, 2183, 2485, 2529];[688, 691, 693, 711, 718, 1713, 2182, 2183, 2485, 2529];0
org.apache.commons.math3.stat.descriptive.moment.MeanTest.testCopy;[61, 691, 693, 711, 718, 2094, 2422, 2435, 2453];[61, 691, 693, 711, 718, 2094, 2422, 2435, 2453];0
org.apache.commons.math3.stat.descriptive.moment.MeanTest.testCopyConsistency;[61, 93, 117, 323, 718, 1713, 2094, 2182, 2183, 2422, 2435, 2453, 2485, 2511, 2512, 2530];[61, 93, 117, 323, 718, 1713, 2094, 2182, 2183, 2422, 2435, 2453, 2485, 2511, 2512, 2530];0
org.apache.commons.math3.stat.descriptive.moment.MeanTest.testEqualsAndHashCode;[93, 98, 117, 688, 1713, 2182, 2183, 2511, 2512, 2513, 2529, 2530];[93, 98, 117, 688, 1713, 2182, 2183, 2511, 2512, 2513, 2529, 2530];0
org.apache.commons.math3.stat.descriptive.moment.MeanTest.testEvaluateArraySegment;[691, 693, 711, 718];[691, 693, 711, 718];0
org.apache.commons.math3.stat.descriptive.moment.MeanTest.testEvaluateArraySegmentWeighted;[691, 693, 718];[691, 693, 718];0
org.apache.commons.math3.stat.descriptive.moment.MeanTest.testEvaluation;[691, 693, 711, 718];[691, 693, 711, 718];0
org.apache.commons.math3.stat.descriptive.moment.MeanTest.testIncrementation;[688, 718, 1713, 2182, 2183, 2485, 2511, 2529, 2530];[688, 718, 1713, 2182, 2183, 2485, 2511, 2529, 2530];0
org.apache.commons.math3.stat.descriptive.moment.MeanTest.testSerial;[93, 117, 2183, 2511, 2512, 2530];[93, 117, 2183, 2511, 2512, 2530];0
org.apache.commons.math3.stat.descriptive.moment.MeanTest.testSerialization;[93, 98, 117, 688, 1713, 2182, 2183, 2511, 2512, 2513, 2529, 2530];[93, 98, 117, 688, 1713, 2182, 2183, 2511, 2512, 2513, 2529, 2530];0
org.apache.commons.math3.stat.descriptive.moment.MeanTest.testSmallSamples;[1713, 2182, 2183];[1713, 2182, 2183];0
org.apache.commons.math3.stat.descriptive.moment.MeanTest.testWeightedConsistency;[12, 18, 76, 77, 78, 79, 80, 81, 105, 107, 108, 340, 647, 691, 693, 711, 718, 2418];[12, 18, 76, 77, 78, 79, 80, 81, 105, 107, 108, 340, 647, 691, 693, 711, 718, 2418];0
org.apache.commons.math3.stat.descriptive.moment.MeanTest.testWeightedMean;[691, 693, 718];[691, 693, 718];0
org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest.testConsistency;[688, 711, 718, 728, 1712, 1713, 2485, 2531];[688, 711, 718, 728, 1712, 1713, 2485, 2531];0
org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest.testCopy;[61, 688, 711, 718, 728, 1712, 1713, 2094, 2422, 2430, 2435, 2485, 2531];[61, 688, 711, 718, 728, 1712, 1713, 2094, 2422, 2430, 2435, 2485, 2531];0
org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest.testCopyConsistency;[61, 93, 117, 323, 718, 1712, 1713, 2094, 2422, 2430, 2435, 2485, 2511, 2512, 2531];[61, 93, 117, 323, 718, 1712, 1713, 2094, 2422, 2430, 2435, 2485, 2511, 2512, 2531];0
org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest.testEqualsAndHashCode;[93, 98, 117, 688, 728, 1712, 1713, 2511, 2512, 2513, 2531];[93, 98, 117, 688, 728, 1712, 1713, 2511, 2512, 2513, 2531];0
org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest.testEvaluateArraySegment;[688, 711, 718, 728, 1712, 1713, 2485, 2531];[688, 711, 718, 728, 1712, 1713, 2485, 2531];0
org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest.testEvaluation;[688, 711, 718, 728, 1712, 1713, 2485, 2531];[688, 711, 718, 728, 1712, 1713, 2485, 2531];0
org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest.testIncrementation;[688, 718, 728, 1712, 1713, 2485, 2511, 2531];[688, 718, 728, 1712, 1713, 2485, 2511, 2531];0
org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest.testMomentSmallSamples;[1712, 1713, 2531];[1712, 1713, 2531];0
org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest.testSerial;[93, 117, 2511, 2512, 2531];[93, 117, 2511, 2512, 2531];0
org.apache.commons.math3.stat.descriptive.moment.SecondMomentTest.testSerialization;[93, 98, 117, 688, 728, 1712, 1713, 2511, 2512, 2513, 2531];[93, 98, 117, 688, 728, 1712, 1713, 2511, 2512, 2513, 2531];0
org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest.testInsufficientData;[70, 71, 691, 718, 2532, 2533, 2534];[70, 71, 691, 718, 2532, 2533, 2534];0
org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest.testNonMeanCutoffs;[718];[718];0
org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest.testNoVariance;[691, 693, 718, 2532, 2533];[691, 693, 718, 2532, 2533];0
org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest.testPopulation;[691, 693, 718, 2532, 2533, 2534];[691, 693, 718, 2532, 2533, 2534];0
org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest.testSample;[681, 688, 691, 693, 711, 718, 721, 728, 2201, 2202, 2532, 2533, 2534];[681, 688, 691, 693, 711, 718, 721, 728, 2201, 2202, 2532, 2533, 2534];0
org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest.testSingleDown;[691, 693, 718, 2532, 2533];[691, 693, 718, 2532, 2533];0
org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest.testSingleUp;[691, 693, 718, 2532, 2533];[691, 693, 718, 2532, 2533];0
org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest.testVarianceDecompMeanCutoff;[681, 688, 691, 693, 718, 721, 728, 2201, 2532, 2533, 2534];[681, 688, 691, 693, 718, 721, 728, 2087, 2201, 2532, 2533, 2534];0
org.apache.commons.math3.stat.descriptive.moment.SemiVarianceTest.testVarianceDecompNonMeanCutoff;[718, 2532, 2534];[718, 2532, 2534];0
org.apache.commons.math3.stat.descriptive.moment.SkewnessTest.testConsistency;[12, 688, 691, 693, 711, 718, 728, 1712, 1713, 2481, 2485, 2511, 2516, 2518, 2523, 2535, 2536];[12, 688, 691, 693, 711, 718, 728, 1712, 1713, 2481, 2485, 2511, 2516, 2518, 2523, 2535, 2536];0
org.apache.commons.math3.stat.descriptive.moment.SkewnessTest.testCopy;[12, 61, 691, 693, 711, 718, 2094, 2422, 2430, 2435, 2481, 2520];[12, 61, 691, 693, 711, 718, 2094, 2422, 2430, 2435, 2481, 2520];0
org.apache.commons.math3.stat.descriptive.moment.SkewnessTest.testCopyConsistency;[12, 61, 93, 117, 323, 718, 1712, 1713, 2094, 2422, 2430, 2435, 2485, 2511, 2512, 2518, 2520, 2523, 2535, 2537];[12, 61, 93, 117, 323, 718, 1712, 1713, 2094, 2422, 2430, 2435, 2485, 2511, 2512, 2518, 2520, 2523, 2535, 2537];0
org.apache.commons.math3.stat.descriptive.moment.SkewnessTest.testEqualsAndHashCode;[93, 98, 117, 688, 728, 1712, 1713, 2511, 2512, 2513, 2516, 2518, 2523, 2535, 2536, 2537];[93, 98, 117, 688, 728, 1712, 1713, 2511, 2512, 2513, 2516, 2518, 2523, 2535, 2536, 2537];0
org.apache.commons.math3.stat.descriptive.moment.SkewnessTest.testEvaluateArraySegment;[12, 691, 693, 711, 718, 2481];[12, 691, 693, 711, 718, 2481];0
org.apache.commons.math3.stat.descriptive.moment.SkewnessTest.testEvaluation;[12, 691, 693, 711, 718, 2481];[12, 691, 693, 711, 718, 2481];0
org.apache.commons.math3.stat.descriptive.moment.SkewnessTest.testIncrementation;[12, 688, 718, 728, 1712, 1713, 2485, 2511, 2516, 2518, 2523, 2535, 2536, 2537];[12, 688, 718, 728, 1712, 1713, 2485, 2511, 2516, 2518, 2523, 2535, 2536, 2537];0
org.apache.commons.math3.stat.descriptive.moment.SkewnessTest.testNaN;[1712, 1713, 2518, 2523, 2535];[1712, 1713, 2518, 2523, 2535];0
org.apache.commons.math3.stat.descriptive.moment.SkewnessTest.testSerial;[93, 117, 2511, 2512, 2523, 2537];[93, 117, 2511, 2512, 2523, 2537];0
org.apache.commons.math3.stat.descriptive.moment.SkewnessTest.testSerialization;[12, 93, 98, 117, 688, 728, 1712, 1713, 2511, 2512, 2513, 2516, 2518, 2523, 2535, 2536, 2537];[12, 93, 98, 117, 688, 728, 1712, 1713, 2511, 2512, 2513, 2516, 2518, 2523, 2535, 2536, 2537];0
org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest.testConsistency;[12, 681, 688, 691, 693, 718, 721, 728, 1712, 1713, 1714, 1715, 2485, 2538, 2539, 2540, 2541];[12, 681, 688, 691, 693, 718, 721, 728, 1712, 1713, 1714, 1715, 2485, 2538, 2539, 2540, 2541];0
org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest.testCopy;[12, 61, 681, 688, 691, 693, 718, 721, 728, 2094, 2422, 2430, 2435, 2455, 2541, 2542];[12, 61, 681, 688, 691, 693, 718, 721, 728, 2094, 2422, 2430, 2435, 2455, 2541, 2542];0
org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest.testCopyConsistency;[12, 61, 93, 117, 323, 718, 1712, 1713, 1714, 1715, 2094, 2422, 2430, 2435, 2455, 2485, 2511, 2512, 2539, 2540, 2542, 2543, 2544];[12, 61, 93, 117, 323, 718, 1712, 1713, 1714, 1715, 2094, 2422, 2430, 2435, 2455, 2485, 2511, 2512, 2539, 2540, 2542, 2543, 2544];0
org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest.testEqualsAndHashCode;[12, 93, 98, 117, 688, 721, 728, 1712, 1713, 1714, 1715, 2511, 2512, 2513, 2538, 2539, 2540, 2543, 2544];[12, 93, 98, 117, 688, 721, 728, 1712, 1713, 1714, 1715, 2511, 2512, 2513, 2538, 2539, 2540, 2543, 2544];0
org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest.testEvaluateArraySegment;[12, 681, 688, 691, 693, 718, 721, 728, 2541];[12, 681, 688, 691, 693, 718, 721, 728, 2541];0
org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest.testEvaluation;[12, 681, 688, 691, 693, 718, 721, 728, 2541];[12, 681, 688, 691, 693, 718, 721, 728, 2541];0
org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest.testIncrementation;[12, 688, 718, 721, 728, 1712, 1713, 1714, 1715, 2485, 2511, 2538, 2539, 2540, 2543, 2544];[12, 688, 718, 721, 728, 1712, 1713, 1714, 1715, 2485, 2511, 2538, 2539, 2540, 2543, 2544];0
org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest.testNaN;[12, 1712, 1713, 1714, 1715, 2539, 2540];[12, 1712, 1713, 1714, 1715, 2539, 2540];0
org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest.testPopulation;[12, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1715, 2485, 2499, 2531, 2539, 2540, 2541, 2545];[12, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1715, 2485, 2499, 2531, 2539, 2540, 2541, 2545];0
org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest.testSerial;[12, 93, 117, 1714, 2511, 2512, 2539, 2543, 2544];[12, 93, 117, 1714, 2511, 2512, 2539, 2543, 2544];0
org.apache.commons.math3.stat.descriptive.moment.StandardDeviationTest.testSerialization;[12, 93, 98, 117, 688, 721, 728, 1712, 1713, 1714, 1715, 2511, 2512, 2513, 2538, 2539, 2540, 2543, 2544];[12, 93, 98, 117, 688, 721, 728, 1712, 1713, 1714, 1715, 2511, 2512, 2513, 2538, 2539, 2540, 2543, 2544];0
org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest.testConsistency;[688, 711, 718, 728, 1712, 1713, 2485, 2516, 2518, 2546];[688, 711, 718, 728, 1712, 1713, 2485, 2516, 2518, 2546];0
org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest.testCopy;[61, 688, 711, 718, 728, 1712, 1713, 2094, 2422, 2430, 2435, 2485, 2516, 2518, 2520, 2546];[61, 688, 711, 718, 728, 1712, 1713, 2094, 2422, 2430, 2435, 2485, 2516, 2518, 2520, 2546];0
org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest.testCopyConsistency;[61, 93, 117, 323, 718, 1712, 1713, 2094, 2422, 2430, 2435, 2485, 2511, 2512, 2518, 2520, 2546];[61, 93, 117, 323, 718, 1712, 1713, 2094, 2422, 2430, 2435, 2485, 2511, 2512, 2518, 2520, 2546];0
org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest.testEqualsAndHashCode;[93, 98, 117, 688, 728, 1712, 1713, 2511, 2512, 2513, 2516, 2518, 2546];[93, 98, 117, 688, 728, 1712, 1713, 2511, 2512, 2513, 2516, 2518, 2546];0
org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest.testEvaluateArraySegment;[688, 711, 718, 728, 1712, 1713, 2485, 2516, 2518, 2546];[688, 711, 718, 728, 1712, 1713, 2485, 2516, 2518, 2546];0
org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest.testEvaluation;[688, 711, 718, 728, 1712, 1713, 2485, 2516, 2518, 2546];[688, 711, 718, 728, 1712, 1713, 2485, 2516, 2518, 2546];0
org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest.testIncrementation;[688, 718, 728, 1712, 1713, 2485, 2511, 2516, 2518, 2546];[688, 718, 728, 1712, 1713, 2485, 2511, 2516, 2518, 2546];0
org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest.testMomentSmallSamples;[1712, 1713, 2518, 2546];[1712, 1713, 2518, 2546];0
org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest.testSerial;[93, 117, 2511, 2512, 2546];[93, 117, 2511, 2512, 2546];0
org.apache.commons.math3.stat.descriptive.moment.ThirdMomentTest.testSerialization;[93, 98, 117, 688, 728, 1712, 1713, 2511, 2512, 2513, 2516, 2518, 2546];[93, 98, 117, 688, 728, 1712, 1713, 2511, 2512, 2513, 2516, 2518, 2546];0
org.apache.commons.math3.stat.descriptive.moment.VarianceTest.testConsistency;[681, 688, 691, 693, 718, 721, 728, 1712, 1713, 1714, 1715, 2485];[681, 688, 691, 693, 718, 721, 728, 1712, 1713, 1714, 1715, 2485];0
org.apache.commons.math3.stat.descriptive.moment.VarianceTest.testCopy;[61, 681, 688, 691, 693, 718, 721, 728, 2094, 2422, 2430, 2435, 2455];[61, 681, 688, 691, 693, 718, 721, 728, 2094, 2422, 2430, 2435, 2455];0
org.apache.commons.math3.stat.descriptive.moment.VarianceTest.testCopyConsistency;[61, 93, 117, 323, 718, 1712, 1713, 1714, 1715, 2094, 2422, 2430, 2435, 2455, 2485, 2511, 2512, 2543];[61, 93, 117, 323, 718, 1712, 1713, 1714, 1715, 2094, 2422, 2430, 2435, 2455, 2485, 2511, 2512, 2543];0
org.apache.commons.math3.stat.descriptive.moment.VarianceTest.testEqualsAndHashCode;[93, 98, 117, 688, 721, 728, 1712, 1713, 1714, 1715, 2511, 2512, 2513, 2543];[93, 98, 117, 688, 721, 728, 1712, 1713, 1714, 1715, 2511, 2512, 2513, 2543];0
org.apache.commons.math3.stat.descriptive.moment.VarianceTest.testEvaluateArraySegment;[681, 688, 691, 693, 718, 721, 728];[681, 688, 691, 693, 718, 721, 728];0
org.apache.commons.math3.stat.descriptive.moment.VarianceTest.testEvaluateArraySegmentWeighted;[681, 688, 691, 693, 718, 721, 728];[681, 688, 691, 693, 718, 721, 728];0
org.apache.commons.math3.stat.descriptive.moment.VarianceTest.testEvaluation;[681, 688, 691, 693, 718, 721, 728];[681, 688, 691, 693, 718, 721, 728];0
org.apache.commons.math3.stat.descriptive.moment.VarianceTest.testIncrementation;[688, 718, 721, 728, 1712, 1713, 1714, 1715, 2485, 2511, 2543];[688, 718, 721, 728, 1712, 1713, 1714, 1715, 2485, 2511, 2543];0
org.apache.commons.math3.stat.descriptive.moment.VarianceTest.testNaN;[12, 1712, 1713, 1714, 1715, 2539, 2540];[12, 1712, 1713, 1714, 1715, 2539, 2540];0
org.apache.commons.math3.stat.descriptive.moment.VarianceTest.testPopulation;[681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1715, 2485, 2499, 2531];[681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1715, 2485, 2499, 2531];0
org.apache.commons.math3.stat.descriptive.moment.VarianceTest.testSerial;[93, 117, 1714, 2511, 2512, 2543];[93, 117, 1714, 2511, 2512, 2543];0
org.apache.commons.math3.stat.descriptive.moment.VarianceTest.testSerialization;[93, 98, 117, 688, 721, 728, 1712, 1713, 1714, 1715, 2511, 2512, 2513, 2543];[93, 98, 117, 688, 721, 728, 1712, 1713, 1714, 1715, 2511, 2512, 2513, 2543];0
org.apache.commons.math3.stat.descriptive.moment.VarianceTest.testWeightedConsistency;[12, 18, 76, 77, 78, 79, 80, 81, 105, 107, 108, 340, 647, 681, 688, 691, 693, 718, 721, 728, 2418];[12, 18, 76, 77, 78, 79, 80, 81, 105, 107, 108, 340, 647, 681, 688, 691, 693, 718, 721, 728, 2418];0
org.apache.commons.math3.stat.descriptive.moment.VarianceTest.testWeightedVariance;[681, 688, 691, 693, 718, 721, 728];[681, 688, 691, 693, 718, 721, 728];0
org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats;[373, 384, 392, 396, 402, 405, 410, 695, 2180, 2184, 2547];[373, 384, 392, 396, 402, 405, 410, 695, 2180, 2184, 2547];0
org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest.testMismatch;[70, 71, 144, 759, 2184];[70, 71, 144, 759, 2184];0
org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest.testSerial;[2548];[2548];0
org.apache.commons.math3.stat.descriptive.moment.VectorialCovarianceTest.testSimplistic;[373, 384, 392, 396, 402, 405, 410, 695, 2180, 2184];[373, 384, 392, 396, 402, 405, 410, 695, 2180, 2184];0
org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest.testBasicStats;[1713, 2179, 2181, 2182, 2183, 2511, 2530, 2549];[1713, 2179, 2181, 2182, 2183, 2511, 2530, 2549];0
org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest.testMismatch;[70, 71, 144, 759, 2179];[70, 71, 144, 759, 2179];0
org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest.testSerial;[93, 117, 1713, 2179, 2182, 2183, 2511, 2512, 2530, 2550];[93, 117, 1713, 2179, 2182, 2183, 2511, 2512, 2530, 2550];0
org.apache.commons.math3.stat.descriptive.moment.VectorialMeanTest.testSimplistic;[1713, 2179, 2181, 2182, 2183];[1713, 2179, 2181, 2182, 2183];0
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest.testDimension;[70, 71, 2551, 2552];[70, 71, 2551, 2552];0
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest.testEqualsAndHashCode;[18, 53, 93, 98, 117, 373, 384, 392, 396, 402, 405, 410, 688, 695, 732, 1204, 1713, 1828, 1830, 1834, 1838, 1845, 1849, 1853, 2180, 2182, 2183, 2184, 2360, 2361, 2362, 2363, 2364, 2366, 2411, 2493, 2496, 2497, 2501, 2521, 2529, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566];[18, 53, 93, 98, 117, 373, 384, 392, 396, 402, 405, 410, 688, 695, 732, 1204, 1713, 1828, 1830, 1834, 1838, 1845, 1849, 1853, 2180, 2182, 2183, 2184, 2360, 2361, 2362, 2363, 2364, 2366, 2411, 2493, 2496, 2497, 2501, 2521, 2529, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566];0
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest.testN0andN1Conditions;[12, 18, 53, 373, 384, 392, 396, 402, 405, 410, 695, 1713, 1828, 1830, 1834, 1838, 1845, 2180, 2182, 2183, 2184, 2493, 2497, 2501, 2521, 2551, 2552, 2553, 2559, 2564, 2565, 2567];[12, 18, 53, 373, 384, 392, 396, 402, 405, 410, 695, 1713, 1828, 1830, 1834, 1838, 1845, 2180, 2182, 2183, 2184, 2493, 2497, 2501, 2521, 2551, 2552, 2553, 2559, 2564, 2565, 2567];0
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest.testNaNContracts;[18, 53, 1713, 1828, 1830, 1834, 1838, 1845, 1853, 2182, 2183, 2184, 2493, 2497, 2501, 2521, 2551, 2552, 2553, 2555, 2559, 2564, 2565, 2567];[18, 53, 1713, 1828, 1830, 1834, 1838, 1845, 1853, 2182, 2183, 2184, 2493, 2497, 2501, 2521, 2551, 2552, 2553, 2555, 2559, 2564, 2565, 2567];0
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest.testSerialization;[18, 53, 93, 98, 117, 373, 384, 392, 396, 402, 405, 410, 695, 732, 1204, 1713, 1828, 1830, 1834, 1838, 1845, 1849, 1853, 2180, 2182, 2183, 2184, 2411, 2493, 2496, 2497, 2501, 2521, 2551, 2552, 2553, 2554, 2555, 2557, 2558, 2559, 2560, 2561, 2562, 2564, 2565, 2566];[18, 53, 93, 98, 117, 373, 384, 392, 396, 402, 405, 410, 695, 732, 1204, 1713, 1828, 1830, 1834, 1838, 1845, 1849, 1853, 2180, 2182, 2183, 2184, 2411, 2493, 2496, 2497, 2501, 2521, 2551, 2552, 2553, 2554, 2555, 2557, 2558, 2559, 2560, 2561, 2562, 2564, 2565, 2566];0
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest.testSetterIllegalState;[18, 70, 71, 1713, 1828, 1830, 1834, 1838, 1845, 2182, 2184, 2521, 2551, 2552, 2568, 2569, 2570];[18, 70, 71, 1713, 1828, 1830, 1834, 1838, 1845, 2182, 2184, 2521, 2551, 2552, 2568, 2569, 2570];0
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest.testSetterInjection;[18, 1713, 1828, 1830, 1834, 1838, 1845, 2182, 2183, 2184, 2360, 2361, 2362, 2363, 2364, 2366, 2521, 2551, 2552, 2556, 2559, 2563, 2564, 2568, 2569, 2570, 2571];[18, 1713, 1828, 1830, 1834, 1838, 1845, 2182, 2183, 2184, 2360, 2361, 2362, 2363, 2364, 2366, 2521, 2551, 2552, 2556, 2559, 2563, 2564, 2568, 2569, 2570, 2571];0
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest.testShuffledStatistics;[18, 53, 93, 117, 1713, 1828, 1830, 1834, 1838, 1845, 1849, 1853, 2182, 2183, 2184, 2411, 2493, 2496, 2497, 2501, 2521, 2551, 2552, 2553, 2555, 2557, 2558, 2559, 2561, 2562, 2564, 2568, 2569, 2570, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584];[18, 53, 93, 117, 1713, 1828, 1830, 1834, 1838, 1845, 1849, 1853, 2182, 2183, 2184, 2411, 2493, 2496, 2497, 2501, 2521, 2551, 2552, 2553, 2555, 2557, 2558, 2559, 2561, 2562, 2564, 2568, 2569, 2570, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584];0
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest.testStats;[12, 18, 53, 373, 384, 392, 396, 402, 405, 410, 688, 695, 1713, 1828, 1830, 1834, 1838, 1845, 1849, 1853, 2180, 2182, 2183, 2184, 2360, 2361, 2362, 2363, 2364, 2366, 2411, 2493, 2496, 2497, 2501, 2521, 2529, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2561, 2562, 2563, 2564, 2565, 2567];[12, 18, 53, 373, 384, 392, 396, 402, 405, 410, 688, 695, 1713, 1828, 1830, 1834, 1838, 1845, 1849, 1853, 2180, 2182, 2183, 2184, 2360, 2361, 2362, 2363, 2364, 2366, 2411, 2493, 2496, 2497, 2501, 2521, 2529, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2561, 2562, 2563, 2564, 2565, 2567];0
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatisticsTest.testToString;[12, 18, 53, 373, 384, 392, 396, 402, 405, 410, 528, 695, 1226, 1227, 1713, 1828, 1830, 1834, 1838, 1845, 1849, 1853, 2180, 2182, 2183, 2184, 2493, 2496, 2497, 2501, 2521, 2551, 2552, 2553, 2554, 2555, 2558, 2559, 2561, 2562, 2564, 2565, 2567, 2585, 2586];[12, 18, 53, 373, 384, 392, 396, 402, 405, 410, 528, 695, 1226, 1227, 1713, 1828, 1830, 1834, 1838, 1845, 1849, 1853, 2180, 2182, 2183, 2184, 2493, 2496, 2497, 2501, 2521, 2551, 2552, 2553, 2554, 2555, 2558, 2559, 2561, 2562, 2564, 2565, 2567, 2585, 2586];0
org.apache.commons.math3.stat.descriptive.rank.MaxTest.testConsistency;[711, 718, 1828, 1849, 2363, 2417, 2485];[711, 718, 1828, 1849, 2363, 2417, 2485];0
org.apache.commons.math3.stat.descriptive.rank.MaxTest.testCopy;[61, 711, 718, 2094, 2417, 2432, 2435];[61, 711, 718, 2094, 2417, 2432, 2435];0
org.apache.commons.math3.stat.descriptive.rank.MaxTest.testCopyConsistency;[61, 93, 117, 323, 718, 1828, 1849, 2094, 2432, 2435, 2485, 2512, 2587];[61, 93, 117, 323, 718, 1828, 1849, 2094, 2432, 2435, 2485, 2512, 2587];0
org.apache.commons.math3.stat.descriptive.rank.MaxTest.testEqualsAndHashCode;[93, 98, 117, 1828, 1849, 2363, 2512, 2513, 2587];[93, 98, 117, 1828, 1849, 2363, 2512, 2513, 2587];0
org.apache.commons.math3.stat.descriptive.rank.MaxTest.testEvaluateArraySegment;[711, 718, 2417];[711, 718, 2417];0
org.apache.commons.math3.stat.descriptive.rank.MaxTest.testEvaluation;[711, 718, 2417];[711, 718, 2417];0
org.apache.commons.math3.stat.descriptive.rank.MaxTest.testIncrementation;[718, 1828, 1849, 2363, 2485, 2587];[718, 1828, 1849, 2363, 2485, 2587];0
org.apache.commons.math3.stat.descriptive.rank.MaxTest.testNaNs;[711, 718, 2417];[711, 718, 2417];0
org.apache.commons.math3.stat.descriptive.rank.MaxTest.testSerial;[93, 117, 1849, 2512, 2587];[93, 117, 1849, 2512, 2587];0
org.apache.commons.math3.stat.descriptive.rank.MaxTest.testSerialization;[93, 98, 117, 1828, 1849, 2363, 2512, 2513, 2587];[93, 98, 117, 1828, 1849, 2363, 2512, 2513, 2587];0
org.apache.commons.math3.stat.descriptive.rank.MaxTest.testSpecialValues;[711, 718, 1828, 1849, 2417];[711, 718, 1828, 1849, 2417];0
org.apache.commons.math3.stat.descriptive.rank.MedianTest.testCopy;[61, 718, 2083, 2084, 2086, 2087, 2088, 2094, 2095, 2435, 2533, 2588, 2589];[61, 718, 2083, 2084, 2086, 2087, 2088, 2094, 2095, 2435, 2533, 2588, 2589];0
org.apache.commons.math3.stat.descriptive.rank.MedianTest.testEvaluateArraySegment;[718, 2086, 2087, 2088, 2094, 2095, 2533];[718, 2086, 2087, 2088, 2094, 2095, 2533];0
org.apache.commons.math3.stat.descriptive.rank.MedianTest.testEvaluateArraySegmentWeighted;[2087];[2087];0
org.apache.commons.math3.stat.descriptive.rank.MedianTest.testEvaluation;[718, 2083, 2084, 2086, 2087, 2088, 2094, 2095, 2533];[718, 2083, 2084, 2086, 2087, 2088, 2094, 2095, 2533];0
org.apache.commons.math3.stat.descriptive.rank.MedianTest.testWeightedConsistency;[2087];[2087];0
org.apache.commons.math3.stat.descriptive.rank.MinTest.testConsistency;[711, 718, 1845, 1853, 2362, 2416, 2485];[711, 718, 1845, 1853, 2362, 2416, 2485];0
org.apache.commons.math3.stat.descriptive.rank.MinTest.testCopy;[61, 711, 718, 2094, 2416, 2429, 2435];[61, 711, 718, 2094, 2416, 2429, 2435];0
org.apache.commons.math3.stat.descriptive.rank.MinTest.testCopyConsistency;[61, 93, 117, 323, 718, 1845, 1853, 2094, 2429, 2435, 2485, 2512, 2590];[61, 93, 117, 323, 718, 1845, 1853, 2094, 2429, 2435, 2485, 2512, 2590];0
org.apache.commons.math3.stat.descriptive.rank.MinTest.testEqualsAndHashCode;[93, 98, 117, 1845, 1853, 2362, 2512, 2513, 2590];[93, 98, 117, 1845, 1853, 2362, 2512, 2513, 2590];0
org.apache.commons.math3.stat.descriptive.rank.MinTest.testEvaluateArraySegment;[711, 718, 2416];[711, 718, 2416];0
org.apache.commons.math3.stat.descriptive.rank.MinTest.testEvaluation;[711, 718, 2416];[711, 718, 2416];0
org.apache.commons.math3.stat.descriptive.rank.MinTest.testIncrementation;[718, 1845, 1853, 2362, 2485, 2590];[718, 1845, 1853, 2362, 2485, 2590];0
org.apache.commons.math3.stat.descriptive.rank.MinTest.testNaNs;[711, 718, 2416];[711, 718, 2416];0
org.apache.commons.math3.stat.descriptive.rank.MinTest.testSerial;[93, 117, 1853, 2512, 2590];[93, 117, 1853, 2512, 2590];0
org.apache.commons.math3.stat.descriptive.rank.MinTest.testSerialization;[93, 98, 117, 1845, 1853, 2362, 2512, 2513, 2590];[93, 98, 117, 1845, 1853, 2362, 2512, 2513, 2590];0
org.apache.commons.math3.stat.descriptive.rank.MinTest.testSpecialValues;[711, 718, 1845, 1853, 2416];[711, 718, 1845, 1853, 2416];0
org.apache.commons.math3.stat.descriptive.rank.PercentileTest.test5;[718, 2083, 2084, 2086, 2087, 2088, 2094, 2095, 2533];[718, 2083, 2084, 2086, 2087, 2088, 2094, 2095, 2533];0
org.apache.commons.math3.stat.descriptive.rank.PercentileTest.testCopy;[61, 718, 2083, 2084, 2086, 2087, 2088, 2094, 2095, 2435, 2533, 2588, 2589];[61, 718, 2083, 2084, 2086, 2087, 2088, 2094, 2095, 2435, 2533, 2588, 2589];0
org.apache.commons.math3.stat.descriptive.rank.PercentileTest.testEvaluateArraySegment;[718, 2086, 2087, 2088, 2094, 2095, 2533];[718, 2086, 2087, 2088, 2094, 2095, 2533];0
org.apache.commons.math3.stat.descriptive.rank.PercentileTest.testEvaluateArraySegmentWeighted;[2087];[2087];0
org.apache.commons.math3.stat.descriptive.rank.PercentileTest.testEvaluation;[718, 2083, 2084, 2086, 2087, 2088, 2094, 2095, 2533];[718, 2083, 2084, 2086, 2087, 2088, 2094, 2095, 2533];0
org.apache.commons.math3.stat.descriptive.rank.PercentileTest.testHighPercentile;[718, 2086, 2087, 2088, 2094, 2095, 2533];[718, 2086, 2087, 2088, 2094, 2095, 2533];0
org.apache.commons.math3.stat.descriptive.rank.PercentileTest.testLowPercentile;[718, 2086, 2087, 2088, 2094, 2095, 2533];[718, 2086, 2087, 2088, 2094, 2095, 2533];0
org.apache.commons.math3.stat.descriptive.rank.PercentileTest.testNISTExample;[718, 2086, 2087, 2088, 2094, 2095, 2533];[718, 2086, 2087, 2088, 2094, 2095, 2533];0
org.apache.commons.math3.stat.descriptive.rank.PercentileTest.testNullEmpty;[70, 71, 718, 2086, 2087, 2533];[70, 71, 718, 2086, 2087, 2533];0
org.apache.commons.math3.stat.descriptive.rank.PercentileTest.testPercentile;[70, 71, 718, 2086, 2087, 2088, 2094, 2095, 2533];[70, 71, 718, 2086, 2087, 2088, 2094, 2095, 2533];0
org.apache.commons.math3.stat.descriptive.rank.PercentileTest.testSetQuantile;[70, 71, 2087, 2461];[70, 71, 2087, 2461];0
org.apache.commons.math3.stat.descriptive.rank.PercentileTest.testSingleton;[718, 2086, 2087, 2533];[718, 2086, 2087, 2533];0
org.apache.commons.math3.stat.descriptive.rank.PercentileTest.testSpecialValues;[718, 2086, 2087, 2088, 2094, 2095, 2533];[718, 2086, 2087, 2088, 2094, 2095, 2533];0
org.apache.commons.math3.stat.descriptive.rank.PercentileTest.testWeightedConsistency;[2087];[2087];0
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest.testEqualsAndHashCode;[93, 98, 117, 2421, 2437, 2439, 2440, 2441, 2443, 2445, 2591];[93, 98, 117, 2421, 2437, 2439, 2440, 2441, 2443, 2445, 2591];0
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest.testSerialization;[12, 93, 98, 117, 2421, 2437, 2439, 2440, 2441, 2443, 2445, 2591, 2592];[12, 93, 98, 117, 2421, 2437, 2439, 2440, 2441, 2443, 2445, 2591, 2592];0
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValuesTest.testToString;[12, 2421, 2437, 2439, 2440, 2443, 2445, 2592, 2593];[12, 2421, 2437, 2439, 2440, 2443, 2445, 2592, 2593];0
org.apache.commons.math3.stat.descriptive.summary.ProductTest.testConsistency;[711, 718, 2485, 2594, 2595, 2596, 2597];[711, 718, 2485, 2594, 2595, 2596, 2597];0
org.apache.commons.math3.stat.descriptive.summary.ProductTest.testCopy;[61, 711, 718, 2094, 2435, 2594, 2598];[61, 711, 718, 2094, 2435, 2594, 2598];0
org.apache.commons.math3.stat.descriptive.summary.ProductTest.testCopyConsistency;[61, 93, 117, 323, 718, 2094, 2435, 2485, 2512, 2596, 2597, 2598, 2599];[61, 93, 117, 323, 718, 2094, 2435, 2485, 2512, 2596, 2597, 2598, 2599];0
org.apache.commons.math3.stat.descriptive.summary.ProductTest.testEqualsAndHashCode;[93, 98, 117, 2512, 2513, 2595, 2596, 2597, 2599];[93, 98, 117, 2512, 2513, 2595, 2596, 2597, 2599];0
org.apache.commons.math3.stat.descriptive.summary.ProductTest.testEvaluateArraySegment;[711, 718, 2594];[711, 718, 2594];0
org.apache.commons.math3.stat.descriptive.summary.ProductTest.testEvaluateArraySegmentWeighted;[18, 46, 53, 718, 2594];[18, 46, 53, 718, 2594];0
org.apache.commons.math3.stat.descriptive.summary.ProductTest.testEvaluation;[711, 718, 2594];[711, 718, 2594];0
org.apache.commons.math3.stat.descriptive.summary.ProductTest.testIncrementation;[718, 2485, 2595, 2596, 2597, 2599];[718, 2485, 2595, 2596, 2597, 2599];0
org.apache.commons.math3.stat.descriptive.summary.ProductTest.testSerial;[93, 117, 2512, 2596, 2599];[93, 117, 2512, 2596, 2599];0
org.apache.commons.math3.stat.descriptive.summary.ProductTest.testSerialization;[93, 98, 117, 2512, 2513, 2595, 2596, 2597, 2599];[93, 98, 117, 2512, 2513, 2595, 2596, 2597, 2599];0
org.apache.commons.math3.stat.descriptive.summary.ProductTest.testSpecialValues;[2596, 2597];[2596, 2597];0
org.apache.commons.math3.stat.descriptive.summary.ProductTest.testWeightedConsistency;[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 105, 107, 108, 340, 647, 711, 718, 2418, 2594];[12, 18, 46, 53, 76, 77, 78, 79, 80, 81, 105, 107, 108, 340, 647, 711, 718, 2418, 2594];0
org.apache.commons.math3.stat.descriptive.summary.ProductTest.testWeightedProduct;[18, 46, 53, 718, 2594];[18, 46, 53, 718, 2594];0
org.apache.commons.math3.stat.descriptive.summary.SumLogTest.testConsistency;[18, 711, 718, 1834, 2361, 2485, 2497, 2500];[18, 711, 718, 1834, 2361, 2485, 2497, 2500];0
org.apache.commons.math3.stat.descriptive.summary.SumLogTest.testCopy;[18, 61, 711, 718, 2094, 2427, 2435, 2500];[18, 61, 711, 718, 2094, 2427, 2435, 2500];0
org.apache.commons.math3.stat.descriptive.summary.SumLogTest.testCopyConsistency;[18, 61, 93, 117, 323, 718, 1834, 2094, 2427, 2435, 2485, 2493, 2497, 2512];[18, 61, 93, 117, 323, 718, 1834, 2094, 2427, 2435, 2485, 2493, 2497, 2512];0
org.apache.commons.math3.stat.descriptive.summary.SumLogTest.testEqualsAndHashCode;[18, 93, 98, 117, 1834, 2361, 2493, 2497, 2512, 2513];[18, 93, 98, 117, 1834, 2361, 2493, 2497, 2512, 2513];0
org.apache.commons.math3.stat.descriptive.summary.SumLogTest.testEvaluateArraySegment;[18, 711, 718, 2500];[18, 711, 718, 2500];0
org.apache.commons.math3.stat.descriptive.summary.SumLogTest.testEvaluation;[18, 711, 718, 2500];[18, 711, 718, 2500];0
org.apache.commons.math3.stat.descriptive.summary.SumLogTest.testIncrementation;[18, 718, 1834, 2361, 2485, 2493, 2497];[18, 718, 1834, 2361, 2485, 2493, 2497];0
org.apache.commons.math3.stat.descriptive.summary.SumLogTest.testSerial;[93, 117, 2493, 2497, 2512];[93, 117, 2493, 2497, 2512];0
org.apache.commons.math3.stat.descriptive.summary.SumLogTest.testSerialization;[18, 93, 98, 117, 1834, 2361, 2493, 2497, 2512, 2513];[18, 93, 98, 117, 1834, 2361, 2493, 2497, 2512, 2513];0
org.apache.commons.math3.stat.descriptive.summary.SumLogTest.testSpecialValues;[18, 1834, 2361, 2497];[18, 1834, 2361, 2497];0
org.apache.commons.math3.stat.descriptive.summary.SumSqTest.testConsistency;[711, 718, 1838, 2366, 2485, 2495, 2496];[711, 718, 1838, 2366, 2485, 2495, 2496];0
org.apache.commons.math3.stat.descriptive.summary.SumSqTest.testCopy;[61, 711, 718, 2094, 2423, 2435, 2495];[61, 711, 718, 2094, 2423, 2435, 2495];0
org.apache.commons.math3.stat.descriptive.summary.SumSqTest.testCopyConsistency;[61, 93, 117, 323, 718, 1838, 2094, 2423, 2435, 2485, 2496, 2512, 2600];[61, 93, 117, 323, 718, 1838, 2094, 2423, 2435, 2485, 2496, 2512, 2600];0
org.apache.commons.math3.stat.descriptive.summary.SumSqTest.testEqualsAndHashCode;[93, 98, 117, 1838, 2366, 2496, 2512, 2513, 2600];[93, 98, 117, 1838, 2366, 2496, 2512, 2513, 2600];0
org.apache.commons.math3.stat.descriptive.summary.SumSqTest.testEvaluateArraySegment;[711, 718, 2495];[711, 718, 2495];0
org.apache.commons.math3.stat.descriptive.summary.SumSqTest.testEvaluation;[711, 718, 2495];[711, 718, 2495];0
org.apache.commons.math3.stat.descriptive.summary.SumSqTest.testIncrementation;[718, 1838, 2366, 2485, 2496, 2600];[718, 1838, 2366, 2485, 2496, 2600];0
org.apache.commons.math3.stat.descriptive.summary.SumSqTest.testSerial;[93, 117, 2496, 2512, 2600];[93, 117, 2496, 2512, 2600];0
org.apache.commons.math3.stat.descriptive.summary.SumSqTest.testSerialization;[93, 98, 117, 1838, 2366, 2496, 2512, 2513, 2600];[93, 98, 117, 1838, 2366, 2496, 2512, 2513, 2600];0
org.apache.commons.math3.stat.descriptive.summary.SumSqTest.testSpecialValues;[1838, 2496];[1838, 2496];0
org.apache.commons.math3.stat.descriptive.summary.SumTest.testConsistency;[693, 711, 718, 1830, 2360, 2411, 2485];[693, 711, 718, 1830, 2360, 2411, 2485];0
org.apache.commons.math3.stat.descriptive.summary.SumTest.testCopy;[61, 693, 711, 718, 2094, 2431, 2435];[61, 693, 711, 718, 2094, 2431, 2435];0
org.apache.commons.math3.stat.descriptive.summary.SumTest.testCopyConsistency;[61, 93, 117, 323, 718, 1830, 2094, 2411, 2431, 2435, 2485, 2512, 2601];[61, 93, 117, 323, 718, 1830, 2094, 2411, 2431, 2435, 2485, 2512, 2601];0
org.apache.commons.math3.stat.descriptive.summary.SumTest.testEqualsAndHashCode;[93, 98, 117, 1830, 2360, 2411, 2512, 2513, 2601];[93, 98, 117, 1830, 2360, 2411, 2512, 2513, 2601];0
org.apache.commons.math3.stat.descriptive.summary.SumTest.testEvaluateArraySegment;[693, 711, 718];[693, 711, 718];0
org.apache.commons.math3.stat.descriptive.summary.SumTest.testEvaluation;[693, 711, 718];[693, 711, 718];0
org.apache.commons.math3.stat.descriptive.summary.SumTest.testIncrementation;[718, 1830, 2360, 2411, 2485, 2601];[718, 1830, 2360, 2411, 2485, 2601];0
org.apache.commons.math3.stat.descriptive.summary.SumTest.testSerial;[93, 117, 2411, 2512, 2601];[93, 117, 2411, 2512, 2601];0
org.apache.commons.math3.stat.descriptive.summary.SumTest.testSerialization;[93, 98, 117, 1830, 2360, 2411, 2512, 2513, 2601];[93, 98, 117, 1830, 2360, 2411, 2512, 2513, 2601];0
org.apache.commons.math3.stat.descriptive.summary.SumTest.testSpecialValues;[1830, 2411];[1830, 2411];0
org.apache.commons.math3.stat.descriptive.summary.SumTest.testWeightedSum;[693, 718];[693, 718];0
org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest.testCopy;[18, 53, 61, 93, 117, 688, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2094, 2183, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2415, 2422, 2423, 2426, 2427, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2493, 2494, 2496, 2497, 2501, 2502, 2512, 2601, 2602, 2603, 2604, 2605];[18, 53, 61, 93, 117, 688, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2094, 2183, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2415, 2422, 2423, 2426, 2427, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2493, 2494, 2496, 2497, 2501, 2502, 2512, 2601, 2602, 2603, 2604, 2605];0
org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest.testEqualsAndHashCode;[18, 53, 93, 98, 117, 688, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2183, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2415, 2493, 2494, 2496, 2497, 2501, 2502, 2604, 2606];[18, 53, 93, 98, 117, 688, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2183, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2415, 2493, 2494, 2496, 2497, 2501, 2502, 2604, 2606];0
org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest.testGetSummary;[12, 18, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1852, 1853, 2183, 2367, 2411, 2415, 2420, 2421, 2437, 2439, 2440, 2443, 2445, 2592];[12, 18, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1852, 1853, 2183, 2367, 2411, 2415, 2420, 2421, 2437, 2439, 2440, 2443, 2445, 2592];0
org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest.testN0andN1Conditions;[12, 18, 53, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1852, 2183, 2367, 2493, 2497, 2501, 2502];[12, 18, 53, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1852, 2183, 2367, 2493, 2497, 2501, 2502];0
org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest.testNaNContracts;[18, 53, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1852, 1853, 2183, 2367, 2493, 2497, 2501, 2502];[18, 53, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1852, 1853, 2183, 2367, 2493, 2497, 2501, 2502];0
org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass;[18, 53, 711, 718, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1845, 2491, 2493, 2497, 2500, 2501, 2502, 2521, 2605, 2607];[18, 53, 711, 718, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1845, 2491, 2493, 2497, 2500, 2501, 2502, 2521, 2605, 2607];0
org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest.testOverrideMeanWithMathClass;[18, 691, 693, 711, 718, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1845, 2182, 2183, 2367, 2605, 2608];[18, 691, 693, 711, 718, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1845, 2182, 2183, 2367, 2605, 2608];0
org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest.testOverrideVarianceWithMathClass;[18, 681, 688, 691, 693, 718, 721, 728, 1712, 1713, 1714, 1715, 1828, 1829, 1830, 1834, 1835, 1838, 1845, 2605, 2609];[18, 681, 688, 691, 693, 718, 721, 728, 1712, 1713, 1714, 1715, 1828, 1829, 1830, 1834, 1835, 1838, 1845, 2605, 2609];0
org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest.testProductAndGeometricMean;[18, 53, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1845, 2493, 2497, 2501, 2502];[18, 53, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1845, 2493, 2497, 2501, 2502];0
org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest.testSerialization;[12, 18, 53, 93, 98, 117, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1852, 1853, 2183, 2367, 2411, 2415, 2420, 2421, 2437, 2439, 2440, 2443, 2445, 2493, 2494, 2496, 2497, 2501, 2502, 2592, 2604, 2606];[12, 18, 53, 93, 98, 117, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1852, 1853, 2183, 2367, 2411, 2415, 2420, 2421, 2437, 2439, 2440, 2443, 2445, 2493, 2494, 2496, 2497, 2501, 2502, 2592, 2604, 2606];0
org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest.testSetterIllegalState;[18, 70, 71, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1845, 2605, 2608];[18, 70, 71, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1845, 2605, 2608];0
org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest.testSetterInjection;[53, 688, 728, 1712, 1713, 1828, 1830, 1835, 1838, 1845, 2360, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2493, 2501, 2502, 2522, 2601, 2605, 2608, 2610, 2611, 2612, 2613];[53, 688, 728, 1712, 1713, 1828, 1830, 1835, 1838, 1845, 2360, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2493, 2501, 2502, 2522, 2601, 2605, 2608, 2610, 2611, 2612, 2613];0
org.apache.commons.math3.stat.descriptive.SummaryStatisticsTest.testStats;[12, 18, 688, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1852, 1853, 2183, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2415, 2494, 2496, 2498, 2499];[12, 18, 688, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1852, 1853, 2183, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2415, 2494, 2496, 2498, 2499];0
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest.test20090720;[669, 670, 2087, 2090, 2093, 2355, 2356, 2357, 2359, 2447, 2448, 2449, 2450];[669, 670, 2087, 2090, 2093, 2355, 2356, 2357, 2359, 2447, 2448, 2449, 2450];0
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest.testCopy;[61, 669, 670, 691, 693, 718, 2085, 2087, 2089, 2090, 2091, 2094, 2422, 2423, 2427, 2429, 2430, 2431, 2432, 2435, 2449, 2451, 2452, 2453, 2454, 2455, 2456, 2614, 2615, 2616, 2617];[61, 669, 670, 691, 693, 718, 2085, 2087, 2089, 2090, 2091, 2094, 2422, 2423, 2427, 2429, 2430, 2431, 2432, 2435, 2449, 2451, 2452, 2453, 2454, 2455, 2456, 2614, 2615, 2616, 2617];0
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest.testGetValues;[669, 670, 671, 691, 693, 718, 2085, 2087, 2089, 2090, 2091, 2093, 2449, 2457, 2458, 2459, 2460, 2614, 2615, 2617, 2618, 2619];[669, 670, 671, 691, 693, 718, 2085, 2087, 2089, 2090, 2091, 2093, 2449, 2457, 2458, 2459, 2460, 2614, 2615, 2617, 2618, 2619];0
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest.testPercentileSetter;[70, 71, 669, 670, 718, 2085, 2086, 2087, 2088, 2090, 2091, 2092, 2094, 2095, 2449, 2461, 2462, 2614, 2615, 2617];[70, 71, 669, 670, 718, 2085, 2086, 2087, 2088, 2090, 2091, 2092, 2094, 2095, 2449, 2461, 2462, 2614, 2615, 2617];0
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest.testRemoval;[93, 117, 669, 670, 691, 693, 718, 2085, 2087, 2089, 2090, 2091, 2093, 2355, 2356, 2357, 2359, 2447, 2448, 2449, 2450, 2463, 2464, 2465, 2466, 2467, 2614, 2615, 2617, 2620, 2621];[93, 117, 669, 670, 691, 693, 718, 2085, 2087, 2089, 2090, 2091, 2093, 2355, 2356, 2357, 2359, 2447, 2448, 2449, 2450, 2463, 2464, 2465, 2466, 2467, 2614, 2615, 2617, 2620, 2621];0
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest.testSetterInjection;[669, 670, 691, 693, 718, 2085, 2087, 2089, 2090, 2091, 2449, 2452, 2614, 2615, 2617];[669, 670, 691, 693, 718, 2085, 2087, 2089, 2090, 2091, 2449, 2452, 2614, 2615, 2617];0
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest.testShuffledStatistics;[12, 18, 46, 53, 669, 670, 681, 688, 691, 693, 718, 721, 728, 1712, 1713, 1714, 1715, 2085, 2087, 2089, 2090, 2091, 2093, 2358, 2412, 2413, 2414, 2416, 2417, 2449, 2452, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2495, 2500, 2503, 2614, 2615, 2617];[12, 18, 46, 53, 669, 670, 681, 688, 691, 693, 718, 721, 728, 1712, 1713, 1714, 1715, 2085, 2087, 2089, 2090, 2091, 2093, 2358, 2412, 2413, 2414, 2416, 2417, 2449, 2452, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2495, 2500, 2503, 2614, 2615, 2617];0
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest.testSummaryConsistency;[12, 18, 53, 669, 670, 671, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1852, 1853, 2085, 2087, 2089, 2090, 2091, 2093, 2183, 2354, 2355, 2356, 2358, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2447, 2448, 2449, 2450, 2459, 2489, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503];[12, 18, 53, 669, 670, 671, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1852, 1853, 2085, 2087, 2089, 2090, 2091, 2093, 2183, 2354, 2355, 2356, 2358, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2447, 2448, 2449, 2450, 2459, 2489, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503];0
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest.testToString;[12, 669, 670, 681, 688, 691, 693, 718, 721, 728, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2094, 2095, 2354, 2355, 2356, 2358, 2413, 2414, 2416, 2417, 2449, 2468, 2474, 2480, 2481, 2504, 2614, 2615, 2617, 2620, 2622, 2623];[12, 669, 670, 681, 688, 691, 693, 718, 721, 728, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2094, 2095, 2354, 2355, 2356, 2358, 2413, 2414, 2416, 2417, 2449, 2468, 2474, 2480, 2481, 2504, 2614, 2615, 2617, 2620, 2622, 2623];0
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatisticsTest.testWindowSize;[70, 71, 669, 670, 691, 693, 718, 2085, 2087, 2089, 2090, 2091, 2093, 2355, 2356, 2448, 2449, 2450, 2463, 2505, 2506, 2614, 2615, 2617, 2620, 2624];[70, 71, 669, 670, 691, 693, 718, 2085, 2087, 2089, 2090, 2091, 2093, 2355, 2356, 2448, 2449, 2450, 2463, 2505, 2506, 2614, 2615, 2617, 2620, 2624];0
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest.testDimension;[70, 71, 2551, 2552, 2625];[70, 71, 2551, 2552, 2625];0
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest.testEqualsAndHashCode;[18, 53, 93, 98, 117, 373, 384, 392, 396, 402, 405, 410, 688, 695, 732, 1204, 1713, 1828, 1830, 1834, 1838, 1845, 1849, 1853, 2180, 2182, 2183, 2184, 2360, 2361, 2362, 2363, 2364, 2366, 2411, 2493, 2496, 2497, 2501, 2521, 2529, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637];[18, 53, 93, 98, 117, 373, 384, 392, 396, 402, 405, 410, 688, 695, 732, 1204, 1713, 1828, 1830, 1834, 1838, 1845, 1849, 1853, 2180, 2182, 2183, 2184, 2360, 2361, 2362, 2363, 2364, 2366, 2411, 2493, 2496, 2497, 2501, 2521, 2529, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637];0
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest.testN0andN1Conditions;[12, 18, 53, 373, 384, 392, 396, 402, 405, 410, 695, 1713, 1828, 1830, 1834, 1838, 1845, 2180, 2182, 2183, 2184, 2493, 2497, 2501, 2521, 2551, 2552, 2553, 2559, 2564, 2565, 2567, 2625, 2629, 2632, 2634, 2638];[12, 18, 53, 373, 384, 392, 396, 402, 405, 410, 695, 1713, 1828, 1830, 1834, 1838, 1845, 2180, 2182, 2183, 2184, 2493, 2497, 2501, 2521, 2551, 2552, 2553, 2559, 2564, 2565, 2567, 2625, 2629, 2632, 2634, 2638];0
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest.testNaNContracts;[18, 53, 1713, 1828, 1830, 1834, 1838, 1845, 1853, 2182, 2183, 2184, 2493, 2497, 2501, 2521, 2551, 2552, 2553, 2555, 2559, 2564, 2565, 2567, 2625, 2626, 2629, 2632, 2634, 2638];[18, 53, 1713, 1828, 1830, 1834, 1838, 1845, 1853, 2182, 2183, 2184, 2493, 2497, 2501, 2521, 2551, 2552, 2553, 2555, 2559, 2564, 2565, 2567, 2625, 2626, 2629, 2632, 2634, 2638];0
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest.testSerialization;[18, 53, 93, 98, 117, 373, 384, 392, 396, 402, 405, 410, 695, 732, 1204, 1713, 1828, 1830, 1834, 1838, 1845, 1849, 1853, 2180, 2182, 2183, 2184, 2411, 2493, 2496, 2497, 2501, 2521, 2551, 2552, 2553, 2554, 2555, 2557, 2558, 2559, 2560, 2561, 2562, 2564, 2565, 2566, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2636, 2637];[18, 53, 93, 98, 117, 373, 384, 392, 396, 402, 405, 410, 695, 732, 1204, 1713, 1828, 1830, 1834, 1838, 1845, 1849, 1853, 2180, 2182, 2183, 2184, 2411, 2493, 2496, 2497, 2501, 2521, 2551, 2552, 2553, 2554, 2555, 2557, 2558, 2559, 2560, 2561, 2562, 2564, 2565, 2566, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2636, 2637];0
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest.testSetterIllegalState;[18, 70, 71, 1713, 1828, 1830, 1834, 1838, 1845, 2182, 2184, 2521, 2551, 2552, 2568, 2569, 2570, 2625, 2639];[18, 70, 71, 1713, 1828, 1830, 1834, 1838, 1845, 2182, 2184, 2521, 2551, 2552, 2568, 2569, 2570, 2625, 2639];0
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest.testSetterInjection;[18, 1713, 1828, 1830, 1834, 1838, 1845, 2182, 2183, 2184, 2360, 2361, 2362, 2363, 2364, 2366, 2521, 2551, 2552, 2556, 2559, 2563, 2564, 2568, 2569, 2570, 2571, 2625, 2629, 2635, 2639, 2640];[18, 1713, 1828, 1830, 1834, 1838, 1845, 2182, 2183, 2184, 2360, 2361, 2362, 2363, 2364, 2366, 2521, 2551, 2552, 2556, 2559, 2563, 2564, 2568, 2569, 2570, 2571, 2625, 2629, 2635, 2639, 2640];0
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest.testShuffledStatistics;[18, 53, 93, 117, 1713, 1828, 1830, 1834, 1838, 1845, 1849, 1853, 2182, 2183, 2184, 2411, 2493, 2496, 2497, 2501, 2521, 2551, 2552, 2553, 2555, 2557, 2558, 2559, 2561, 2562, 2564, 2568, 2569, 2570, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2625, 2626, 2627, 2628, 2629, 2631, 2632, 2633, 2639, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653];[18, 53, 93, 117, 1713, 1828, 1830, 1834, 1838, 1845, 1849, 1853, 2182, 2183, 2184, 2411, 2493, 2496, 2497, 2501, 2521, 2551, 2552, 2553, 2555, 2557, 2558, 2559, 2561, 2562, 2564, 2568, 2569, 2570, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2625, 2626, 2627, 2628, 2629, 2631, 2632, 2633, 2639, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653];0
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest.testStats;[12, 18, 53, 373, 384, 392, 396, 402, 405, 410, 688, 695, 1713, 1828, 1830, 1834, 1838, 1845, 1849, 1853, 2180, 2182, 2183, 2184, 2360, 2361, 2362, 2363, 2364, 2366, 2411, 2493, 2496, 2497, 2501, 2521, 2529, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2561, 2562, 2563, 2564, 2565, 2567, 2625, 2626, 2627, 2628, 2629, 2631, 2632, 2633, 2634, 2635, 2637, 2638];[12, 18, 53, 373, 384, 392, 396, 402, 405, 410, 688, 695, 1713, 1828, 1830, 1834, 1838, 1845, 1849, 1853, 2180, 2182, 2183, 2184, 2360, 2361, 2362, 2363, 2364, 2366, 2411, 2493, 2496, 2497, 2501, 2521, 2529, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2561, 2562, 2563, 2564, 2565, 2567, 2625, 2626, 2627, 2628, 2629, 2631, 2632, 2633, 2634, 2635, 2637, 2638];0
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest.testToString;[12, 18, 53, 373, 384, 392, 396, 402, 405, 410, 528, 695, 1226, 1227, 1713, 1828, 1830, 1834, 1838, 1845, 1849, 1853, 2180, 2182, 2183, 2184, 2493, 2496, 2497, 2501, 2521, 2551, 2552, 2553, 2554, 2555, 2558, 2559, 2561, 2562, 2564, 2565, 2567, 2585, 2586, 2625, 2626, 2628, 2629, 2631, 2632, 2633, 2634, 2637, 2638, 2654];[12, 18, 53, 373, 384, 392, 396, 402, 405, 410, 528, 695, 1226, 1227, 1713, 1828, 1830, 1834, 1838, 1845, 1849, 1853, 2180, 2182, 2183, 2184, 2493, 2496, 2497, 2501, 2521, 2551, 2552, 2553, 2554, 2555, 2558, 2559, 2561, 2562, 2564, 2565, 2567, 2585, 2586, 2625, 2626, 2628, 2629, 2631, 2632, 2633, 2634, 2637, 2638, 2654];0
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest.testCopy;[18, 53, 61, 93, 117, 688, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2094, 2183, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2415, 2422, 2423, 2426, 2427, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2493, 2494, 2496, 2497, 2501, 2502, 2512, 2601, 2602, 2603, 2604, 2605, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669];[18, 53, 61, 93, 117, 688, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2094, 2183, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2415, 2422, 2423, 2426, 2427, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2493, 2494, 2496, 2497, 2501, 2502, 2512, 2601, 2602, 2603, 2604, 2605, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669];0
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest.testEqualsAndHashCode;[18, 53, 93, 98, 117, 688, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2183, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2415, 2493, 2494, 2496, 2497, 2501, 2502, 2604, 2606, 2655, 2657, 2659, 2661, 2662, 2663, 2664, 2665, 2667, 2668, 2669, 2670];[18, 53, 93, 98, 117, 688, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1853, 2183, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2415, 2493, 2494, 2496, 2497, 2501, 2502, 2604, 2606, 2655, 2657, 2659, 2661, 2662, 2663, 2664, 2665, 2667, 2668, 2669, 2670];0
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest.testGetSummary;[12, 18, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1852, 1853, 2183, 2367, 2411, 2415, 2420, 2421, 2437, 2439, 2440, 2443, 2445, 2592, 2655, 2661, 2662, 2664, 2665, 2667, 2669, 2671, 2672];[12, 18, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1852, 1853, 2183, 2367, 2411, 2415, 2420, 2421, 2437, 2439, 2440, 2443, 2445, 2592, 2655, 2661, 2662, 2664, 2665, 2667, 2669, 2671, 2672];0
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest.testN0andN1Conditions;[12, 18, 53, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1852, 2183, 2367, 2493, 2497, 2501, 2502, 2655, 2659, 2661, 2664, 2669, 2672];[12, 18, 53, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1852, 2183, 2367, 2493, 2497, 2501, 2502, 2655, 2659, 2661, 2664, 2669, 2672];0
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest.testNaNContracts;[18, 53, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1852, 1853, 2183, 2367, 2493, 2497, 2501, 2502, 2655, 2659, 2661, 2664, 2665, 2669, 2672];[18, 53, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1852, 1853, 2183, 2367, 2493, 2497, 2501, 2502, 2655, 2659, 2661, 2664, 2665, 2669, 2672];0
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideGeoMeanWithMathClass;[18, 53, 711, 718, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1845, 2491, 2493, 2497, 2500, 2501, 2502, 2521, 2605, 2607];[18, 53, 711, 718, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1845, 2491, 2493, 2497, 2500, 2501, 2502, 2521, 2605, 2607];0
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideMeanWithMathClass;[18, 691, 693, 711, 718, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1845, 2182, 2183, 2367, 2605, 2608];[18, 691, 693, 711, 718, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1845, 2182, 2183, 2367, 2605, 2608];0
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideVarianceWithMathClass;[18, 681, 688, 691, 693, 718, 721, 728, 1712, 1713, 1714, 1715, 1828, 1829, 1830, 1834, 1835, 1838, 1845, 2605, 2609];[18, 681, 688, 691, 693, 718, 721, 728, 1712, 1713, 1714, 1715, 1828, 1829, 1830, 1834, 1835, 1838, 1845, 2605, 2609];0
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest.testProductAndGeometricMean;[18, 53, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1845, 2493, 2497, 2501, 2502, 2659, 2664];[18, 53, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1845, 2493, 2497, 2501, 2502, 2659, 2664];0
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest.testSerialization;[12, 18, 53, 93, 98, 117, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1852, 1853, 2183, 2367, 2411, 2415, 2420, 2421, 2437, 2439, 2440, 2443, 2445, 2493, 2494, 2496, 2497, 2501, 2502, 2592, 2604, 2606, 2655, 2657, 2659, 2661, 2662, 2663, 2664, 2665, 2667, 2669, 2670, 2671, 2672];[12, 18, 53, 93, 98, 117, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1852, 1853, 2183, 2367, 2411, 2415, 2420, 2421, 2437, 2439, 2440, 2443, 2445, 2493, 2494, 2496, 2497, 2501, 2502, 2592, 2604, 2606, 2655, 2657, 2659, 2661, 2662, 2663, 2664, 2665, 2667, 2669, 2670, 2671, 2672];0
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest.testSetterIllegalState;[18, 70, 71, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1845, 2605, 2608, 2664, 2673];[18, 70, 71, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1845, 2605, 2608, 2664, 2673];0
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest.testSetterInjection;[53, 688, 728, 1712, 1713, 1828, 1830, 1835, 1838, 1845, 2360, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2493, 2501, 2502, 2522, 2601, 2605, 2608, 2610, 2611, 2612, 2613, 2655, 2659, 2664, 2668, 2673, 2674];[53, 688, 728, 1712, 1713, 1828, 1830, 1835, 1838, 1845, 2360, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2493, 2501, 2502, 2522, 2601, 2605, 2608, 2610, 2611, 2612, 2613, 2655, 2659, 2664, 2668, 2673, 2674];0
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatisticsTest.testStats;[12, 18, 688, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1852, 1853, 2183, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2415, 2494, 2496, 2498, 2499, 2655, 2661, 2662, 2663, 2664, 2665, 2667, 2668, 2669, 2672, 2675];[12, 18, 688, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 1847, 1849, 1851, 1852, 1853, 2183, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2411, 2415, 2494, 2496, 2498, 2499, 2655, 2661, 2662, 2663, 2664, 2665, 2667, 2668, 2669, 2672, 2675];0
org.apache.commons.math3.stat.FrequencyTest.testAdd;[70, 71, 2281, 2282, 2284, 2676, 2677, 2678, 2679];[70, 71, 2281, 2282, 2284, 2676, 2677, 2678, 2679];0
org.apache.commons.math3.stat.FrequencyTest.testCounts;[2281, 2282, 2284, 2676, 2677, 2678, 2679, 2680, 2681];[2281, 2282, 2284, 2676, 2677, 2678, 2679, 2680, 2681];0
org.apache.commons.math3.stat.FrequencyTest.testEmptyTable;[2281, 2676, 2677, 2678, 2679];[2281, 2676, 2677, 2678, 2679];0
org.apache.commons.math3.stat.FrequencyTest.testGetUniqueCount;[2282, 2284, 2682];[2282, 2284, 2682];0
org.apache.commons.math3.stat.FrequencyTest.testIncrement;[2281, 2284, 2682];[2281, 2284, 2682];0
org.apache.commons.math3.stat.FrequencyTest.testIntegerValues;[2281, 2282, 2284, 2676, 2677, 2678, 2681];[2281, 2282, 2284, 2676, 2677, 2678, 2681];0
org.apache.commons.math3.stat.FrequencyTest.testMerge;[61, 2281, 2282, 2284, 2682, 2683, 2684];[61, 2281, 2282, 2284, 2682, 2683, 2684];0
org.apache.commons.math3.stat.FrequencyTest.testMergeCollection;[61, 2281, 2282, 2284, 2682, 2683, 2684];[61, 2281, 2282, 2284, 2682, 2683, 2684];0
org.apache.commons.math3.stat.FrequencyTest.testPcts;[2281, 2282, 2284, 2676, 2677, 2678, 2679, 2681];[2281, 2282, 2284, 2676, 2677, 2678, 2679, 2681];0
org.apache.commons.math3.stat.FrequencyTest.testSerial;[2282, 2284, 2685];[2282, 2284, 2685];0
org.apache.commons.math3.stat.FrequencyTest.testToString;[2281, 2282, 2284, 2676, 2677, 2678, 2679, 2681, 2686];[2281, 2282, 2284, 2676, 2677, 2678, 2679, 2681, 2686];0
org.apache.commons.math3.stat.inference.ChiSquareTestTest.testChiSquare;[12, 18, 46, 53, 70, 71, 93, 107, 108, 115, 627, 633, 757, 758, 2226, 2227, 2228, 2229, 2230, 2232];[12, 18, 46, 53, 70, 71, 93, 107, 108, 115, 627, 633, 757, 758, 2226, 2227, 2228, 2229, 2230, 2232];0
org.apache.commons.math3.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonBadCounts;[12, 18, 46, 53, 70, 71, 107, 108, 2230, 2687, 2688];[12, 18, 46, 53, 70, 71, 107, 108, 2230, 2687, 2688];0
org.apache.commons.math3.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonEqualCounts;[12, 18, 46, 53, 107, 108, 115, 633, 757, 2227, 2229, 2230, 2687, 2688];[12, 18, 46, 53, 107, 108, 115, 633, 757, 2227, 2229, 2230, 2687, 2688];0
org.apache.commons.math3.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonUnEqualCounts;[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2227, 2229, 2230, 2687, 2688];[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2227, 2229, 2230, 2687, 2688];0
org.apache.commons.math3.stat.inference.ChiSquareTestTest.testChiSquareIndependence;[12, 18, 46, 53, 61, 70, 71, 93, 107, 108, 115, 627, 633, 757, 758, 2226, 2227, 2229, 2230, 2232, 2689, 2690];[12, 18, 46, 53, 61, 70, 71, 93, 107, 108, 115, 627, 633, 757, 758, 2226, 2227, 2229, 2230, 2232, 2689, 2690];0
org.apache.commons.math3.stat.inference.ChiSquareTestTest.testChiSquareLargeTestStatistic;[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2226, 2227, 2228, 2229, 2230, 2232];[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2226, 2227, 2228, 2229, 2230, 2232];0
org.apache.commons.math3.stat.inference.ChiSquareTestTest.testChiSquareZeroCount;[12, 18, 46, 53, 61, 93, 107, 108, 115, 627, 633, 757, 758, 2226, 2227, 2229, 2230, 2232, 2689, 2690];[12, 18, 46, 53, 61, 93, 107, 108, 115, 627, 633, 757, 758, 2226, 2227, 2229, 2230, 2232, 2689, 2690];0
org.apache.commons.math3.stat.inference.GTestTest.testBadAlpha;[70, 71];[70, 71];0
org.apache.commons.math3.stat.inference.GTestTest.testGTestGoodnesOfFit1;[12, 18, 46, 53, 107, 108, 115, 633, 757, 2227, 2228, 2229, 2230, 2691];[12, 18, 46, 53, 107, 108, 115, 633, 757, 2227, 2228, 2229, 2230, 2691];0
org.apache.commons.math3.stat.inference.GTestTest.testGTestGoodnesOfFit2;[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2227, 2228, 2229, 2230, 2691];[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2227, 2228, 2229, 2230, 2691];0
org.apache.commons.math3.stat.inference.GTestTest.testGTestGoodnesOfFit3;[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2227, 2228, 2229, 2230, 2691];[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2227, 2228, 2229, 2230, 2691];0
org.apache.commons.math3.stat.inference.GTestTest.testGTestIndependance1;[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2227, 2229, 2230];[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2227, 2229, 2230];0
org.apache.commons.math3.stat.inference.GTestTest.testGTestIndependance2;[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2227, 2229, 2230];[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2227, 2229, 2230];0
org.apache.commons.math3.stat.inference.GTestTest.testGTestIndependance3;[12, 18, 46, 53, 107, 108, 115, 633, 757, 2227, 2229, 2230];[12, 18, 46, 53, 107, 108, 115, 633, 757, 2227, 2229, 2230];0
org.apache.commons.math3.stat.inference.GTestTest.testGTestSetsComparisonBadCounts;[12, 18, 46, 53, 70, 71, 107, 108, 2230];[12, 18, 46, 53, 70, 71, 107, 108, 2230];0
org.apache.commons.math3.stat.inference.GTestTest.testNegativeObservedCounts;[12, 18, 46, 53, 70, 71, 107, 108, 2228, 2230, 2691];[12, 18, 46, 53, 70, 71, 107, 108, 2228, 2230, 2691];0
org.apache.commons.math3.stat.inference.GTestTest.testRootLogLikelihood;[12, 2230];[12, 2230];0
org.apache.commons.math3.stat.inference.GTestTest.testScaling;[12, 18, 46, 53, 107, 108, 115, 633, 757, 2227, 2228, 2229, 2230, 2691];[12, 18, 46, 53, 107, 108, 115, 633, 757, 2227, 2228, 2229, 2230, 2691];0
org.apache.commons.math3.stat.inference.GTestTest.testUnmatchedArrays;[12, 18, 46, 53, 70, 71, 107, 108, 2691];[12, 18, 46, 53, 70, 71, 107, 108, 2691];0
org.apache.commons.math3.stat.inference.GTestTest.testZeroExpectedCounts;[12, 18, 46, 53, 70, 71, 107, 108, 2228, 2691];[12, 18, 46, 53, 70, 71, 107, 108, 2228, 2691];0
org.apache.commons.math3.stat.inference.MannWhitneyUTestTest.testBigDataSet;[12, 18, 53, 107, 108, 115, 633, 757, 2198, 2397, 2400, 2692, 2693, 2694, 2695, 2696, 2697, 2698];[12, 18, 53, 107, 108, 115, 633, 757, 2198, 2397, 2400, 2692, 2693, 2694, 2695, 2696, 2697, 2698];0
org.apache.commons.math3.stat.inference.MannWhitneyUTestTest.testMannWhitneyUInputValidation;[70, 71, 2693, 2694];[70, 71, 2693, 2694];0
org.apache.commons.math3.stat.inference.MannWhitneyUTestTest.testMannWhitneyUSimple;[12, 18, 53, 107, 108, 115, 633, 757, 2198, 2397, 2400, 2692, 2693, 2694, 2695, 2696, 2697, 2698];[12, 18, 53, 107, 108, 115, 633, 757, 2198, 2397, 2400, 2692, 2693, 2694, 2695, 2696, 2697, 2698];0
org.apache.commons.math3.stat.inference.OneWayAnovaTest.testAnovaFValue;[18, 61, 70, 71, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 2411, 2415, 2494, 2496, 2699, 2700];[18, 61, 70, 71, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 2411, 2415, 2494, 2496, 2699, 2700];0
org.apache.commons.math3.stat.inference.OneWayAnovaTest.testAnovaPValue;[18, 53, 61, 93, 107, 108, 115, 623, 625, 627, 633, 634, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 2265, 2411, 2415, 2494, 2496, 2700, 2701];[18, 53, 61, 93, 107, 108, 115, 623, 625, 627, 633, 634, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 2265, 2411, 2415, 2494, 2496, 2700, 2701];0
org.apache.commons.math3.stat.inference.OneWayAnovaTest.testAnovaPValueSummaryStatistics;[18, 53, 61, 93, 107, 108, 115, 623, 625, 627, 633, 634, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 2265, 2411, 2415, 2494, 2496, 2700, 2701];[18, 53, 61, 93, 107, 108, 115, 623, 625, 627, 633, 634, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 2265, 2411, 2415, 2494, 2496, 2700, 2701];0
org.apache.commons.math3.stat.inference.OneWayAnovaTest.testAnovaTest;[18, 53, 61, 93, 107, 108, 115, 623, 625, 627, 633, 634, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 2265, 2411, 2415, 2494, 2496, 2700, 2701, 2702];[18, 53, 61, 93, 107, 108, 115, 623, 625, 627, 633, 634, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 2265, 2411, 2415, 2494, 2496, 2700, 2701, 2702];0
org.apache.commons.math3.stat.inference.TestUtilsTest.testChiSquare;[12, 18, 46, 53, 70, 71, 93, 107, 108, 115, 627, 633, 757, 758, 2226, 2227, 2228, 2229, 2230, 2232, 2703, 2704];[12, 18, 46, 53, 70, 71, 93, 107, 108, 115, 627, 633, 757, 758, 2226, 2227, 2228, 2229, 2230, 2232, 2703, 2704];0
org.apache.commons.math3.stat.inference.TestUtilsTest.testChiSquareIndependence;[12, 18, 46, 53, 61, 70, 71, 93, 107, 108, 115, 627, 633, 757, 758, 2226, 2227, 2229, 2230, 2232, 2689, 2690, 2703, 2704];[12, 18, 46, 53, 61, 70, 71, 93, 107, 108, 115, 627, 633, 757, 758, 2226, 2227, 2229, 2230, 2232, 2689, 2690, 2703, 2704];0
org.apache.commons.math3.stat.inference.TestUtilsTest.testChiSquareLargeTestStatistic;[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2226, 2227, 2228, 2229, 2230, 2232, 2704];[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2226, 2227, 2228, 2229, 2230, 2232, 2704];0
org.apache.commons.math3.stat.inference.TestUtilsTest.testChiSquareZeroCount;[12, 18, 46, 53, 61, 93, 107, 108, 115, 627, 633, 757, 758, 2226, 2227, 2229, 2230, 2232, 2689, 2690, 2703, 2704];[12, 18, 46, 53, 61, 93, 107, 108, 115, 627, 633, 757, 758, 2226, 2227, 2229, 2230, 2232, 2689, 2690, 2703, 2704];0
org.apache.commons.math3.stat.inference.TestUtilsTest.testGTestGoodnesOfFit;[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2227, 2228, 2229, 2230, 2691, 2705, 2706];[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2227, 2228, 2229, 2230, 2691, 2705, 2706];0
org.apache.commons.math3.stat.inference.TestUtilsTest.testGTestIndependance;[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2227, 2229, 2230, 2707, 2708];[12, 18, 46, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2227, 2229, 2230, 2707, 2708];0
org.apache.commons.math3.stat.inference.TestUtilsTest.testOneSampleT;[12, 18, 53, 70, 71, 93, 107, 108, 623, 627, 634, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 2183, 2201, 2202, 2323, 2367, 2709, 2710, 2711, 2712];[12, 18, 53, 70, 71, 93, 107, 108, 623, 627, 634, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 2183, 2201, 2202, 2323, 2367, 2709, 2710, 2711, 2712];0
org.apache.commons.math3.stat.inference.TestUtilsTest.testOneSampleTTest;[12, 18, 53, 70, 71, 93, 107, 108, 623, 627, 634, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 2183, 2201, 2202, 2323, 2367, 2709, 2710, 2711, 2712];[12, 18, 53, 70, 71, 93, 107, 108, 623, 627, 634, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 2183, 2201, 2202, 2323, 2367, 2709, 2710, 2711, 2712];0
org.apache.commons.math3.stat.inference.TestUtilsTest.testOneWayAnovaUtils;[18, 53, 61, 93, 107, 108, 115, 623, 625, 627, 633, 634, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 2265, 2411, 2415, 2494, 2496, 2699, 2700, 2701, 2702, 2713, 2714, 2715];[18, 53, 61, 93, 107, 108, 115, 623, 625, 627, 633, 634, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1842, 1845, 2265, 2411, 2415, 2494, 2496, 2699, 2700, 2701, 2702, 2713, 2714, 2715];0
org.apache.commons.math3.stat.inference.TestUtilsTest.testPaired;[12, 18, 53, 93, 107, 108, 623, 627, 634, 2323, 2716, 2717, 2718, 2719, 2720, 2721, 2722];[12, 18, 53, 93, 107, 108, 623, 627, 634, 2323, 2716, 2717, 2718, 2719, 2720, 2721, 2722];0
org.apache.commons.math3.stat.inference.TestUtilsTest.testRootLogLikelihood;[12, 2230, 2723];[12, 2230, 2723];0
org.apache.commons.math3.stat.inference.TestUtilsTest.testSmallSamples;[12, 18, 53, 93, 107, 108, 623, 627, 634, 681, 688, 691, 693, 711, 718, 721, 728, 2201, 2202, 2323, 2709, 2710, 2711, 2712, 2724];[12, 18, 53, 93, 107, 108, 623, 627, 634, 681, 688, 691, 693, 711, 718, 721, 728, 2201, 2202, 2323, 2709, 2710, 2711, 2712, 2724];0
org.apache.commons.math3.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic;[12, 18, 53, 70, 71, 93, 107, 108, 623, 627, 634, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 2183, 2201, 2202, 2323, 2367, 2709, 2710, 2711, 2712, 2724];[12, 18, 53, 70, 71, 93, 107, 108, 623, 627, 634, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 2183, 2201, 2202, 2323, 2367, 2709, 2710, 2711, 2712, 2724];0
org.apache.commons.math3.stat.inference.TestUtilsTest.testTwoSampleTHomoscedastic;[12, 18, 53, 93, 107, 108, 623, 627, 634, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 2183, 2201, 2202, 2323, 2367, 2725, 2726, 2727, 2728];[12, 18, 53, 93, 107, 108, 623, 627, 634, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 2183, 2201, 2202, 2323, 2367, 2725, 2726, 2727, 2728];0
org.apache.commons.math3.stat.inference.TTestTest.testOneSampleT;[12, 18, 53, 70, 71, 93, 107, 108, 623, 627, 634, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 2183, 2201, 2202, 2323, 2367, 2711, 2712];[12, 18, 53, 70, 71, 93, 107, 108, 623, 627, 634, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 2183, 2201, 2202, 2323, 2367, 2711, 2712];0
org.apache.commons.math3.stat.inference.TTestTest.testOneSampleTTest;[12, 18, 53, 70, 71, 93, 107, 108, 623, 627, 634, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 2183, 2201, 2202, 2323, 2367, 2711, 2712];[12, 18, 53, 70, 71, 93, 107, 108, 623, 627, 634, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 2183, 2201, 2202, 2323, 2367, 2711, 2712];0
org.apache.commons.math3.stat.inference.TTestTest.testPaired;[12, 18, 53, 93, 107, 108, 623, 627, 634, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1845, 2323, 2716, 2717, 2718, 2719, 2722];[12, 18, 53, 93, 107, 108, 623, 627, 634, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1845, 2323, 2716, 2717, 2718, 2719, 2722];0
org.apache.commons.math3.stat.inference.TTestTest.testSmallSamples;[12, 18, 53, 93, 107, 108, 623, 627, 634, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1845, 2201, 2202, 2323, 2711, 2712, 2724];[12, 18, 53, 93, 107, 108, 623, 627, 634, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1828, 1830, 1834, 1835, 1838, 1845, 2201, 2202, 2323, 2711, 2712, 2724];0
org.apache.commons.math3.stat.inference.TTestTest.testTwoSampleTHeterscedastic;[12, 18, 53, 70, 71, 93, 107, 108, 623, 627, 634, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 2183, 2201, 2202, 2323, 2367, 2711, 2712, 2724];[12, 18, 53, 70, 71, 93, 107, 108, 623, 627, 634, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 2183, 2201, 2202, 2323, 2367, 2711, 2712, 2724];0
org.apache.commons.math3.stat.inference.TTestTest.testTwoSampleTHomoscedastic;[12, 18, 53, 93, 107, 108, 623, 627, 634, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 2183, 2201, 2202, 2323, 2367, 2726, 2728];[12, 18, 53, 93, 107, 108, 623, 627, 634, 681, 688, 691, 693, 711, 718, 721, 728, 1712, 1713, 1714, 1828, 1829, 1830, 1834, 1835, 1838, 1842, 1845, 2183, 2201, 2202, 2323, 2367, 2726, 2728];0
org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest.testWilcoxonSignedRankInputValidation;[70, 71, 2397, 2400, 2403, 2404, 2697, 2729, 2730, 2731, 2732, 2733];[70, 71, 2397, 2400, 2403, 2404, 2697, 2729, 2730, 2731, 2732, 2733];0
org.apache.commons.math3.stat.inference.WilcoxonSignedRankTestTest.testWilcoxonSignedRankSimple;[12, 18, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2198, 2397, 2400, 2696, 2697, 2729, 2730, 2731, 2732, 2733, 2734, 2735];[12, 18, 53, 93, 107, 108, 115, 627, 633, 757, 758, 2198, 2397, 2400, 2696, 2697, 2729, 2730, 2731, 2732, 2733, 2734, 2735];0
org.apache.commons.math3.stat.ranking.NaturalRankingTest.testDefault;[70, 71, 93, 117, 2397, 2400, 2403, 2404];[70, 71, 93, 117, 2397, 2400, 2403, 2404];0
org.apache.commons.math3.stat.ranking.NaturalRankingTest.testNaNsAndInfs;[93, 117, 2397, 2403, 2404, 2736];[93, 117, 2397, 2403, 2404, 2736];0
org.apache.commons.math3.stat.ranking.NaturalRankingTest.testNaNsFailed;[70, 71, 2397, 2400];[70, 71, 2397, 2400];0
org.apache.commons.math3.stat.ranking.NaturalRankingTest.testNaNsFixedTiesRandom;[93, 117, 653, 2224, 2397, 2400, 2403, 2697, 2737];[93, 117, 653, 2224, 2397, 2400, 2403, 2697, 2737];0
org.apache.commons.math3.stat.ranking.NaturalRankingTest.testNaNsMaximalTiesMinimum;[93, 117, 2397, 2403, 2404, 2736];[93, 117, 2397, 2403, 2404, 2736];0
org.apache.commons.math3.stat.ranking.NaturalRankingTest.testNaNsMinimalTiesAverage;[93, 117, 2397, 2403, 2404, 2736];[93, 117, 2397, 2403, 2404, 2736];0
org.apache.commons.math3.stat.ranking.NaturalRankingTest.testNaNsMinimalTiesMaximum;[93, 117, 2397, 2403, 2404, 2736];[93, 117, 2397, 2403, 2404, 2736];0
org.apache.commons.math3.stat.ranking.NaturalRankingTest.testNaNsRemovedTiesSequential;[93, 117, 2397, 2403, 2405, 2408];[93, 117, 2397, 2403, 2405, 2408];0
org.apache.commons.math3.stat.ranking.NaturalRankingTest.testNoNaNsFailed;[93, 117, 2397, 2400];[93, 117, 2397, 2400];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.canEstimateRegressandVariance;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.canEstimateRegressionParameters;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.canEstimateRegressionParametersVariance;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.canEstimateResiduals;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.cannotAddCovarianceDataThatIsNotSquare;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.cannotAddCovarianceDataWithSampleSizeMismatch;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.cannotAddNullCovarianceData;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.cannotAddNullYSampleData;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.cannotAddSampleDataWithSizeMismatch;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.cannotAddXSampleData;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.notEnoughData;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.testGLSEfficiency;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.testGLSOLSConsistency;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.testNewSample;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.testNewSample2;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.testNewSampleInsufficientData;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.testNewSampleInvalidData;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.testNewSampleNullData;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.testXSampleDataNull;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.testYSampleDataNull;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegressionTest.testYVariance;[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];[61, 390, 425, 2738, 2739, 2740, 2741, 2742, 2743];0
org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testAddObsGetNClear;[2744, 2745, 2746, 2747, 2748, 2749];[2744, 2745, 2746, 2747, 2748, 2749];0
org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testFilippelli;[12, 93, 117, 2744, 2745, 2747, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761];[12, 93, 117, 2744, 2745, 2747, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761];0
org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testHasIntercept;[2762];[2762];0
org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testHdiag;[12, 61, 355, 372, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 422, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 818, 1389, 1547, 1548, 1549, 1876, 2738, 2739, 2740, 2744, 2745, 2747, 2749, 2763, 2764, 2765, 2766, 2767];[12, 61, 355, 372, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 422, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 818, 1389, 1547, 1548, 1549, 1876, 2738, 2739, 2740, 2744, 2745, 2747, 2749, 2763, 2764, 2765, 2766, 2767];0
org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testHdiagConstant;[12, 61, 355, 372, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 422, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 818, 1389, 1547, 1548, 1549, 1876, 2738, 2739, 2740, 2744, 2745, 2747, 2749, 2763, 2764, 2765, 2766, 2767];[12, 61, 355, 372, 373, 378, 383, 384, 390, 392, 396, 402, 404, 405, 410, 414, 417, 422, 425, 430, 431, 677, 679, 685, 695, 706, 709, 715, 724, 725, 818, 1389, 1547, 1548, 1549, 1876, 2738, 2739, 2740, 2744, 2745, 2747, 2749, 2763, 2764, 2765, 2766, 2767];0
org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testLongly;[12, 93, 117, 2744, 2745, 2747, 2750, 2751, 2753, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2768];[12, 93, 117, 2744, 2745, 2747, 2750, 2751, 2753, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2768];0
org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testNegativeTestAddMultipleObs;[70, 71, 2749];[70, 71, 2749];0
org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testNegativeTestAddObs;[70, 71, 2744, 2745, 2747];[70, 71, 2744, 2745, 2747];0
org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testOneRedundantColumn;[12, 2744, 2745, 2747, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2768, 2769];[12, 2744, 2745, 2747, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2768, 2769];0
org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testPCorr;[12, 373, 378, 383, 402, 404, 405, 414, 422, 431, 676, 687, 818, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2744, 2745, 2747, 2749, 2770];[12, 373, 378, 383, 402, 404, 405, 414, 422, 431, 676, 687, 818, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2744, 2745, 2747, 2749, 2770];0
org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testRegressAirlineConstantExternal;[12, 93, 117, 2744, 2745, 2747, 2749, 2750, 2751, 2753, 2754, 2755, 2756, 2758, 2759, 2760, 2761];[12, 93, 117, 2744, 2745, 2747, 2749, 2750, 2751, 2753, 2754, 2755, 2756, 2758, 2759, 2760, 2761];0
org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testRegressAirlineConstantInternal;[12, 93, 117, 2744, 2745, 2747, 2749, 2750, 2751, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761];[12, 93, 117, 2744, 2745, 2747, 2749, 2750, 2751, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761];0
org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testSubsetRegression;[12, 93, 117, 2744, 2745, 2747, 2749, 2750, 2751, 2753, 2755, 2756, 2758, 2759, 2760, 2761];[12, 93, 117, 2744, 2745, 2747, 2749, 2750, 2751, 2753, 2755, 2756, 2758, 2759, 2760, 2761];0
org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testThreeRedundantColumn;[12, 2744, 2745, 2747, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2768, 2769];[12, 2744, 2745, 2747, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2768, 2769];0
org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testWampler1;[12, 93, 117, 2744, 2745, 2747, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761];[12, 93, 117, 2744, 2745, 2747, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761];0
org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testWampler2;[12, 93, 117, 2744, 2745, 2747, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761];[12, 93, 117, 2744, 2745, 2747, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761];0
org.apache.commons.math3.stat.regression.MillerUpdatingRegressionTest.testWampler3;[12, 93, 117, 2744, 2745, 2747, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761];[12, 93, 117, 2744, 2745, 2747, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.canEstimateRegressandVariance;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.canEstimateRegressionParameters;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.canEstimateRegressionParametersVariance;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.canEstimateResiduals;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.cannotAddSampleDataWithSizeMismatch;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.testHat;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.testLongly;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.testNewSample;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.testNewSample2;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.testNewSampleDataXNull;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.testNewSampleDataYNull;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.testNewSampleInsufficientData;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.testNewSampleInvalidData;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.testNewSampleNullData;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.testPerfectFit;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.testSwissFertility;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.testWampler1;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.testWampler2;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.testWampler3;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.testWampler4;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.testXSampleDataNull;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.testYSampleDataNull;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegressionTest.testYVariance;[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];[12, 355, 373, 392, 396, 402, 405, 430, 677, 679, 685, 695, 706, 709, 715, 724, 725, 2738, 2739, 2740, 2764, 2766, 2767];0
org.apache.commons.math3.stat.regression.SimpleRegressionTest.testClear;[2388, 2389, 2390, 2391, 2771, 2772];[2388, 2389, 2390, 2391, 2771, 2772];0
org.apache.commons.math3.stat.regression.SimpleRegressionTest.testCorr;[12, 2382, 2386, 2388, 2389, 2390, 2391, 2772];[12, 2382, 2386, 2388, 2389, 2390, 2391, 2772];0
org.apache.commons.math3.stat.regression.SimpleRegressionTest.testInference;[12, 18, 53, 61, 70, 71, 93, 107, 108, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 623, 627, 631, 634, 2323, 2325, 2382, 2389, 2390, 2773, 2774, 2775, 2776, 2777];[12, 18, 53, 61, 70, 71, 93, 107, 108, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 623, 627, 631, 634, 2323, 2325, 2382, 2389, 2390, 2773, 2774, 2775, 2776, 2777];0
org.apache.commons.math3.stat.regression.SimpleRegressionTest.testNaNs;[12, 2382, 2386, 2388, 2389, 2390, 2391, 2773, 2774, 2777, 2778, 2779, 2780];[12, 2382, 2386, 2388, 2389, 2390, 2391, 2773, 2774, 2777, 2778, 2779, 2780];0
org.apache.commons.math3.stat.regression.SimpleRegressionTest.testNoInterceot_noint2;[12, 2382, 2388, 2389, 2390, 2391, 2772, 2773, 2777, 2778, 2780];[12, 2382, 2388, 2389, 2390, 2391, 2772, 2773, 2777, 2778, 2780];0
org.apache.commons.math3.stat.regression.SimpleRegressionTest.testNoIntercept_noint1;[12, 2382, 2388, 2389, 2390, 2391, 2772, 2773, 2777, 2778, 2780];[12, 2382, 2388, 2389, 2390, 2391, 2772, 2773, 2777, 2778, 2780];0
org.apache.commons.math3.stat.regression.SimpleRegressionTest.testNorris;[12, 2382, 2388, 2389, 2390, 2391, 2772, 2773, 2774, 2777, 2778, 2779, 2780];[12, 2382, 2388, 2389, 2390, 2391, 2772, 2773, 2774, 2777, 2778, 2779, 2780];0
org.apache.commons.math3.stat.regression.SimpleRegressionTest.testPerfect;[12, 18, 53, 93, 107, 108, 115, 623, 627, 633, 634, 2243, 2244, 2323, 2382, 2389, 2390, 2773, 2776, 2777];[12, 18, 53, 93, 107, 108, 115, 623, 627, 633, 634, 2243, 2244, 2323, 2382, 2389, 2390, 2773, 2776, 2777];0
org.apache.commons.math3.stat.regression.SimpleRegressionTest.testPerfectNegative;[12, 18, 53, 93, 107, 108, 115, 623, 627, 633, 634, 2243, 2244, 2323, 2382, 2389, 2390, 2773, 2776, 2777];[12, 18, 53, 93, 107, 108, 115, 623, 627, 633, 634, 2243, 2244, 2323, 2382, 2389, 2390, 2773, 2776, 2777];0
org.apache.commons.math3.stat.regression.SimpleRegressionTest.testRandom;[12, 18, 53, 93, 107, 108, 115, 623, 627, 633, 634, 2243, 2244, 2323, 2382, 2389, 2390, 2773, 2776, 2777];[12, 18, 53, 93, 107, 108, 115, 623, 627, 633, 634, 2243, 2244, 2323, 2382, 2389, 2390, 2773, 2776, 2777];0
org.apache.commons.math3.stat.regression.SimpleRegressionTest.testRegressExceptions;[70, 71, 2389, 2781];[70, 71, 2389, 2781];0
org.apache.commons.math3.stat.regression.SimpleRegressionTest.testRegressIfaceMethod;[12, 2382, 2388, 2389, 2390, 2391, 2752, 2754, 2757, 2759, 2772, 2773, 2774, 2777, 2778, 2780, 2781, 2782, 2783, 2784, 2785, 2786];[12, 2382, 2388, 2389, 2390, 2391, 2752, 2754, 2757, 2759, 2772, 2773, 2774, 2777, 2778, 2780, 2781, 2782, 2783, 2784, 2785, 2786];0
org.apache.commons.math3.stat.regression.SimpleRegressionTest.testRemoveMultiple;[12, 18, 53, 61, 93, 107, 108, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 623, 627, 631, 634, 2323, 2325, 2382, 2389, 2390, 2773, 2774, 2775, 2776, 2777, 2787];[12, 18, 53, 61, 93, 107, 108, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 623, 627, 631, 634, 2323, 2325, 2382, 2389, 2390, 2773, 2774, 2775, 2776, 2777, 2787];0
org.apache.commons.math3.stat.regression.SimpleRegressionTest.testRemoveMultiplePastEmpty;[2389, 2772, 2787];[2389, 2772, 2787];0
org.apache.commons.math3.stat.regression.SimpleRegressionTest.testRemoveMultipleToEmpty;[2389, 2772, 2787];[2389, 2772, 2787];0
org.apache.commons.math3.stat.regression.SimpleRegressionTest.testRemoveObsFromEmpty;[2772, 2787];[2772, 2787];0
org.apache.commons.math3.stat.regression.SimpleRegressionTest.testRemoveObsFromSingle;[2389, 2772, 2787];[2389, 2772, 2787];0
org.apache.commons.math3.stat.regression.SimpleRegressionTest.testRemoveSingle;[12, 18, 53, 61, 93, 107, 108, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 623, 627, 631, 634, 2323, 2325, 2382, 2389, 2390, 2773, 2774, 2775, 2776, 2777, 2787];[12, 18, 53, 61, 93, 107, 108, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 623, 627, 631, 634, 2323, 2325, 2382, 2389, 2390, 2773, 2774, 2775, 2776, 2777, 2787];0
org.apache.commons.math3.stat.regression.SimpleRegressionTest.testRemoveXY;[12, 18, 53, 61, 93, 107, 108, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 623, 627, 631, 634, 2323, 2325, 2382, 2389, 2390, 2773, 2774, 2775, 2776, 2777, 2787];[12, 18, 53, 61, 93, 107, 108, 246, 250, 252, 255, 467, 468, 469, 471, 473, 474, 475, 478, 480, 481, 483, 486, 491, 492, 521, 623, 627, 631, 634, 2323, 2325, 2382, 2389, 2390, 2773, 2774, 2775, 2776, 2777, 2787];0
org.apache.commons.math3.stat.regression.SimpleRegressionTest.testSSENonNegative;[2389, 2390];[2389, 2390];0
org.apache.commons.math3.stat.StatUtilsTest.testArrayIndexConditions;[70, 71, 693, 718, 2788];[70, 71, 693, 718, 2788];0
org.apache.commons.math3.stat.StatUtilsTest.testDifferenceStats;[70, 71, 681, 688, 691, 693, 711, 718, 721, 728, 2201, 2202, 2717, 2719, 2722, 2788];[70, 71, 681, 688, 691, 693, 711, 718, 721, 728, 2201, 2202, 2717, 2719, 2722, 2788];0
org.apache.commons.math3.stat.StatUtilsTest.testGeometricMean;[18, 53, 70, 71, 711, 718, 2491, 2500, 2789, 2790];[18, 53, 70, 71, 711, 718, 2491, 2500, 2789, 2790];0
org.apache.commons.math3.stat.StatUtilsTest.testMax;[70, 71, 711, 718, 2417, 2791];[70, 71, 711, 718, 2417, 2791];0
org.apache.commons.math3.stat.StatUtilsTest.testMean;[70, 71, 691, 693, 718, 2202];[70, 71, 691, 693, 718, 2202];0
org.apache.commons.math3.stat.StatUtilsTest.testMin;[70, 71, 711, 718, 2416, 2792];[70, 71, 711, 718, 2416, 2792];0
org.apache.commons.math3.stat.StatUtilsTest.testN0andN1Conditions;[681, 688, 691, 693, 711, 718, 721, 728, 2201, 2202];[681, 688, 691, 693, 711, 718, 721, 728, 2201, 2202];0
org.apache.commons.math3.stat.StatUtilsTest.testNormalize1;[12, 93, 669, 670, 681, 688, 691, 693, 718, 721, 728, 2085, 2087, 2089, 2090, 2091, 2354, 2355, 2356, 2358, 2793];[12, 93, 669, 670, 681, 688, 691, 693, 718, 721, 728, 2085, 2087, 2089, 2090, 2091, 2354, 2355, 2356, 2358, 2793];0
org.apache.commons.math3.stat.StatUtilsTest.testNormalize2;[12, 669, 670, 681, 688, 691, 693, 718, 721, 728, 2085, 2087, 2089, 2090, 2091, 2093, 2354, 2355, 2356, 2358, 2793];[12, 669, 670, 681, 688, 691, 693, 718, 721, 728, 2085, 2087, 2089, 2090, 2091, 2093, 2354, 2355, 2356, 2358, 2793];0
org.apache.commons.math3.stat.StatUtilsTest.testPercentile;[70, 71, 718, 2086, 2088, 2094, 2095, 2794];[70, 71, 718, 2086, 2088, 2094, 2095, 2794];0
org.apache.commons.math3.stat.StatUtilsTest.testPopulationVariance;[70, 71, 681, 688, 691, 693, 718, 721, 728, 2201, 2795];[70, 71, 681, 688, 691, 693, 718, 721, 728, 2201, 2795];0
org.apache.commons.math3.stat.StatUtilsTest.testProduct;[70, 71, 711, 718, 2594, 2796];[70, 71, 711, 718, 2594, 2796];0
org.apache.commons.math3.stat.StatUtilsTest.testStats;[681, 688, 691, 693, 711, 718, 721, 728, 2201, 2202, 2416, 2417, 2495, 2788, 2791, 2792, 2797];[681, 688, 691, 693, 711, 718, 721, 728, 2201, 2202, 2416, 2417, 2495, 2788, 2791, 2792, 2797];0
org.apache.commons.math3.stat.StatUtilsTest.testSumLog;[18, 70, 71, 711, 718, 2500, 2790];[18, 70, 71, 711, 718, 2500, 2790];0
org.apache.commons.math3.stat.StatUtilsTest.testSumSq;[70, 71, 711, 718, 2495, 2797];[70, 71, 711, 718, 2495, 2797];0
org.apache.commons.math3.stat.StatUtilsTest.testVariance;[70, 71, 681, 688, 691, 693, 718, 721, 728, 2201];[70, 71, 681, 688, 691, 693, 718, 721, 728, 2201];0
org.apache.commons.math3.transform.FastCosineTransformerTest.testAdHocData[0];[12, 76, 77, 78, 79, 80, 81, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805];[12, 76, 77, 78, 79, 80, 81, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805];0
org.apache.commons.math3.transform.FastCosineTransformerTest.testAdHocData[1];[12, 76, 77, 78, 79, 80, 81, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805];[12, 76, 77, 78, 79, 80, 81, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805];0
org.apache.commons.math3.transform.FastCosineTransformerTest.testParameters[0];[70, 71, 77, 78, 80, 81, 147, 224, 2798, 2805];[70, 71, 77, 78, 80, 81, 147, 224, 2798, 2805];0
org.apache.commons.math3.transform.FastCosineTransformerTest.testParameters[1];[70, 71, 77, 78, 80, 81, 147, 224, 2798, 2805];[70, 71, 77, 78, 80, 81, 147, 224, 2798, 2805];0
org.apache.commons.math3.transform.FastCosineTransformerTest.testSinFunction[0];[76, 77, 78, 79, 80, 81, 147, 224, 2798, 2799, 2800, 2802, 2803, 2804, 2805];[76, 77, 78, 79, 80, 81, 147, 224, 2798, 2799, 2800, 2802, 2803, 2804, 2805];0
org.apache.commons.math3.transform.FastCosineTransformerTest.testSinFunction[1];[76, 77, 78, 79, 80, 81, 147, 224, 2798, 2799, 2800, 2802, 2803, 2804, 2805];[76, 77, 78, 79, 80, 81, 147, 224, 2798, 2799, 2800, 2802, 2803, 2804, 2805];0
org.apache.commons.math3.transform.FastCosineTransformerTest.testTransformFunctionInvalidBounds[0];[70, 71, 224, 2798];[70, 71, 224, 2798];0
org.apache.commons.math3.transform.FastCosineTransformerTest.testTransformFunctionInvalidBounds[1];[70, 71, 224, 2798];[70, 71, 224, 2798];0
org.apache.commons.math3.transform.FastCosineTransformerTest.testTransformFunctionInvalidDataSize[0];[70, 71, 76, 77, 78, 80, 81, 155, 224, 2798, 2805];[70, 71, 76, 77, 78, 80, 81, 155, 224, 2798, 2805];0
org.apache.commons.math3.transform.FastCosineTransformerTest.testTransformFunctionInvalidDataSize[1];[12, 70, 71, 76, 77, 78, 80, 81, 155, 224, 2798, 2805];[12, 70, 71, 76, 77, 78, 80, 81, 155, 224, 2798, 2805];0
org.apache.commons.math3.transform.FastCosineTransformerTest.testTransformFunctionNotStrictlyPositiveNumberOfSamples[0];[70, 71, 224, 2798];[70, 71, 224, 2798];0
org.apache.commons.math3.transform.FastCosineTransformerTest.testTransformFunctionNotStrictlyPositiveNumberOfSamples[1];[70, 71, 224, 2798];[70, 71, 224, 2798];0
org.apache.commons.math3.transform.FastCosineTransformerTest.testTransformFunction[0];[76, 77, 78, 79, 80, 81, 155, 224, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805];[76, 77, 78, 79, 80, 81, 155, 224, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805];0
org.apache.commons.math3.transform.FastCosineTransformerTest.testTransformFunction[1];[12, 76, 77, 78, 79, 80, 81, 155, 224, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805];[12, 76, 77, 78, 79, 80, 81, 155, 224, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805];0
org.apache.commons.math3.transform.FastCosineTransformerTest.testTransformRealInvalidDataSize[0];[70, 71, 2798, 2805];[70, 71, 2798, 2805];0
org.apache.commons.math3.transform.FastCosineTransformerTest.testTransformRealInvalidDataSize[1];[12, 70, 71, 2798, 2805];[12, 70, 71, 2798, 2805];0
org.apache.commons.math3.transform.FastCosineTransformerTest.testTransformReal[0];[76, 77, 78, 79, 80, 81, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805];[76, 77, 78, 79, 80, 81, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805];0
org.apache.commons.math3.transform.FastCosineTransformerTest.testTransformReal[1];[12, 76, 77, 78, 79, 80, 81, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805];[12, 76, 77, 78, 79, 80, 81, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805];0
org.apache.commons.math3.transform.FastFourierTransformerTest.test2DData;[12, 2799, 2800, 2801, 2803, 2804, 2806, 2807];[12, 2799, 2800, 2801, 2803, 2804, 2806, 2807];0
org.apache.commons.math3.transform.FastFourierTransformerTest.test2DDataUnitary;[12, 2799, 2800, 2803, 2804, 2806, 2807];[12, 2799, 2800, 2803, 2804, 2806, 2807];0
org.apache.commons.math3.transform.FastFourierTransformerTest.testAdHocData;[12, 2799, 2800, 2801, 2802, 2803, 2804, 2806];[12, 2799, 2800, 2801, 2802, 2803, 2804, 2806];0
org.apache.commons.math3.transform.FastFourierTransformerTest.testSinFunction;[76, 77, 78, 80, 81, 147, 224, 2799, 2800, 2802, 2803, 2804];[76, 77, 78, 80, 81, 147, 224, 2799, 2800, 2802, 2803, 2804];0
org.apache.commons.math3.transform.FastFourierTransformerTest.testStandardTransformFunction;[12, 76, 77, 78, 79, 80, 81, 155, 224, 2799, 2800, 2802, 2803, 2804];[12, 76, 77, 78, 79, 80, 81, 155, 224, 2799, 2800, 2802, 2803, 2804];0
org.apache.commons.math3.transform.FastFourierTransformerTest.testStandardTransformReal;[12, 76, 77, 78, 79, 80, 81, 2799, 2800, 2802, 2803, 2804];[12, 76, 77, 78, 79, 80, 81, 2799, 2800, 2802, 2803, 2804];0
org.apache.commons.math3.transform.FastFourierTransformerTest.testTransformComplex;[12, 76, 77, 78, 79, 80, 81, 2799, 2800, 2802, 2803, 2804, 2806];[12, 76, 77, 78, 79, 80, 81, 2799, 2800, 2802, 2803, 2804, 2806];0
org.apache.commons.math3.transform.FastFourierTransformerTest.testTransformComplexSizeNotAPowerOfTwo;[70, 71, 2800, 2803, 2806];[70, 71, 2800, 2803, 2806];0
org.apache.commons.math3.transform.FastFourierTransformerTest.testTransformFunctionInvalidBounds;[70, 71, 224, 2803];[70, 71, 224, 2803];0
org.apache.commons.math3.transform.FastFourierTransformerTest.testTransformFunctionNotStrictlyPositiveNumberOfSamples;[70, 71, 224, 2803];[70, 71, 224, 2803];0
org.apache.commons.math3.transform.FastFourierTransformerTest.testTransformFunctionSizeNotAPowerOfTwo;[70, 71, 76, 77, 78, 80, 81, 147, 224, 2800, 2803];[70, 71, 76, 77, 78, 80, 81, 147, 224, 2800, 2803];0
org.apache.commons.math3.transform.FastFourierTransformerTest.testTransformRealSizeNotAPowerOfTwo;[70, 71, 2800, 2803];[70, 71, 2800, 2803];0
org.apache.commons.math3.transform.FastHadamardTransformerTest.test3Points;[70, 71, 2808, 2809];[70, 71, 2808, 2809];0
org.apache.commons.math3.transform.FastHadamardTransformerTest.test4Points;[93, 2801, 2808, 2809];[93, 2801, 2808, 2809];0
org.apache.commons.math3.transform.FastHadamardTransformerTest.test8Points;[93, 2801, 2808, 2809];[93, 2801, 2808, 2809];0
org.apache.commons.math3.transform.FastHadamardTransformerTest.testNoIntInverse;[2801, 2808, 2809];[2801, 2808, 2809];0
org.apache.commons.math3.transform.FastSineTransformerTest.testAdHocData[0];[12, 77, 78, 80, 81, 2799, 2800, 2801, 2802, 2803, 2804, 2810, 2811];[12, 77, 78, 80, 81, 2799, 2800, 2801, 2802, 2803, 2804, 2810, 2811];0
org.apache.commons.math3.transform.FastSineTransformerTest.testAdHocData[1];[12, 77, 78, 80, 81, 2799, 2800, 2801, 2802, 2803, 2804, 2810, 2811];[12, 77, 78, 80, 81, 2799, 2800, 2801, 2802, 2803, 2804, 2810, 2811];0
org.apache.commons.math3.transform.FastSineTransformerTest.testParameters[0];[70, 71, 77, 78, 80, 81, 147, 224, 2810, 2811];[70, 71, 77, 78, 80, 81, 147, 224, 2810, 2811];0
org.apache.commons.math3.transform.FastSineTransformerTest.testParameters[1];[70, 71, 77, 78, 80, 81, 147, 224, 2810, 2811];[70, 71, 77, 78, 80, 81, 147, 224, 2810, 2811];0
org.apache.commons.math3.transform.FastSineTransformerTest.testSinFunction[0];[76, 77, 78, 80, 81, 147, 224, 2799, 2800, 2802, 2803, 2804, 2810, 2811];[76, 77, 78, 80, 81, 147, 224, 2799, 2800, 2802, 2803, 2804, 2810, 2811];0
org.apache.commons.math3.transform.FastSineTransformerTest.testSinFunction[1];[76, 77, 78, 80, 81, 147, 224, 2799, 2800, 2802, 2803, 2804, 2810, 2811];[76, 77, 78, 80, 81, 147, 224, 2799, 2800, 2802, 2803, 2804, 2810, 2811];0
org.apache.commons.math3.transform.FastSineTransformerTest.testTransformFunctionInvalidBounds[0];[70, 71, 224, 2810];[70, 71, 224, 2810];0
org.apache.commons.math3.transform.FastSineTransformerTest.testTransformFunctionInvalidBounds[1];[70, 71, 224, 2810];[70, 71, 224, 2810];0
org.apache.commons.math3.transform.FastSineTransformerTest.testTransformFunctionInvalidDataSize[0];[70, 71, 76, 77, 78, 80, 81, 155, 224, 2810, 2811];[70, 71, 76, 77, 78, 80, 81, 155, 224, 2810, 2811];0
org.apache.commons.math3.transform.FastSineTransformerTest.testTransformFunctionInvalidDataSize[1];[12, 70, 71, 76, 77, 78, 80, 81, 155, 224, 2810, 2811];[12, 70, 71, 76, 77, 78, 80, 81, 155, 224, 2810, 2811];0
org.apache.commons.math3.transform.FastSineTransformerTest.testTransformFunctionNotStrictlyPositiveNumberOfSamples[0];[70, 71, 224, 2810];[70, 71, 224, 2810];0
org.apache.commons.math3.transform.FastSineTransformerTest.testTransformFunctionNotStrictlyPositiveNumberOfSamples[1];[70, 71, 224, 2810];[70, 71, 224, 2810];0
org.apache.commons.math3.transform.FastSineTransformerTest.testTransformFunction[0];[76, 77, 78, 80, 81, 155, 224, 2799, 2800, 2801, 2802, 2803, 2804, 2810, 2811];[76, 77, 78, 80, 81, 155, 224, 2799, 2800, 2801, 2802, 2803, 2804, 2810, 2811];0
org.apache.commons.math3.transform.FastSineTransformerTest.testTransformFunction[1];[12, 76, 77, 78, 80, 81, 155, 224, 2799, 2800, 2801, 2802, 2803, 2804, 2810, 2811];[12, 76, 77, 78, 80, 81, 155, 224, 2799, 2800, 2801, 2802, 2803, 2804, 2810, 2811];0
org.apache.commons.math3.transform.FastSineTransformerTest.testTransformRealFirstElementNotZero[0];[70, 71, 2810, 2811];[70, 71, 2810, 2811];0
org.apache.commons.math3.transform.FastSineTransformerTest.testTransformRealFirstElementNotZero[1];[12, 70, 71, 2810, 2811];[12, 70, 71, 2810, 2811];0
org.apache.commons.math3.transform.FastSineTransformerTest.testTransformRealInvalidDataSize[0];[70, 71, 2810, 2811];[70, 71, 2810, 2811];0
org.apache.commons.math3.transform.FastSineTransformerTest.testTransformRealInvalidDataSize[1];[12, 70, 71, 2810, 2811];[12, 70, 71, 2810, 2811];0
org.apache.commons.math3.transform.FastSineTransformerTest.testTransformReal[0];[76, 77, 78, 80, 81, 2799, 2800, 2801, 2802, 2803, 2804, 2810, 2811];[76, 77, 78, 80, 81, 2799, 2800, 2801, 2802, 2803, 2804, 2810, 2811];0
org.apache.commons.math3.transform.FastSineTransformerTest.testTransformReal[1];[12, 76, 77, 78, 80, 81, 2799, 2800, 2801, 2802, 2803, 2804, 2810, 2811];[12, 76, 77, 78, 80, 81, 2799, 2800, 2801, 2802, 2803, 2804, 2810, 2811];0
org.apache.commons.math3.util.ArithmeticUtilsTest.test0Choose0;[141];[141];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testAddAndCheck;[70, 71, 872];[70, 71, 872];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testAddAndCheckLong;[70, 71, 872];[70, 71, 872];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testBinomialCoefficient;[18, 141, 872];[18, 141, 872];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testBinomialCoefficientFail;[70, 71, 141];[70, 71, 141];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testBinomialCoefficientLarge;[18, 70, 71, 141, 872];[18, 70, 71, 141, 872];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testFactorial;[18];[18];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testFactorialFail;[18, 53, 70, 71];[18, 53, 70, 71];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testGcd;[70, 71];[70, 71];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testGcdConsistency;[107, 108, 647, 653, 654, 2222, 2302, 2313, 2314, 2315, 2321, 2812];[107, 108, 647, 653, 654, 2222, 2302, 2313, 2314, 2315, 2321, 2812];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testGcdLong;[70, 71];[70, 71];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testLcm;[70, 71];[70, 71];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testLcmLong;[70, 71];[70, 71];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testMulAndCheck;[70, 71];[70, 71];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testMulAndCheckLong;[70, 71];[70, 71];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testPow;[70, 71];[70, 71];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testStirlingS2;[141];[141];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testStirlingS2LargeK;[70, 71];[70, 71];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testStirlingS2NegativeN;[70, 71];[70, 71];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testStirlingS2Overflow;[70, 71, 141];[70, 71, 141];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testSubAndCheck;[70, 71];[70, 71];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testSubAndCheckErrorMessage;[70, 71, 771, 773, 774, 2813];[70, 71, 771, 773, 774, 2813];0
org.apache.commons.math3.util.ArithmeticUtilsTest.testSubAndCheckLong;[70, 71];[70, 71];0
org.apache.commons.math3.util.BigRealFieldTest.testOne;[2814, 2815, 2816];[2814, 2815, 2816];0
org.apache.commons.math3.util.BigRealFieldTest.testSerial;[2815, 2817];[2815, 2817];0
org.apache.commons.math3.util.BigRealFieldTest.testZero;[2815, 2816, 2818];[2815, 2816, 2818];0
org.apache.commons.math3.util.BigRealTest.testAdd;[2819, 2820];[2819, 2820];0
org.apache.commons.math3.util.BigRealTest.testBigDecimalValue;[2821];[2821];0
org.apache.commons.math3.util.BigRealTest.testCompareTo;[2822];[2822];0
org.apache.commons.math3.util.BigRealTest.testConstructor;[2820];[2820];0
org.apache.commons.math3.util.BigRealTest.testDivide;[2820, 2823];[2820, 2823];0
org.apache.commons.math3.util.BigRealTest.testDivisionByZero;[70, 71, 2823];[70, 71, 2823];0
org.apache.commons.math3.util.BigRealTest.testDoubleValue;[2820];[2820];0
org.apache.commons.math3.util.BigRealTest.testEqualsAndHashCode;[2816, 2824];[2816, 2824];0
org.apache.commons.math3.util.BigRealTest.testMultiply;[2820, 2825];[2820, 2825];0
org.apache.commons.math3.util.BigRealTest.testNegate;[2816, 2819, 2826];[2816, 2819, 2826];0
org.apache.commons.math3.util.BigRealTest.testReciprocal;[46, 2820, 2825, 2827, 2828, 2829];[46, 2820, 2825, 2827, 2828, 2829];0
org.apache.commons.math3.util.BigRealTest.testReciprocalOfZero;[70, 71, 2829];[70, 71, 2829];0
org.apache.commons.math3.util.BigRealTest.testSerial;[2816];[2816];0
org.apache.commons.math3.util.BigRealTest.testSubtract;[2820, 2828];[2820, 2828];0
org.apache.commons.math3.util.ContinuedFractionTest.testGoldenRatio;[93, 627];[93, 627];0
org.apache.commons.math3.util.Decimal64Test.testAbs;[2830, 2831];[2830, 2831];0
org.apache.commons.math3.util.Decimal64Test.testAcos;[8, 9, 12, 13, 2831, 2832];[8, 9, 12, 13, 2831, 2832];0
org.apache.commons.math3.util.Decimal64Test.testAcosh;[12, 16, 18, 2831, 2833];[12, 16, 18, 2831, 2833];0
org.apache.commons.math3.util.Decimal64Test.testAdd;[2834, 2835];[2834, 2835];0
org.apache.commons.math3.util.Decimal64Test.testAddDouble;[2831, 2834];[2831, 2834];0
org.apache.commons.math3.util.Decimal64Test.testAddField;[2831, 2834];[2831, 2834];0
org.apache.commons.math3.util.Decimal64Test.testAsin;[9, 12, 26, 2831, 2836];[9, 12, 26, 2831, 2836];0
org.apache.commons.math3.util.Decimal64Test.testAsinh;[12, 18, 33, 2831, 2837];[12, 18, 33, 2831, 2837];0
org.apache.commons.math3.util.Decimal64Test.testAtan;[9, 2831, 2838];[9, 2831, 2838];0
org.apache.commons.math3.util.Decimal64Test.testAtan2;[8, 9, 40, 2831, 2839];[8, 9, 40, 2831, 2839];0
org.apache.commons.math3.util.Decimal64Test.testAtanh;[18, 47, 2831, 2840];[18, 47, 2831, 2840];0
org.apache.commons.math3.util.Decimal64Test.testCbrt;[2831, 2841];[2831, 2841];0
org.apache.commons.math3.util.Decimal64Test.testCeil;[2831, 2842];[2831, 2842];0
org.apache.commons.math3.util.Decimal64Test.testCopySignDouble;[2831, 2843];[2831, 2843];0
org.apache.commons.math3.util.Decimal64Test.testCopySignField;[2831, 2843];[2831, 2843];0
org.apache.commons.math3.util.Decimal64Test.testCos;[76, 77, 78, 79, 81, 2831, 2844];[76, 77, 78, 79, 81, 2831, 2844];0
org.apache.commons.math3.util.Decimal64Test.testCosh;[53, 85, 2831, 2845];[53, 85, 2831, 2845];0
org.apache.commons.math3.util.Decimal64Test.testDivide;[2835, 2846];[2835, 2846];0
org.apache.commons.math3.util.Decimal64Test.testDivideDouble;[2831, 2846];[2831, 2846];0
org.apache.commons.math3.util.Decimal64Test.testDivideField;[2831, 2846];[2831, 2846];0
org.apache.commons.math3.util.Decimal64Test.testEquals;[2835];[2835];0
org.apache.commons.math3.util.Decimal64Test.testExp;[53, 2831, 2847];[53, 2831, 2847];0
org.apache.commons.math3.util.Decimal64Test.testExpm1;[83, 2831, 2848];[83, 2831, 2848];0
org.apache.commons.math3.util.Decimal64Test.testFloor;[2831, 2849];[2831, 2849];0
org.apache.commons.math3.util.Decimal64Test.testGetField;[2831, 2850, 2851, 2852, 2853];[2831, 2850, 2851, 2852, 2853];0
org.apache.commons.math3.util.Decimal64Test.testHash;[2854];[2854];0
org.apache.commons.math3.util.Decimal64Test.testHypot;[12, 2831, 2855];[12, 2831, 2855];0
org.apache.commons.math3.util.Decimal64Test.testIsInfinite;[2856];[2856];0
org.apache.commons.math3.util.Decimal64Test.testIsNaN;[2857];[2857];0
org.apache.commons.math3.util.Decimal64Test.testLinearCombinationDaFa;[105, 106, 107, 108, 2831, 2850, 2851, 2853, 2858, 2859];[105, 106, 107, 108, 2831, 2850, 2851, 2853, 2858, 2859];0
org.apache.commons.math3.util.Decimal64Test.testLinearCombinationDF2;[105, 106, 107, 108, 2831, 2850, 2851, 2853, 2858, 2859];[105, 106, 107, 108, 2831, 2850, 2851, 2853, 2858, 2859];0
org.apache.commons.math3.util.Decimal64Test.testLinearCombinationDF3;[105, 106, 107, 108, 2831, 2850, 2851, 2853, 2858, 2859];[105, 106, 107, 108, 2831, 2850, 2851, 2853, 2858, 2859];0
org.apache.commons.math3.util.Decimal64Test.testLinearCombinationDF4;[105, 106, 107, 108, 2831, 2850, 2851, 2853, 2858, 2859];[105, 106, 107, 108, 2831, 2850, 2851, 2853, 2858, 2859];0
org.apache.commons.math3.util.Decimal64Test.testLinearCombinationFaFa;[105, 106, 107, 108, 2831, 2850, 2851, 2853, 2858, 2859];[105, 106, 107, 108, 2831, 2850, 2851, 2853, 2858, 2859];0
org.apache.commons.math3.util.Decimal64Test.testLinearCombinationFF2;[105, 106, 107, 108, 2831, 2850, 2851, 2853, 2858, 2859];[105, 106, 107, 108, 2831, 2850, 2851, 2853, 2858, 2859];0
org.apache.commons.math3.util.Decimal64Test.testLinearCombinationFF3;[105, 106, 107, 108, 2831, 2850, 2851, 2853, 2858, 2859];[105, 106, 107, 108, 2831, 2850, 2851, 2853, 2858, 2859];0
org.apache.commons.math3.util.Decimal64Test.testLinearCombinationFF4;[105, 106, 107, 108, 2831, 2850, 2851, 2853, 2858, 2859];[105, 106, 107, 108, 2831, 2850, 2851, 2853, 2858, 2859];0
org.apache.commons.math3.util.Decimal64Test.testLog;[18, 2831, 2860];[18, 2831, 2860];0
org.apache.commons.math3.util.Decimal64Test.testLog1p;[18, 115, 2831, 2861];[18, 115, 2831, 2861];0
org.apache.commons.math3.util.Decimal64Test.testMultiply;[2835, 2862];[2835, 2862];0
org.apache.commons.math3.util.Decimal64Test.testMultiplyDouble;[2831, 2862];[2831, 2862];0
org.apache.commons.math3.util.Decimal64Test.testMultiplyField;[2831, 2862];[2831, 2862];0
org.apache.commons.math3.util.Decimal64Test.testMultiplyInt;[2831, 2862];[2831, 2862];0
org.apache.commons.math3.util.Decimal64Test.testNegate;[2835, 2863];[2835, 2863];0
org.apache.commons.math3.util.Decimal64Test.testPowDouble;[18, 46, 53, 2831, 2864];[18, 46, 53, 2831, 2864];0
org.apache.commons.math3.util.Decimal64Test.testPowField;[18, 46, 53, 2831, 2864];[18, 46, 53, 2831, 2864];0
org.apache.commons.math3.util.Decimal64Test.testPowInt;[46, 2831, 2864];[46, 2831, 2864];0
org.apache.commons.math3.util.Decimal64Test.testReciprocal;[2835, 2865];[2835, 2865];0
org.apache.commons.math3.util.Decimal64Test.testRemainderDouble;[2831, 2866];[2831, 2866];0
org.apache.commons.math3.util.Decimal64Test.testRemainderField;[2831, 2866];[2831, 2866];0
org.apache.commons.math3.util.Decimal64Test.testRint;[2831, 2867];[2831, 2867];0
org.apache.commons.math3.util.Decimal64Test.testRootN;[18, 46, 53, 2831, 2868];[18, 46, 53, 2831, 2868];0
org.apache.commons.math3.util.Decimal64Test.testRound;[2869];[2869];0
org.apache.commons.math3.util.Decimal64Test.testScalb;[2831, 2870];[2831, 2870];0
org.apache.commons.math3.util.Decimal64Test.testSignum;[122, 2831, 2871];[122, 2831, 2871];0
org.apache.commons.math3.util.Decimal64Test.testSin;[77, 78, 80, 81, 2831, 2872];[77, 78, 80, 81, 2831, 2872];0
org.apache.commons.math3.util.Decimal64Test.testSinh;[53, 83, 86, 2831, 2873];[53, 83, 86, 2831, 2873];0
org.apache.commons.math3.util.Decimal64Test.testSqrt;[12, 2831, 2874];[12, 2831, 2874];0
org.apache.commons.math3.util.Decimal64Test.testSubtract;[2835, 2875];[2835, 2875];0
org.apache.commons.math3.util.Decimal64Test.testSubtractDouble;[2831, 2875];[2831, 2875];0
org.apache.commons.math3.util.Decimal64Test.testSubtractField;[2831, 2875];[2831, 2875];0
org.apache.commons.math3.util.Decimal64Test.testTan;[78, 81, 131, 134, 2831, 2876];[78, 81, 131, 134, 2831, 2876];0
org.apache.commons.math3.util.Decimal64Test.testTanh;[53, 83, 136, 2831, 2877];[53, 83, 136, 2831, 2877];0
org.apache.commons.math3.util.DefaultTransformerTest.testSerial;[2878];[2878];0
org.apache.commons.math3.util.DefaultTransformerTest.testTransformBigDecimal;[2507];[2507];0
org.apache.commons.math3.util.DefaultTransformerTest.testTransformDouble;[2507];[2507];0
org.apache.commons.math3.util.DefaultTransformerTest.testTransformInteger;[2507];[2507];0
org.apache.commons.math3.util.DefaultTransformerTest.testTransformNull;[70, 71, 2507];[70, 71, 2507];0
org.apache.commons.math3.util.DefaultTransformerTest.testTransformObject;[70, 71, 2507];[70, 71, 2507];0
org.apache.commons.math3.util.DefaultTransformerTest.testTransformString;[2507];[2507];0
org.apache.commons.math3.util.FastMathTest.testAcosAccuracy;[8, 9, 12, 13, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 579, 586, 590];[8, 9, 12, 13, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 579, 586, 590];0
org.apache.commons.math3.util.FastMathTest.testAcosSpecialCases;[13, 107, 158, 173, 176, 181, 182, 189, 343];[13, 107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testAsinAccuracy;[9, 12, 26, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 579, 590];[9, 12, 26, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 579, 590];0
org.apache.commons.math3.util.FastMathTest.testAsinSpecialCases;[26, 107, 158, 173, 176, 181, 182, 189, 343];[26, 107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testAtan2;[8, 9, 40, 107, 158, 173, 176, 181, 182, 189, 343];[8, 9, 40, 107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testAtan2Accuracy;[8, 9, 40, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 579, 590];[8, 9, 40, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 579, 590];0
org.apache.commons.math3.util.FastMathTest.testAtan2SpecialCases;[40, 107, 158, 173, 176, 181, 182, 189, 343];[40, 107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testAtanAccuracy;[9, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 579, 590];[9, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 579, 590];0
org.apache.commons.math3.util.FastMathTest.testCbrtAccuracy;[105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 573, 574, 575, 576, 577, 578, 579, 589];[105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 573, 574, 575, 576, 577, 578, 579, 589];0
org.apache.commons.math3.util.FastMathTest.testConstants;[107, 158, 173, 176, 181, 182, 189, 343];[107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testCosAccuracy;[76, 77, 78, 79, 81, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 333, 343];[76, 77, 78, 79, 81, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 333, 343];0
org.apache.commons.math3.util.FastMathTest.testCoshAccuracy;[53, 85, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 576, 578, 579];[53, 85, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 576, 578, 579];0
org.apache.commons.math3.util.FastMathTest.testDoubleNextAfterSpecialCases;[107, 158, 173, 176, 181, 182, 189, 343];[107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testDoubleScalbSpecialCases;[107, 158, 173, 176, 181, 182, 189, 343];[107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testExpAccuracy;[53, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 576, 578, 579];[53, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 576, 578, 579];0
org.apache.commons.math3.util.FastMathTest.testExpm1Accuracy;[53, 83, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 576, 578, 579];[53, 83, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 576, 578, 579];0
org.apache.commons.math3.util.FastMathTest.testExpSpecialCases;[53, 107, 158, 173, 176, 181, 182, 189, 343];[53, 107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testFloatNextAfterSpecialCases;[107, 158, 173, 176, 181, 182, 189, 343];[107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testFloatScalbSpecialCases;[107, 158, 173, 176, 181, 182, 189, 343];[107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testHyperbolic;[53, 83, 85, 86, 107, 136, 158, 173, 176, 181, 182, 189, 343];[53, 83, 85, 86, 107, 136, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses;[12, 16, 18, 33, 47, 53, 83, 85, 86, 107, 136, 158, 173, 176, 181, 182, 189, 343];[12, 16, 18, 33, 47, 53, 83, 85, 86, 107, 136, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testIndicatorDouble;[107, 158, 173, 176, 181, 182, 189, 343];[107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testIndicatorFloat;[107, 158, 173, 176, 181, 182, 189, 343];[107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testIntPow;[46, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 343];[46, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 343];0
org.apache.commons.math3.util.FastMathTest.testLog10Accuracy;[18, 105, 107, 112, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 573, 574, 575, 576, 577, 579];[18, 105, 107, 112, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 573, 574, 575, 576, 577, 579];0
org.apache.commons.math3.util.FastMathTest.testLog1pAccuracy;[18, 105, 107, 115, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 573, 574, 575, 576, 577, 579];[18, 105, 107, 115, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 573, 574, 575, 576, 577, 579];0
org.apache.commons.math3.util.FastMathTest.testLog1pSpecialCases;[107, 115, 158, 173, 176, 181, 182, 189, 343];[107, 115, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testLogAccuracy;[18, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 573, 574, 575, 576, 577, 579];[18, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 573, 574, 575, 576, 577, 579];0
org.apache.commons.math3.util.FastMathTest.testLogSpecialCases;[18, 107, 158, 173, 176, 181, 182, 189, 343];[18, 107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testLogWithBase;[18, 107, 158, 173, 176, 181, 182, 189, 343];[18, 107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testMath904;[18, 46, 53, 107, 158, 173, 176, 181, 182, 189, 343];[18, 46, 53, 107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testMath905LargeNegative;[53, 85, 86, 107, 158, 173, 176, 181, 182, 189, 343];[53, 85, 86, 107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testMath905LargePositive;[53, 85, 86, 107, 158, 173, 176, 181, 182, 189, 343];[53, 85, 86, 107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testMinMaxDouble;[107, 158, 173, 176, 181, 182, 189, 343];[107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testMinMaxFloat;[107, 158, 173, 176, 181, 182, 189, 343];[107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testNextAfter;[107, 158, 173, 176, 181, 182, 189, 343];[107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testPowAccuracy;[18, 46, 53, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 573, 574, 575, 576, 577, 578, 579, 589];[18, 46, 53, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 573, 574, 575, 576, 577, 578, 579, 589];0
org.apache.commons.math3.util.FastMathTest.testPowSpecialCases;[18, 46, 53, 107, 158, 173, 176, 181, 182, 189, 343];[18, 46, 53, 107, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testSignumDouble;[107, 122, 158, 173, 176, 181, 182, 189, 343];[107, 122, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testSignumFloat;[107, 122, 158, 173, 176, 181, 182, 189, 343];[107, 122, 158, 173, 176, 181, 182, 189, 343];0
org.apache.commons.math3.util.FastMathTest.testSinAccuracy;[76, 77, 78, 80, 81, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 333, 343];[76, 77, 78, 80, 81, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 333, 343];0
org.apache.commons.math3.util.FastMathTest.testSinhAccuracy;[53, 83, 86, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 576, 578, 579];[53, 83, 86, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 576, 578, 579];0
org.apache.commons.math3.util.FastMathTest.testTanAccuracy;[78, 81, 105, 107, 131, 134, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 333, 343];[78, 81, 105, 107, 131, 134, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 333, 343];0
org.apache.commons.math3.util.FastMathTest.testTanhAccuracy;[53, 83, 105, 107, 136, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 576, 578, 579];[53, 83, 105, 107, 136, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343, 576, 578, 579];0
org.apache.commons.math3.util.FastMathTest.testToDegrees;[8, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343];[8, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343];0
org.apache.commons.math3.util.FastMathTest.testToRadians;[8, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343];[8, 105, 107, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 333, 343];0
org.apache.commons.math3.util.IncrementorTest.testAboveMaxCount;[70, 71, 246, 250, 262];[70, 71, 246, 250, 262];0
org.apache.commons.math3.util.IncrementorTest.testAccessor;[246, 247, 265];[246, 247, 265];0
org.apache.commons.math3.util.IncrementorTest.testAlternateException;[70, 71, 250, 262];[70, 71, 250, 262];0
org.apache.commons.math3.util.IncrementorTest.testBelowMaxCount;[246, 247, 250];[246, 247, 250];0
org.apache.commons.math3.util.IncrementorTest.testBulkIncrement;[246, 247, 250];[246, 247, 250];0
org.apache.commons.math3.util.IncrementorTest.testCanIncrement1;[250, 2879];[250, 2879];0
org.apache.commons.math3.util.IncrementorTest.testCanIncrement2;[70, 71, 250, 262, 2879];[70, 71, 250, 262, 2879];0
org.apache.commons.math3.util.IncrementorTest.testConstructor1;[247, 265];[247, 265];0
org.apache.commons.math3.util.IncrementorTest.testConstructor2;[247, 265];[247, 265];0
org.apache.commons.math3.util.IncrementorTest.testReset;[246, 247, 250, 255];[246, 247, 250, 255];0
org.apache.commons.math3.util.MathArraysTest.testArrayEquals;[93];[93];0
org.apache.commons.math3.util.MathArraysTest.testArrayEqualsIncludingNaN;[93, 117];[93, 117];0
org.apache.commons.math3.util.MathArraysTest.testCheckNonNegative;[70, 71, 2230];[70, 71, 2230];0
org.apache.commons.math3.util.MathArraysTest.testCheckNonNegative2D;[70, 71, 2230];[70, 71, 2230];0
org.apache.commons.math3.util.MathArraysTest.testCheckOrder;[70, 71, 204];[70, 71, 204];0
org.apache.commons.math3.util.MathArraysTest.testCheckPositive;[70, 71, 2228];[70, 71, 2228];0
org.apache.commons.math3.util.MathArraysTest.testCheckRectangular;[61, 70, 71, 2690];[61, 70, 71, 2690];0
org.apache.commons.math3.util.MathArraysTest.testEbeAdd;[2880];[2880];0
org.apache.commons.math3.util.MathArraysTest.testEbeAddPrecondition;[70, 71, 2880];[70, 71, 2880];0
org.apache.commons.math3.util.MathArraysTest.testEbeDivide;[1441];[1441];0
org.apache.commons.math3.util.MathArraysTest.testEbeDividePrecondition;[70, 71, 1441];[70, 71, 1441];0
org.apache.commons.math3.util.MathArraysTest.testEbeMultiply;[2881];[2881];0
org.apache.commons.math3.util.MathArraysTest.testEbeMultiplyPrecondition;[70, 71, 2881];[70, 71, 2881];0
org.apache.commons.math3.util.MathArraysTest.testEbeSubtract;[696];[696];0
org.apache.commons.math3.util.MathArraysTest.testEbeSubtractPrecondition;[70, 71, 696];[70, 71, 696];0
org.apache.commons.math3.util.MathArraysTest.testIsMonotonic;[204, 2882];[204, 2882];0
org.apache.commons.math3.util.MathArraysTest.testIsMonotonicComparable;[2882];[2882];0
org.apache.commons.math3.util.MathArraysTest.testL1DistanceDouble;[93, 1720];[93, 1720];0
org.apache.commons.math3.util.MathArraysTest.testL1DistanceInt;[1720];[1720];0
org.apache.commons.math3.util.MathArraysTest.testL2DistanceDouble;[12, 93, 1700];[12, 93, 1700];0
org.apache.commons.math3.util.MathArraysTest.testL2DistanceInt;[12, 93, 1700];[12, 93, 1700];0
org.apache.commons.math3.util.MathArraysTest.testLinearCombination2;[105, 106, 107, 108];[105, 106, 107, 108];0
org.apache.commons.math3.util.MathArraysTest.testLInfDistanceDouble;[93, 1718];[93, 1718];0
org.apache.commons.math3.util.MathArraysTest.testLInfDistanceInt;[1718];[1718];0
org.apache.commons.math3.util.MathArraysTest.testNormalizeArray;[70, 71, 93, 117];[70, 71, 93, 117];0
org.apache.commons.math3.util.MathArraysTest.testScale;[2883];[2883];0
org.apache.commons.math3.util.MathArraysTest.testScaleInPlace;[705];[705];0
org.apache.commons.math3.util.MathArraysTest.testSortInPlace;[353, 354];[353, 354];0
org.apache.commons.math3.util.MathArraysTest.testSortInPlaceExample;[353, 354];[353, 354];0
org.apache.commons.math3.util.MathArraysTest.testSortInPlaceFailures;[70, 71];[70, 71];0
org.apache.commons.math3.util.MathUtilsTest.testArrayHash;[98];[98];0
org.apache.commons.math3.util.MathUtilsTest.testCheckFinite;[70, 71, 326];[70, 71, 326];0
org.apache.commons.math3.util.MathUtilsTest.testCheckNotNull1;[61, 70, 71];[61, 70, 71];0
org.apache.commons.math3.util.MathUtilsTest.testCheckNotNull2;[61, 70, 71];[61, 70, 71];0
org.apache.commons.math3.util.MathUtilsTest.testCopySignByte;[868];[868];0
org.apache.commons.math3.util.MathUtilsTest.testCopySignByte2;[70, 71, 868];[70, 71, 868];0
org.apache.commons.math3.util.MathUtilsTest.testHash;[98];[98];0
org.apache.commons.math3.util.MathUtilsTest.testIndicatorByte;[868];[868];0
org.apache.commons.math3.util.MathUtilsTest.testIndicatorInt;[868];[868];0
org.apache.commons.math3.util.MathUtilsTest.testIndicatorLong;[868];[868];0
org.apache.commons.math3.util.MathUtilsTest.testIndicatorShort;[868];[868];0
org.apache.commons.math3.util.MathUtilsTest.testNormalizeAngle;[816];[816];0
org.apache.commons.math3.util.MathUtilsTest.testPermutedArrayHash;[98, 105, 107, 108, 647, 653, 654, 817, 2222, 2302, 2313, 2314, 2315, 2884];[98, 105, 107, 108, 647, 653, 654, 817, 2222, 2302, 2313, 2314, 2315, 2884];0
org.apache.commons.math3.util.MathUtilsTest.testReduce;[447];[447];0
org.apache.commons.math3.util.MathUtilsTest.testReduceComparedWithNormalizeAngle;[447, 816];[447, 816];0
org.apache.commons.math3.util.MathUtilsTest.testSignByte;[868];[868];0
org.apache.commons.math3.util.MathUtilsTest.testSignInt;[868];[868];0
org.apache.commons.math3.util.MathUtilsTest.testSignLong;[868];[868];0
org.apache.commons.math3.util.MathUtilsTest.testSignShort;[868];[868];0
org.apache.commons.math3.util.MultidimensionalCounterTest.testIterationConsistency;[2885, 2886, 2887];[2885, 2886, 2887];0
org.apache.commons.math3.util.MultidimensionalCounterTest.testIteratorPreconditions;[2886];[2886];0
org.apache.commons.math3.util.MultidimensionalCounterTest.testPreconditions;[70, 71];[70, 71];0
org.apache.commons.math3.util.OpenIntToDoubleHashMapTest.testConcurrentModification;[1619, 1622, 1624, 1626, 1627, 1631, 1632, 1636, 1649];[1619, 1622, 1624, 1626, 1627, 1631, 1632, 1636, 1649];0
org.apache.commons.math3.util.OpenIntToDoubleHashMapTest.testContainsKey;[1620, 1621, 1622, 1624, 1626, 1627, 1631, 1632, 1635, 1636, 1649];[1620, 1621, 1622, 1624, 1626, 1627, 1631, 1632, 1635, 1636, 1649];0
org.apache.commons.math3.util.OpenIntToDoubleHashMapTest.testCopy;[93, 1620, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1649, 1652];[93, 1620, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1649, 1652];0
org.apache.commons.math3.util.OpenIntToDoubleHashMapTest.testGetAbsent;[1620, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1649];[1620, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1649];0
org.apache.commons.math3.util.OpenIntToDoubleHashMapTest.testGetFromEmpty;[1620, 1625, 1632, 1636];[1620, 1625, 1632, 1636];0
org.apache.commons.math3.util.OpenIntToDoubleHashMapTest.testIterator;[1619, 1620, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1649, 1652];[1619, 1620, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1649, 1652];0
org.apache.commons.math3.util.OpenIntToDoubleHashMapTest.testPutAbsentOnExisting;[93, 1620, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1649, 1652];[93, 1620, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1649, 1652];0
org.apache.commons.math3.util.OpenIntToDoubleHashMapTest.testPutAndGet;[93, 1620, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1649, 1652];[93, 1620, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1649, 1652];0
org.apache.commons.math3.util.OpenIntToDoubleHashMapTest.testPutAndGetWith0ExpectedSize;[93, 1620, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1649, 1652];[93, 1620, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1649, 1652];0
org.apache.commons.math3.util.OpenIntToDoubleHashMapTest.testPutAndGetWithExpectedSize;[93, 1620, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1649, 1652, 2888];[93, 1620, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1649, 1652, 2888];0
org.apache.commons.math3.util.OpenIntToDoubleHashMapTest.testPutKeysWithCollision2;[93, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1652];[93, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1652];0
org.apache.commons.math3.util.OpenIntToDoubleHashMapTest.testPutKeysWithCollisions;[93, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1652];[93, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1652];0
org.apache.commons.math3.util.OpenIntToDoubleHashMapTest.testPutOnExisting;[93, 1620, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1637, 1649, 1652];[93, 1620, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1637, 1649, 1652];0
org.apache.commons.math3.util.OpenIntToDoubleHashMapTest.testRemove;[93, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1649, 1652];[93, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1649, 1652];0
org.apache.commons.math3.util.OpenIntToDoubleHashMapTest.testRemove2;[93, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1649, 1652];[93, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1635, 1636, 1637, 1649, 1652];0
org.apache.commons.math3.util.OpenIntToDoubleHashMapTest.testRemoveAbsent;[1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1649, 1652];[1620, 1621, 1622, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1649, 1652];0
org.apache.commons.math3.util.OpenIntToDoubleHashMapTest.testRemoveFromEmpty;[1620, 1621, 1632, 1636];[1620, 1621, 1632, 1636];0
org.apache.commons.math3.util.OpenIntToFieldTest.testConcurrentModification;[857, 1239, 1484, 1485, 1487, 1489, 1490, 1492, 1605, 2889, 2890];[857, 1239, 1484, 1485, 1487, 1489, 1490, 1492, 1605, 2889, 2890];0
org.apache.commons.math3.util.OpenIntToFieldTest.testContainsKey;[857, 1239, 1481, 1484, 1485, 1487, 1489, 1490, 1492, 1587, 2889, 2890, 2891];[857, 1239, 1481, 1484, 1485, 1487, 1489, 1490, 1492, 1587, 2889, 2890, 2891];0
org.apache.commons.math3.util.OpenIntToFieldTest.testCopy;[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 2889, 2890, 2892];[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 2889, 2890, 2892];0
org.apache.commons.math3.util.OpenIntToFieldTest.testGetAbsent;[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 2889, 2890];[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 2889, 2890];0
org.apache.commons.math3.util.OpenIntToFieldTest.testGetFromEmpty;[854, 857, 1239, 1481, 1485, 1488, 1489, 1490];[854, 857, 1239, 1481, 1485, 1488, 1489, 1490];0
org.apache.commons.math3.util.OpenIntToFieldTest.testIterator;[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1605, 2889, 2890, 2892];[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1605, 2889, 2890, 2892];0
org.apache.commons.math3.util.OpenIntToFieldTest.testPutAbsentOnExisting;[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 2889, 2890, 2892, 2893];[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 2889, 2890, 2892, 2893];0
org.apache.commons.math3.util.OpenIntToFieldTest.testPutAndGet;[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 2889, 2890, 2892];[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 2889, 2890, 2892];0
org.apache.commons.math3.util.OpenIntToFieldTest.testPutAndGetWith0ExpectedSize;[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 2889, 2890, 2892, 2893];[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 2889, 2890, 2892, 2893];0
org.apache.commons.math3.util.OpenIntToFieldTest.testPutAndGetWithExpectedSize;[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 2892, 2894];[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 2892, 2894];0
org.apache.commons.math3.util.OpenIntToFieldTest.testPutKeysWithCollision2;[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1587, 1593, 2889, 2890, 2891, 2892];[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1587, 1593, 2889, 2890, 2891, 2892];0
org.apache.commons.math3.util.OpenIntToFieldTest.testPutKeysWithCollisions;[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1587, 1593, 2889, 2890, 2891, 2892];[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1587, 1593, 2889, 2890, 2891, 2892];0
org.apache.commons.math3.util.OpenIntToFieldTest.testPutOnExisting;[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1593, 2889, 2890, 2892];[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1593, 2889, 2890, 2892];0
org.apache.commons.math3.util.OpenIntToFieldTest.testRemove;[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1587, 2889, 2890, 2891, 2892];[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1587, 2889, 2890, 2891, 2892];0
org.apache.commons.math3.util.OpenIntToFieldTest.testRemove2;[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1587, 1593, 2889, 2890, 2891, 2892];[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1587, 1593, 2889, 2890, 2891, 2892];0
org.apache.commons.math3.util.OpenIntToFieldTest.testRemoveAbsent;[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1587, 2889, 2890, 2892];[854, 857, 1239, 1481, 1484, 1485, 1487, 1488, 1489, 1490, 1492, 1587, 2889, 2890, 2892];0
org.apache.commons.math3.util.OpenIntToFieldTest.testRemoveFromEmpty;[854, 857, 1239, 1481, 1485, 1489, 1490, 1587];[854, 857, 1239, 1481, 1485, 1489, 1490, 1587];0
org.apache.commons.math3.util.PairTest.testAccessor;[353, 354];[353, 354];0
org.apache.commons.math3.util.PairTest.testAccessor2;[233, 234, 353, 354];[233, 234, 353, 354];0
org.apache.commons.math3.util.PairTest.testEquals;[2895];[2895];0
org.apache.commons.math3.util.PairTest.testHashCode;[2896];[2896];0
org.apache.commons.math3.util.PrecisionTest.testCompareToEpsilon;[93, 803];[93, 803];0
org.apache.commons.math3.util.PrecisionTest.testCompareToMaxUlps;[93, 803];[93, 803];0
org.apache.commons.math3.util.PrecisionTest.testEqualsIncludingNaN;[93, 117];[93, 117];0
org.apache.commons.math3.util.PrecisionTest.testEqualsIncludingNaNWithAllowedDelta;[93, 117];[93, 117];0
org.apache.commons.math3.util.PrecisionTest.testEqualsIncludingNaNWithAllowedUlps;[93, 117];[93, 117];0
org.apache.commons.math3.util.PrecisionTest.testEqualsWithAllowedDelta;[93];[93];0
org.apache.commons.math3.util.PrecisionTest.testEqualsWithAllowedUlps;[93];[93];0
org.apache.commons.math3.util.PrecisionTest.testEqualsWithRelativeTolerance;[93, 2897];[93, 2897];0
org.apache.commons.math3.util.PrecisionTest.testFloatEqualsWithAllowedUlps;[93];[93];0
org.apache.commons.math3.util.PrecisionTest.testMath475;[93, 546];[93, 546];0
org.apache.commons.math3.util.PrecisionTest.testRoundDouble;[2898];[2898];0
org.apache.commons.math3.util.PrecisionTest.testRoundFloat;[46, 70, 71, 2898, 2899];[46, 70, 71, 2898, 2899];0
org.apache.commons.math3.util.ResizableDoubleArrayTest.testAdd1000;[669];[669];0
org.apache.commons.math3.util.ResizableDoubleArrayTest.testAddElementRolling;[669];[669];0
org.apache.commons.math3.util.ResizableDoubleArrayTest.testAddElements;[669];[669];0
org.apache.commons.math3.util.ResizableDoubleArrayTest.testCompute;[669];[669];0
org.apache.commons.math3.util.ResizableDoubleArrayTest.testConstructors;[669];[669];0
org.apache.commons.math3.util.ResizableDoubleArrayTest.testDiscard;[669];[669];0
org.apache.commons.math3.util.ResizableDoubleArrayTest.testEqualsAndHashCode;[669];[669];0
org.apache.commons.math3.util.ResizableDoubleArrayTest.testGetArrayRef;[669];[669];0
org.apache.commons.math3.util.ResizableDoubleArrayTest.testGetValues;[669];[669];0
org.apache.commons.math3.util.ResizableDoubleArrayTest.testMinMax;[669];[669];0
org.apache.commons.math3.util.ResizableDoubleArrayTest.testMutators;[669];[669];0
org.apache.commons.math3.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion1;[669];[669];0
org.apache.commons.math3.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion2;[669];[669];0
org.apache.commons.math3.util.ResizableDoubleArrayTest.testSetNumberOfElements;[669];[669];0
org.apache.commons.math3.util.ResizableDoubleArrayTest.testSubstitute;[669];[669];0
org.apache.commons.math3.util.ResizableDoubleArrayTest.testWithInitialCapacity;[669];[669];0
org.apache.commons.math3.util.ResizableDoubleArrayTest.testWithInitialCapacityAndExpansionFactor;[669];[669];0
org.apache.commons.math3.util.TransformerMapTest.testClasses;[2900, 2901];[2900, 2901];0
org.apache.commons.math3.util.TransformerMapTest.testClear;[2901, 2902, 2903];[2901, 2902, 2903];0
org.apache.commons.math3.util.TransformerMapTest.testContainsClass;[2901, 2902];[2901, 2902];0
org.apache.commons.math3.util.TransformerMapTest.testContainsTransformer;[2901, 2904];[2901, 2904];0
org.apache.commons.math3.util.TransformerMapTest.testPutTransformer;[2509, 2878, 2901];[2509, 2878, 2901];0
org.apache.commons.math3.util.TransformerMapTest.testRemoveTransformer;[2901, 2902, 2904, 2905];[2901, 2902, 2904, 2905];0
org.apache.commons.math3.util.TransformerMapTest.testSerial;[2878, 2901, 2906];[2878, 2901, 2906];0
org.apache.commons.math3.util.TransformerMapTest.testTransformers;[2901, 2907];[2901, 2907];0
